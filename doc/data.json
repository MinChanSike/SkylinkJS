{
    "project": {
        "name": "skylinkjs",
        "description": "SkylinkJS is an open-source client-side library for your web-browser that enables any website to easily leverage the capabilities of WebRTC and its direct data streaming powers between peers for audio/video conferencing or file transfer.",
        "version": "0.6.13",
        "url": "https://temasys.github.io/"
    },
    "files": {
        "source/template/header.js": {
            "name": "source/template/header.js",
            "modules": {},
            "classes": {
                "Skylink": 1
            },
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/data-channel.js": {
            "name": "source/data-channel.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/data-process.js": {
            "name": "source/data-process.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/data-transfer.js": {
            "name": "source/data-transfer.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/ice-candidate.js": {
            "name": "source/ice-candidate.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/ice-connection.js": {
            "name": "source/ice-connection.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/peer-connection.js": {
            "name": "source/peer-connection.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/peer-data.js": {
            "name": "source/peer-data.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/peer-handshake.js": {
            "name": "source/peer-handshake.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/peer-privileged.js": {
            "name": "source/peer-privileged.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/room-connection.js": {
            "name": "source/room-connection.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/room-init.js": {
            "name": "source/room-init.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/skylink-debug.js": {
            "name": "source/skylink-debug.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/skylink-events.js": {
            "name": "source/skylink-events.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/socket-channel.js": {
            "name": "source/socket-channel.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/socket-message.js": {
            "name": "source/socket-message.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/stream-media.js": {
            "name": "source/stream-media.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/stream-sdp.js": {
            "name": "source/stream-sdp.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Skylink": {
            "name": "Skylink",
            "shortname": "Skylink",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/template/header.js",
            "line": 120,
            "description": "<h2>Prerequisites on using Skylink</h2>\nBefore using any Skylink functionalities, you will need to authenticate your App Key using\n  the <a href=\"#method_init\">`init()` method</a>.\n\nTo manage or create App Keys, you may access the [Skylink Developer Portal here](http://developer.temasys.com.sg/).\n\nTo view the list of supported browsers, visit [the list here](\nhttps://github.com/Temasys/SkylinkJS#supported-browsers).\n\nHere are some articles to help you get started:\n- [How to setup a simple video call](https://temasys.com.sg/getting-started-with-webrtc-and-skylinkjs/)\n- [How to setup screensharing](https://temasys.com.sg/screensharing-with-skylinkjs/)\n- [How to create a chatroom like feature](https://temasys.com.sg/building-a-simple-peer-to-peer-webrtc-chat/)\n\nHere are some demos you may use to aid your development:\n- Getaroom.io [[Demo](https://getaroom.io) / [Source code](https://github.com/Temasys/getaroom)]\n- Creating a component [[Link](https://github.com/Temasys/skylink-call-button)]\n\nYou may see the example below in the <a href=\"#\">Constructor tab</a> to have a general idea how event subscription\n  and the ordering of <a href=\"#method_init\"><code>init()</code></a> and\n  <a href=\"#method_joinRoom\"><code>joinRoom()</code></a> methods should be called.\n\nIf you have any issues, you may find answers to your questions in the FAQ section on [our support portal](\nhttp://support.temasys.com.sg), asks questions, request features or raise bug tickets as well.\n\nIf you would like to contribute to our SkylinkJS codebase, see [the contributing README](\nhttps://github.com/Temasys/SkylinkJS/blob/master/CONTRIBUTING.md).\n\n[See License (Apache 2.0)](https://github.com/Temasys/SkylinkJS/blob/master/LICENSE)",
            "is_constructor": 1,
            "example": [
                "\n  // Here's a simple example on how you can start using Skylink.\n  var skylinkDemo = new Skylink();\n\n  // Subscribe all events first as a general guideline\n  skylinkDemo.on(\"incomingStream\", function (peerId, stream, peerInfo, isSelf) {\n    if (isSelf) {\n      attachMediaStream(document.getElementById(\"selfVideo\"), stream);\n    } else {\n      var peerVideo = document.createElement(\"video\");\n      peerVideo.id = peerId;\n      peerVideo.autoplay = \"autoplay\";\n      document.getElementById(\"peersVideo\").appendChild(peerVideo);\n      attachMediaStream(peerVideo, stream);\n    }\n  });\n\n  skylinkDemo.on(\"peerLeft\", function (peerId, peerInfo, isSelf) {\n    if (!isSelf) {\n      var peerVideo = document.getElementById(peerId);\n      // do a check if peerVideo exists first\n      if (peerVideo) {\n        document.getElementById(\"peersVideo\").removeChild(peerVideo);\n      } else {\n        console.error(\"Peer video for \" + peerId + \" is not found.\");\n      }\n    }\n  });\n\n // init() should always be called first before other methods other than event methods like on() or off().\n skylinkDemo.init(\"YOUR_APP_KEY_HERE\", function (error, success) {\n   if (success) {\n     skylinkDemo.joinRoom(\"my_room\", {\n       userData: \"My Username\",\n       audio: true,\n       video: true\n     });\n   }\n });"
            ],
            "since": "0.5.0"
        }
    },
    "classitems": [
        {
            "file": "source/template/header.js",
            "line": 5,
            "description": "Polyfill for Object.keys() from Mozilla\nFrom https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys",
            "class": "Skylink"
        },
        {
            "file": "source/template/header.js",
            "line": 45,
            "description": "Polyfill for Date.getISOString() from Mozilla\nFrom https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString",
            "class": "Skylink"
        },
        {
            "file": "source/template/header.js",
            "line": 69,
            "description": "Polyfill for addEventListener() from Eirik Backer @eirikbacker (github.com).\nFrom https://gist.github.com/eirikbacker/2864711\nMIT Licensed",
            "class": "Skylink"
        },
        {
            "file": "source/template/header.js",
            "line": 103,
            "description": "Global function that clones an object.",
            "class": "Skylink"
        },
        {
            "file": "source/template/header.js",
            "line": 201,
            "description": "Contains the current version of Skylink Web SDK.",
            "itemtype": "attribute",
            "name": "VERSION",
            "type": "String",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/template/header.js",
            "line": 211,
            "description": "Function that generates an <a href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier\">UUID</a> (Unique ID).",
            "itemtype": "method",
            "name": "generateUUID",
            "return": {
                "description": "Returns a generated UUID (Unique ID).",
                "type": "String"
            },
            "since": "0.5.9",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 1,
            "description": "Contains the list of Datachannel connection states.",
            "itemtype": "attribute",
            "name": "DATA_CHANNEL_STATE",
            "params": [
                {
                    "name": "CONNECTING",
                    "description": "<small>Value <code>\"connecting\"</code></small>\n  The state when Datachannel is attempting to establish a connection.",
                    "type": "String"
                },
                {
                    "name": "OPEN",
                    "description": "<small>Value <code>\"open\"</code></small>\n  The state when Datachannel has established a connection.",
                    "type": "String"
                },
                {
                    "name": "CLOSING",
                    "description": "<small>Value <code>\"closing\"</code></small>\n  The state when Datachannel connection is closing.",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "<small>Value <code>\"closed\"</code></small>\n  The state when Datachannel connection has closed.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "<small>Value <code>\"error\"</code></small>\n  The state when Datachannel connection has errors.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 27,
            "description": "Contains the list of Datachannel types.",
            "itemtype": "attribute",
            "name": "DATA_CHANNEL_TYPE",
            "params": [
                {
                    "name": "MESSAGING",
                    "description": "<small>Value <code>\"messaging\"</code></small>\n  The Datachannel type that is used for messaging in\n  <a href=\"#method_sendP2PMessage\"><code>sendP2PMessage()</code> method</a>.\n  This Datachannel type exists only once and may be used for data transfers (1 simultaneously) when\n  Peer does not support simultaneous data transfers.\n  The connection will only close when the Peer connection is closed.",
                    "type": "String"
                },
                {
                    "name": "DATA",
                    "description": "<small>Value <code>\"data\"</code></small>\n  The Datachannel type that is used only for a data transfer.\n  This Datachannel type may exists multiple times depending on the number of data transfers that\n  is currently going on. The connection will close after the data transfer has been completed or terminated.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 50,
            "description": "Stores the flag if Peers should have any Datachannel connections.",
            "itemtype": "attribute",
            "name": "_enableDataChannel",
            "default": "true",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 61,
            "description": "Stores the list of Peer Datachannel connections.",
            "itemtype": "attribute",
            "name": "_dataChannels",
            "params": [
                {
                    "name": "(#peerId)",
                    "description": "The list of Datachannels associated with Peer ID.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "<#channelLabel>",
                            "description": "The Datachannel connection.\n  The property name <code>\"main\"</code> is reserved for messaging Datachannel type.",
                            "type": "RTCDataChannel"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 74,
            "description": "Function that starts a Datachannel connection with Peer.",
            "itemtype": "method",
            "name": "_createDataChannel",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 239,
            "description": "Function that sends data over the Datachannel connection.",
            "itemtype": "method",
            "name": "_sendDataChannelMessage",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 297,
            "description": "Function that stops the Datachannel connection and removes object references.",
            "itemtype": "method",
            "name": "_closeDataChannel",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 1,
            "description": "<blockquote class=\"info\">\n  Currently, we do not support Blob or ArrayBuffer data type of transfers, but we\n  will look into implementing it in the future.\n</blockquote>\nContains the list of supported data transfer data types.",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_DATA_TYPE",
            "params": [
                {
                    "name": "BINARY_STRING",
                    "description": "<small>Value <code>\"binaryString\"</code></small>\n  The type that sends all data packets as string (or converts them into string) when\n  transferring data over the Datachannel connection.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 22,
            "description": "Stores the data chunk size for Blob transfers.",
            "itemtype": "attribute",
            "name": "_CHUNK_FILE_SIZE",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 33,
            "description": "Stores the data chunk size for Blob transfers transferring from/to\n  Firefox browsers due to limitation tested in the past in some PCs (linx predominatly).",
            "itemtype": "attribute",
            "name": "_MOZ_CHUNK_FILE_SIZE",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 45,
            "description": "Stores the data chunk size for data URI string transfers.",
            "itemtype": "attribute",
            "name": "_CHUNK_DATAURL_SIZE",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 56,
            "description": "Function that converts Base64 string into Blob object.\nThis is referenced from devnull69@stackoverflow.com #6850276.",
            "itemtype": "method",
            "name": "_base64ToBlob",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 76,
            "description": "Function that converts a Blob object into Base64 string.",
            "itemtype": "method",
            "name": "_blobToBase64",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 93,
            "description": "Function that chunks Blob object based on the data chunk size provided.\nIf provided Blob object size is lesser than or equals to the chunk size, it should return an array\n  of length of <code>1</code>.",
            "itemtype": "method",
            "name": "_chunkBlobData",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 125,
            "description": "Function that chunks large string into string chunks based on the data chunk size provided.\nIf provided string length is lesser than or equals to the chunk size, it should return an array\n  of length of <code>1</code>.",
            "itemtype": "method",
            "name": "_chunkDataURL",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 159,
            "description": "Function that assembles the data string chunks into a large string.",
            "itemtype": "method",
            "name": "_assembleDataURL",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1,
            "description": "<blockquote class=\"info\">\n  Note that this is used only for SDK developer purposes.<br>\n  Current version: <code>0.1.0</code>\n</blockquote>\nContains the current version of the data transfer protocol.",
            "itemtype": "attribute",
            "name": "DT_PROTOCOL_VERSION",
            "type": "String",
            "readonly": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 15,
            "description": "Contains the list of data transfers directions.",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_TYPE",
            "params": [
                {
                    "name": "UPLOAD",
                    "description": "<small>Value <code>\"upload\"</code></small>\n  The direction that indicates that transfer is uploading data from User to Peer.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD",
                    "description": "<small>Value <code>\"download\"</code></small>\n  The direction that indicates that transfer is downloading data from Peer to User.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 32,
            "description": "Contains the list of data transfer states.",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_STATE",
            "params": [
                {
                    "name": "UPLOAD_REQUEST",
                    "description": "<small>Value <code>\"request\"</code></small>\n  The state when receiving a uploading data transfer request from Peer to User.\n  <small>At this stage, you may allow users to accept or reject the data transfer request from Peer\n    using the the <a href=\"#method_acceptDataTransfer\"><code>acceptDataTransfer()</code> method</a>.</small>",
                    "type": "String"
                },
                {
                    "name": "UPLOAD_STARTED",
                    "description": "<small>Value <code>\"uploadStarted\"</code></small>\n  The state when Peer has accepted data transfer request and data is transferring to Peer.\n  <small>At this stage, you may allow users to terminate the data transfer progress from Peer\n    using the the <a href=\"#method_cancelDataTransfer\"><code>cancelDataTransfer()</code> method</a>.</small>",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD_STARTED",
                    "description": "<small>Value <code>\"downloadStarted\"</code></small>\n  The state when data transfer request from Peer has been accepted and data is transferring from Peer.\n  <small>At this stage, you may allow users to terminate the data transfer progress to Peer\n    using the the <a href=\"#method_cancelDataTransfer\"><code>cancelDataTransfer()</code> method</a>.</small>",
                    "type": "String"
                },
                {
                    "name": "REJECTED",
                    "description": "<small>Value <code>\"rejected\"</code></small>\n  The state when data transfer request has been rejected from Peer.",
                    "type": "String"
                },
                {
                    "name": "UPLOADING",
                    "description": "<small>Value <code>\"uploading\"</code></small>\n  The state when data transfer is transferring in progress to Peer.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOADING",
                    "description": "<small>Value <code>\"downloading\"</code></small>\n  The state when data transfer is transferring in progress from Peer.",
                    "type": "String"
                },
                {
                    "name": "UPLOAD_COMPLETED",
                    "description": "<small>Value <code>\"uploadCompleted\"</code></small>\n  The state when data transfer to Peer has completed.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD_COMPLETED",
                    "description": "<small>Value <code>\"downloadCompleted\"</code></small>\n  The state when data transfer from Peer has completed.",
                    "type": "String"
                },
                {
                    "name": "CANCEL",
                    "description": "<small>Value <code>\"cancel\"</code></small>\n  The state when data transfer from/to Peer has been terminated.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "<small>Value <code>\"error\"</code></small>\n  The state when data transfer has errors and terminated.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 79,
            "description": "Stores the fixed delimiter that concats the Datachannel label and actual transfer ID.",
            "itemtype": "attribute",
            "name": "_TRANSFER_DELIMITER",
            "type": "String",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 90,
            "description": "Stores the list of data transfer protocols.",
            "itemtype": "attribute",
            "name": "_DC_PROTOCOL_TYPE",
            "params": [
                {
                    "name": "WRQ",
                    "description": "The protocol to initiate data transfer.",
                    "type": "String"
                },
                {
                    "name": "ACK",
                    "description": "The protocol to request for data transfer chunk.\n  Give <code>-1</code> to reject the request at the beginning and <code>0</code> to accept\n  the data transfer request.",
                    "type": "String"
                },
                {
                    "name": "CANCEL",
                    "description": "The protocol to terminate data transfer.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "The protocol when data transfer has errors and has to be terminated.",
                    "type": "String"
                },
                {
                    "name": "MESSAGE",
                    "description": "The protocol that is used to send P2P messages.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 114,
            "description": "Stores the list of types of SDKs that do not support simultaneous data transfers.",
            "itemtype": "attribute",
            "name": "_INTEROP_MULTI_TRANSFERS",
            "type": "Array",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 125,
            "description": "Stores the list of uploading data transfers chunks to Peers.",
            "itemtype": "attribute",
            "name": "_uploadDataTransfers",
            "params": [
                {
                    "name": "<#transferId>",
                    "description": "The uploading data transfer chunks.",
                    "type": "Array"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 136,
            "description": "Stores the list of uploading data transfer sessions to Peers.",
            "itemtype": "attribute",
            "name": "_uploadDataSessions",
            "params": [
                {
                    "name": "<#transferId>",
                    "description": "The uploading data transfer session.",
                    "type": "JSON"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 147,
            "description": "Stores the list of downloading data transfers chunks to Peers.",
            "itemtype": "attribute",
            "name": "_downloadDataTransfers",
            "params": [
                {
                    "name": "<#transferId>",
                    "description": "The downloading data transfer chunks.",
                    "type": "Array"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 158,
            "description": "Stores the list of downloading data transfer sessions to Peers.",
            "itemtype": "attribute",
            "name": "_downloadDataSessions",
            "params": [
                {
                    "name": "<#transferId>",
                    "description": "The downloading data transfer session.",
                    "type": "JSON"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 169,
            "description": "Stores the list of data transfer \"wait-for-response\" timeouts.",
            "itemtype": "attribute",
            "name": "_dataTransfersTimeout",
            "params": [
                {
                    "name": "<#transferId>",
                    "description": "The data transfer session \"wait-for-response\" timeout.",
                    "type": "Object"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 180,
            "description": "<blockquote class=\"info\">\n  Currently, the data transfers to the Android and iOS have interopability issues as noted\n  in <a href=\"http://support.temasys.com.sg/support/discussions/topics/12000002852\">an issue here</a>.<br>\n  Additionally, the Android and iOS SDKs do not support simultaneous data transfers.\n</blockquote>\nFunction that starts an uploading data transfer from User to Peers.",
            "itemtype": "method",
            "name": "sendBlobData",
            "params": [
                {
                    "name": "data",
                    "description": "The Blob object to transfer to Peer.",
                    "type": "Blob"
                },
                {
                    "name": "timeout",
                    "description": "The timeout to wait for response from Peer. Once timeout is reached without\n  response, the data transfer is terminated.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "60"
                },
                {
                    "name": "targetPeerId",
                    "description": "The target Peer ID to only start the data transfer with.<br>\n- When provided as an Array, it will start the data transfers with all the Peer IDs provided.<br>\n- When not provided, it will start the data transfers with all the currently connected Peers.",
                    "type": "String|Array",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "transferId",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.error.transferInfo.transferId</code> instead.\n  </blockquote> The data transfer ID.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "String"
                                },
                                {
                                    "name": "state",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <a href=\"#event_dataTransferState\"><code>dataTransferState</code>\n  event</a> instead. </blockquote> The data transfer state that resulted in error.\n  <small>Defined only for single targeted Peer data transfer.</small> [Rel: Skylink.DATA_TRANSFER_STATE]",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.error.listOfPeers</code> instead.\n  </blockquote> The targeted Peer ID for data transfer.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "String"
                                },
                                {
                                    "name": "isPrivate",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.error.transferInfo.isPrivate</code> instead.\n  </blockquote> The flag that indicates if data transfer is targeted or not, basing\n  off the <code>targetPeerId</code> parameter being defined.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "error",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.error.transferErrors</code> instead.\n  </blockquote> The error received that resulted in error.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "Error|String"
                                },
                                {
                                    "name": "listOfPeers",
                                    "description": "The list Peer IDs targeted for the data transfer.",
                                    "type": "Array"
                                },
                                {
                                    "name": "transferErrors",
                                    "description": "The list of data transfer errors.\n<small>If there is <code>\"self\"</code> property, it's likely due to having no Peers to start data transfers with.</small>",
                                    "type": "JSON"
                                },
                                {
                                    "name": "transferErrors.<#peerId>",
                                    "description": "The data transfer error associated\n  with the Peer ID property name.",
                                    "type": "Error|String"
                                },
                                {
                                    "name": "transferInfo",
                                    "description": "The data transfer information.\n  <small>Object signature matches the <code>transferInfo</code> parameter payload received in the\n     <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a>.</small>",
                                    "type": "JSON"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "transferId",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.success.transferInfo.transferId</code> instead.\n  </blockquote> The data transfer ID.",
                                    "type": "String"
                                },
                                {
                                    "name": "state",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <a href=\"#event_dataTransferState\"><code>dataTransferState</code>\n  event</a> instead. </blockquote> The data transfer state that resulted in error.\n  <small>Defined only for single targeted Peer data transfer.</small> [Rel: Skylink.DATA_TRANSFER_STATE]",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.success.listOfPeers</code> instead.\n  </blockquote> The targeted Peer ID for data transfer.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "String"
                                },
                                {
                                    "name": "isPrivate",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.success.transferInfo.isPrivate</code> instead.\n  </blockquote> The flag that indicates if data transfer is targeted or not, basing\n  off the <code>targetPeerId</code> parameter being defined.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "listOfPeers",
                                    "description": "The list Peer IDs targeted for the data transfer.",
                                    "type": "Array"
                                },
                                {
                                    "name": "transferInfo",
                                    "description": "The data transfer information.\n  <small>Object signature matches the <code>transferInfo</code> parameter payload received in the\n     <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a>.</small>",
                                    "type": "JSON"
                                }
                            ]
                        }
                    ]
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>Opens a new Datachannel connection with targeted Peers.<ul>\n     <li>Triggers <a href=\"#event_dataChannelState\">\n     <code>dataChannelState</code> event</a> with parameter payload <code>channelType</code> as\n     <code>DATA</code>.</li></ul></li>\n  <li>Starts sending data transfer requests to targeted Peers when the Datachannel connections are opened.<ul>\n     <li>For Peers that do not support simultaneous data transfers, the <code>MESSAGING</code> Datachannel type connection\n     will be used. Note that only 1 simultaneous data transfer an occur between the Peers and the User.</li>\n     <li>For Peers that do not have any Datachannel connections or that the <code>MESSAGING</code> Datachannel type\n     connection is not opened, the data transfer to the Peers will be terminated.</li>\n     <li>For data transfers from <code>sendBlobData()</code> method, the value of the parameter\n        payload of <code>transferInfo.dataType</code> in <a href=\"#event_dataTransferState\">\n        <code>dataTransferState</code> event</a>, <a href=\"#event_incomingDataRequest\">\n        <code>incomingDataRequest</code> event</a> and <a href=\"#event_incomingData\">\n        <code>incomingData</code> event</a> is <code>\"blob\"</code></li></ul></li>\n  <li>Peers receive the data transfer request received from User. <ul>\n      <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with paramter payload\n      <code>state</code> as <code>UPLOAD_REQUEST</code> for Peers.</li>\n      <li>Triggers <a href=\"#event_incomingDataRequest\"><code>incomingDataRequest</code> event</a>.</li>\n      <li>Peers can accept or reject the data transfer request with the <a href=\"#method_acceptDataTransfer\">\n      <code>acceptDataTransfer()</code> method</a>.</li></ul></li>\n  <li>User receive data transfer request response from each Peer. <ul>\n      <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with parameter payload\n      <code>state</code> as <code>UPLOAD_STARTED</code> when Peer accepts data transfer request and data transfer to Peer\n      has started.</li>\n       <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with parameter payload\n      <code>state</code> as <code>REJECTED</code> when Peer rejects data transfer request and data transfer to Peer\n      has been terminated.</li></ul></li>\n  <li>Starts sending data to Peers.<ul>\n      <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with parameter payload\n      <code>state</code> as <code>UPLOADING</code> for User when data transfer is in-progress.</li>\n      <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with parameter payload\n      <code>state</code> as <code>DOWNLOADING</code> for Peers when data transfer is in-progress.</li></ul></li>\n  <li>Completes data transfer to Peers.<ul>\n      <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with parameter payload\n      <code>state</code> as <code>UPLOAD_COMPLETED</code> for User.</li>\n      <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with parameter payload\n      <code>state</code> as <code>DOWNLOAD_COMPLETED</code> for Peers.</li>\n      <li>Triggers <a href=\"#event_incomingData\"><code>incomingData</code> event</a>.</li></ul></li>\n  <li>Closes the Datachannel connection with targeted Peers.<ul>\n      <li>Triggers <a href=\"#event_dataChannelState\">\n      <code>dataChannelState</code> event</a> with parameter payload <code>state</code> as <code>CLOSED</code> and\n      <code>channelType</code> as <code>DATA</code>.</li></ul></li>\n  </ol>",
            "example": [
                " &lt;body&gt;\n  &lt;input type=\"file\" onchange=\"uploadFile(this.Files)\"&gt;\n  &lt;script&gt;\n    function uploadFile(files) {\n      skylinkDemo.sendBlobData(files[0], function (err, success) {\n        if (err) {\n          // sendBlobData() error\n          return;\n        }\n        // sendBlobData() success;\n      });\n    }\n  &lt;/script&gt;\n &lt;/body&gt;"
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 465,
            "description": "<blockquote class=\"info\">\n  Currently, the data transfers to the Android and iOS have interopability issues as noted\n  in <a href=\"http://support.temasys.com.sg/support/discussions/topics/12000002852\">an issue here</a>.<br>\n  <b>Deprecation Warning!</b> This method has been deprecated, please use <a href=\"#method_acceptDataTransfer\">\n  <code>acceptDataTransfer()</code> method</a> instead.\n</blockquote>\nFunction that accepts or rejects an uploading data transfer request from Peer to User.",
            "itemtype": "method",
            "name": "respondBlobRequest",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID of the data transfer request from Peer.",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "The data transfer ID.",
                    "type": "String"
                },
                {
                    "name": "accept",
                    "description": "The flag to accept or reject the data transfer request from Peer.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>Checks if there is an existing data transfer request from Peer based on the\n     <code>peerId</code> and <code>transferId</code> method parameters provided.</li>\n  <li>Starts sending the response to Peer.<ul>\n     <li>If User accepts the data transfer request, the downloading data transfer will begin from Peer.\n        This triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code>\n        event</a> with parameter payload <code>state</code> as <code>DOWNLOAD_STARTED</code>.</li>\n     <li>If User rejects the data transfer request, the data transfer will be terminated. This triggers\n        <a href=\"#event_dataTranferState\"><code>dataTransferState</code> event</a> with parameter payload\n        <code>state</code> as <code>REJECTED</code> for Peer.</li></ul></li>\n  </ol>",
            "example": [
                "\n  skylinkDemo.on(\"dataTransferState\", function (state, transferId, peerId) {\n     if (state === skylinkDemo.DATA_TRANSFER_STATE.UPLOAD_REQUEST) {\n       skylinkDemo.respondBlobRequest(peerId, transferId, confirm(\"Accept File from \" + peerId + \"?\"));\n     }\n  });"
            ],
            "deprecated": true,
            "deprecationMessage": "true",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 499,
            "description": "<blockquote class=\"info\">\n  Currently, the data transfers to the Android and iOS have interopability issues as noted\n  in <a href=\"http://support.temasys.com.sg/support/discussions/topics/12000002852\">an issue here</a>.\n</blockquote>\nFunction that accepts or rejects an uploading data transfer request from Peer to User.",
            "itemtype": "method",
            "name": "acceptDataTransfer",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID of the data transfer request from Peer.",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "The data transfer ID.",
                    "type": "String"
                },
                {
                    "name": "accept",
                    "description": "The flag to accept or reject the data transfer request from Peer.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>Checks if there is an existing data transfer request from Peer based on the\n     <code>peerId</code> and <code>transferId</code> method parameters provided.</li>\n  <li>Starts sending the response to Peer.<ul>\n     <li>If User accepts the data transfer request, the downloading data transfer will begin from Peer.\n        This triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code>\n        event</a> with parameter payload <code>state</code> as <code>DOWNLOAD_STARTED</code>.</li>\n     <li>If User rejects the data transfer request, the data transfer will be terminated. This triggers\n        <a href=\"#event_dataTranferState\"><code>dataTransferState</code> event</a> with parameter payload\n        <code>state</code> as <code>REJECTED</code> for Peer.</li></ul></li>\n  </ol>",
            "example": [
                "\n  skylinkDemo.on(\"dataTransferState\", function (state, transferId, peerId) {\n     if (state === skylinkDemo.DATA_TRANSFER_STATE.UPLOAD_REQUEST) {\n       skylinkDemo.acceptDataTransfer(peerId, transferId, confirm(\"Accept File from \" + peerId + \"?\"));\n     }\n  });"
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 601,
            "description": "<blockquote class=\"info\">\n  Currently, the data transfers to the Android and iOS have interopability issues as noted\n  in <a href=\"http://support.temasys.com.sg/support/discussions/topics/12000002852\">an issue here</a>.<br>\n  <b>Deprecation Warning!</b> This method has been deprecated, please use <a href=\"#method_cancelDataTransfer\">\n  <code>method_cancelDataTransfer()</code> method</a> instead.\n</blockquote>\nFunction that terminates a data transfer.",
            "itemtype": "method",
            "name": "cancelBlobTransfer",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID of the data transfer from/to Peer.",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "The data transfer ID.",
                    "type": "String"
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n <li>Checks if there is an existing data transfer request from Peer based on the\n   <code>peerId</code> and <code>transferId</code> method parameters provided.<ul>\n   <li>Note that User can only terminate data transfer with Peer when <a href=\"#event_dataTransferState\">\n      <code>dataTransferState</code> event</a> parameter payload <code>state</code> is at\n      <code>DOWNLOADING</code>, <code>UPLOADING</code>, <code>DOWNLOAD_STARTED</code> or <code>UPLOAD_STARTED</code>\n   </li></ul></li>\n <li>Terminates data transfer from/to Peer.<ul>\n   <li>This triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a>\n     with parameter payload <code>state</code> as <code>CANCEL</code>.</li></ul></li>\n </ol>",
            "example": [
                "\n  var transferSessions = {};\n\n  skylinkDemo.on(\"dataTransferState\", function (state, transferId, peerId) {\n     if ([skylinkDemo.DATA_TRANSFER_STATE.DOWNLOAD_STARTED,\n          skylinkDemo.DATA_TRANSFER_STATE.UPLOAD_STARTED].indexOf(state) > -1) {\n       if (!Array.isArray(transferSessions[transferId])) {\n         transferSessions[transferId] = [];\n       }\n       transferSessions[transferId].push(peerId);\n       // Display UI button for transfer in-progress and cancel\n     } else if ([skylinkDemo.DATA_TRANSFER_STATE.CANCEL,\n          skylinkDemo.DATA_TRANSFER_STATE.ERROR,\n          skylinkDemo.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,\n          skylinkDemo.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED].indexOf(state) > -1) {\n        var foundIndex = transferSessions[transferId].indexOf(peerId);\n        if (foundIndex > -1) {\n          transferSessions[transferId].splice(foundIndex, 1);\n        }\n     }\n  });\n\n  function cancelTransfer (peerId, transferId) {\n    skylinkDemo.cancelBlobTransfer(peerId, transferId);\n  }"
            ],
            "deprecated": true,
            "deprecationMessage": "true",
            "since": "0.5.7",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 655,
            "description": "<blockquote class=\"info\">\n  Currently, the data transfers to the Android and iOS have been interopability issues as noted\n  in <a href=\"http://support.temasys.com.sg/support/discussions/topics/12000002852\">an issue here</a>.\n</blockquote>\nFunction that terminates a data transfer.",
            "itemtype": "method",
            "name": "cancelDataTransfer",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID of the data transfer from/to Peer.",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "The data transfer ID.",
                    "type": "String"
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n <li>Checks if there is an existing data transfer request from Peer based on the\n   <code>peerId</code> and <code>transferId</code> method parameters provided.<ul>\n   <li>Note that User can only terminate data transfer with Peer when <a href=\"#event_dataTransferState\">\n      <code>dataTransferState</code> event</a> parameter payload <code>state</code> is at\n      <code>DOWNLOADING</code>, <code>UPLOADING</code>, <code>DOWNLOAD_STARTED</code> or <code>UPLOAD_STARTED</code>\n   </li></ul></li>\n <li>Terminates data transfer from/to Peer.<ul>\n   <li>This triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a>\n     with parameter payload <code>state</code> as <code>CANCEL</code>.</li></ul></li>\n </ol>",
            "example": [
                "\n  var transferSessions = {};\n\n  skylinkDemo.on(\"dataTransferState\", function (state, transferId, peerId) {\n     if ([skylinkDemo.DATA_TRANSFER_STATE.DOWNLOAD_STARTED,\n          skylinkDemo.DATA_TRANSFER_STATE.UPLOAD_STARTED].indexOf(state) > -1) {\n       if (!Array.isArray(transferSessions[transferId])) {\n         transferSessions[transferId] = [];\n       }\n       transferSessions[transferId].push(peerId);\n       // Display UI button for transfer in-progress and cancel\n     } else if ([skylinkDemo.DATA_TRANSFER_STATE.CANCEL,\n          skylinkDemo.DATA_TRANSFER_STATE.ERROR,\n          skylinkDemo.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,\n          skylinkDemo.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED].indexOf(state) > -1) {\n        var foundIndex = transferSessions[transferId].indexOf(peerId);\n        if (foundIndex > -1) {\n          transferSessions[transferId].splice(foundIndex, 1);\n        }\n     }\n  });\n\n  function cancelTransfer (peerId, transferId) {\n    skylinkDemo.cancelDataTransfer(peerId, transferId);\n  }"
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 779,
            "description": "<blockquote class=\"info\">\n  Note that message Datachannel type connection MUST be opened first before this\n  functionality would work.<br>\n  The estimated maximum size for the string to be sent over is about <code>16 kB</code>. If\n  you are considering to send large string to Peers, please use the <a href=\"#method_sendURLData\">\n<code>sendURLData()</code> method</a>.\n</blockquote>\nFunction that sends a P2P message from User to Peers using the Datachannel connection.",
            "itemtype": "method",
            "name": "sendP2PMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message.",
                    "type": "String|JSON"
                },
                {
                    "name": "targetPeerId",
                    "description": "The target Peer ID to only send the P2P message to.<br>\n- When provided as an Array, it will send the P2P message to all the Peer IDs provided.<br>\n- When not provided, it will send the P2P message to all the currently connected Peers.",
                    "type": "String|Array",
                    "optional": true
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n <li>Checks if Datachannel connection <code>MESSAGING</code> type if opened</li>\n <li>Sends P2P message to Peers.<ul>\n   <li>Triggers <a href=\"#event_incomingMessage\"><code>incomingMessage</code> event</a>\n     with parameter payload <code>isSelf</code> value as <code>true</code> for User and\n     <code>false</code> for receiving Peers.</li></ul></li>\n </ol>",
            "example": [
                "\n  skylinkDemo.on(\"dataChannelState\", function (state, peerId, error, channelName, channelType) {\n     if (state === skylinkDemo.DATA_CHANNEL_STATE.OPEN &&\n       channelType === skylinkDemo.DATA_CHANNEL_TYPE.MESSAGING) {\n       skylinkDemo.sendP2PMessage(\"test\", peerId);\n     }\n  });"
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 885,
            "description": "<blockquote class=\"info\">\n  Currently, the Android and iOS SDKs do not support this type of data transfer.\n</blockquote>\nFunction that starts an uploading string data transfer from User to Peers.",
            "itemtype": "method",
            "name": "sendURLData",
            "params": [
                {
                    "name": "data",
                    "description": "The data string to transfer to Peer.",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "The timeout to wait for response from Peer. Once timeout is reached without\n  response, the data transfer is terminated.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "60"
                },
                {
                    "name": "targetPeerId",
                    "description": "The target Peer ID to only start the data transfer with.<br>\n- When provided as an Array, it will start the data transfers with all the Peer IDs provided.<br>\n- When not provided, it will start the data transfers with all the currently connected Peers.",
                    "type": "String|Array",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "transferId",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.error.transferInfo.transferId</code> instead.\n  </blockquote> The data transfer ID.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "String"
                                },
                                {
                                    "name": "state",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <a href=\"#event_dataTransferState\"><code>dataTransferState</code>\n  event</a> instead. </blockquote> The data transfer state that resulted in error.\n  <small>Defined only for single targeted Peer data transfer.</small> [Rel: Skylink.DATA_TRANSFER_STATE]",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.error.listOfPeers</code> instead.\n  </blockquote> The targeted Peer ID for data transfer.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "String"
                                },
                                {
                                    "name": "isPrivate",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.error.transferInfo.isPrivate</code> instead.\n  </blockquote> The flag that indicates if data transfer is targeted or not, basing\n  off the <code>targetPeerId</code> parameter being defined.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "error",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.error.transferErrors</code> instead.\n  </blockquote> The error received that resulted in error.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "Error|String"
                                },
                                {
                                    "name": "listOfPeers",
                                    "description": "The list Peer IDs targeted for the data transfer.",
                                    "type": "Array"
                                },
                                {
                                    "name": "transferErrors",
                                    "description": "The list of data transfer errors.\n  <small>If there is <code>\"self\"</code> property, it's likely due to having no Peers to start data transfer with.</small>",
                                    "type": "JSON"
                                },
                                {
                                    "name": "transferErrors.<#peerId>",
                                    "description": "The data transfer error associated\n  with the Peer ID property name.",
                                    "type": "Error|String"
                                },
                                {
                                    "name": "transferInfo",
                                    "description": "The data transfer information.\n  <small>Object signature matches the <code>transferInfo</code> parameter payload received in the\n     <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a>.</small>",
                                    "type": "JSON"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "transferId",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.success.transferInfo.transferId</code> instead.\n  </blockquote> The data transfer ID.",
                                    "type": "String"
                                },
                                {
                                    "name": "state",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <a href=\"#event_dataTransferState\"><code>dataTransferState</code>\n  event</a> instead. </blockquote> The data transfer state that resulted in error.\n  <small>Defined only for single targeted Peer data transfer.</small> [Rel: Skylink.DATA_TRANSFER_STATE]",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.success.listOfPeers</code> instead.\n  </blockquote> The targeted Peer ID for data transfer.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "String"
                                },
                                {
                                    "name": "isPrivate",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.success.transferInfo.isPrivate</code> instead.\n  </blockquote> The flag that indicates if data transfer is targeted or not, basing\n  off the <code>targetPeerId</code> parameter being defined.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "listOfPeers",
                                    "description": "The list Peer IDs targeted for the data transfer.",
                                    "type": "Array"
                                },
                                {
                                    "name": "transferInfo",
                                    "description": "The data transfer information.\n  <small>Object signature matches the <code>transferInfo</code> parameter payload received in the\n     <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a>.</small>",
                                    "type": "JSON"
                                }
                            ]
                        }
                    ]
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>Opens a new Datachannel connection with targeted Peers.<ul>\n     <li>Triggers <a href=\"#event_dataChannelState\">\n     <code>dataChannelState</code> event</a> with parameter payload <code>channelType</code> as\n     <code>DATA</code>.</li></ul></li>\n  <li>Starts sending data transfer requests to targeted Peers when the Datachannel connections are opened.<ul>\n     <li>For Peers that do not support simultaneous data transfers, the <code>MESSAGING</code> Datachannel type connection\n     will be used. Note that only 1 simultaneous data transfer an occur between the Peers and the User.</li>\n     <li>For Peers that do not have any Datachannel connections or that the <code>MESSAGING</code> Datachannel type\n     connection is not opened, the data transfer to the Peers will be terminated.</li>\n     <li>For data transfers from <code>sendURLData()</code> method, the value of the parameter\n        payload of <code>transferInfo.dataType</code> in <a href=\"#event_dataTransferState\">\n        <code>dataTransferState</code> event</a>, <a href=\"#event_incomingDataRequest\">\n        <code>incomingDataRequest</code> event</a> and <a href=\"#event_incomingData\">\n        <code>incomingData</code> event</a> is <code>\"dataURL\"</code></li></ul></li>\n  <li>Peers receive the data transfer request received from User. <ul>\n      <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with paramter payload\n      <code>state</code> as <code>UPLOAD_REQUEST</code> for Peers.</li>\n      <li>Triggers <a href=\"#event_incomingDataRequest\"><code>incomingDataRequest</code> event</a>.</li>\n      <li>Peers can accept or reject the data transfer request with the <a href=\"#method_acceptDataTransfer\">\n      <code>acceptDataTransfer()</code> method</a>.</li></ul></li>\n  <li>User receive data transfer request response from each Peer. <ul>\n      <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with parameter payload\n      <code>state</code> as <code>UPLOAD_STARTED</code> when Peer accepts data transfer request and data transfer to Peer\n      has started.</li>\n       <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with parameter payload\n      <code>state</code> as <code>REJECTED</code> when Peer rejects data transfer request and data transfer to Peer\n      has been terminated.</li></ul></li>\n  <li>Starts sending data to Peers.<ul>\n      <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with parameter payload\n      <code>state</code> as <code>UPLOADING</code> for User when data transfer is in-progress.</li>\n      <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with parameter payload\n      <code>state</code> as <code>DOWNLOADING</code> for Peers when data transfer is in-progress.</li></ul></li>\n  <li>Completes data transfer to Peers.<ul>\n      <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with parameter payload\n      <code>state</code> as <code>UPLOAD_COMPLETED</code> for User.</li>\n      <li>Triggers <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> with parameter payload\n      <code>state</code> as <code>DOWNLOAD_COMPLETED</code> for Peers.</li>\n      <li>Triggers <a href=\"#event_incomingData\"><code>incomingData</code> event</a>.</li></ul></li>\n  <li>Closes the Datachannel connection with targeted Peers.<ul>\n      <li>Triggers <a href=\"#event_dataChannelState\">\n      <code>dataChannelState</code> event</a> with parameter payload <code>state</code> as <code>CLOSED</code> and\n      <code>channelType</code> as <code>DATA</code>.</li></ul></li>\n  </ol>",
            "example": [
                " &lt;body&gt;\n  &lt;input type=\"file\" onchange=\"showImage(this.Files)\"&gt;\n  &lt;script&gt;\n    function showImage(files) {\n      var fr = new FileReader();\n      fr.onload = function () {\n        skylinkDemo.sendURLData(fr.result, function (err, success) {\n          if (err) {\n            // sendBlobData() error\n            return;\n          }\n          // sendBlobData() success;\n        });\n      };\n      fr.readAsDataURL(files[0]);\n    }\n  &lt;/script&gt;\n &lt;/body&gt;"
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1172,
            "description": "Function that sets the data transfer \"wait-for-response\" timeout.\nWhen there is not response after timeout, the data transfer will be terminated.",
            "itemtype": "method",
            "name": "_setDataChannelTimeout",
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1218,
            "description": "Function that stops and clears the data transfer \"wait-for-response\" timeout.",
            "itemtype": "method",
            "name": "_clearDataChannelTimeout",
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1236,
            "description": "Function that starts a data transfer to Peer.\nThis will open a new data type of Datachannel connection with Peer if\n  simultaneous data transfers is supported by Peer.",
            "itemtype": "method",
            "name": "_sendBlobDataToPeer",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1452,
            "description": "Function that handles the data received from Datachannel and\n  routes to the relevant data transfer protocol handler.",
            "itemtype": "method",
            "name": "_dataChannelProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1519,
            "description": "Function that handles the \"WRQ\" data transfer protocol.",
            "itemtype": "method",
            "name": "_WRQProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1573,
            "description": "Function that handles the \"ACK\" data transfer protocol.",
            "itemtype": "method",
            "name": "_ACKProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1720,
            "description": "Function that handles the \"MESSAGE\" data transfer protocol.",
            "itemtype": "method",
            "name": "_MESSAGEProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1740,
            "description": "Function that handles the \"ERROR\" data transfer protocol.",
            "itemtype": "method",
            "name": "_ERRORProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1780,
            "description": "Function that handles the \"CANCEL\" data transfer protocol.",
            "itemtype": "method",
            "name": "_CANCELProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1859,
            "description": "Function that handles the data transfer chunk received.",
            "itemtype": "method",
            "name": "_DATAProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 2084,
            "description": "Function that start the data transfer with the list of targeted Peer IDs provided.\nAt this stage, it will open a new Datachannel connection if simultaneous data transfers is\n  supported by Peer, or it will using the messaging type Datachannel connection.\nNote that 1 data transfer can occur at a time in 1 Datachannel connection.",
            "itemtype": "method",
            "name": "_startDataTransfer",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 1,
            "description": "Contains the list of Peer connection ICE gathering states.",
            "itemtype": "attribute",
            "name": "CANDIDATE_GENERATION_STATE",
            "params": [
                {
                    "name": "GATHERING",
                    "description": "<small>Value <code>\"gathering\"</code></small>\n  The state when Peer connection ICE is gathering candidates. The ICE\n  candidates that are gathered would be sent to the Peers so that the ICE\n  connection may be established after a suitable matching pair is found.",
                    "type": "String"
                },
                {
                    "name": "COMPLETED",
                    "description": "<small>Value <code>\"completed\"</code></small>\n  The state when Peer connection ICE has completed gathering candidates.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 21,
            "description": "Stores the list of buffered ICE candidates that is received before\n  remote session description is received and set.",
            "itemtype": "attribute",
            "name": "_peerCandidatesQueue",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The list of the Peer connection buffered ICE candidates received.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "<#index>",
                            "description": "The Peer connection buffered ICE candidate received.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 34,
            "description": "Stores the list of Peer connection ICE candidates.",
            "itemtype": "attribute",
            "name": "_gatheredCandidates",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The list of the Peer connection ICE candidates.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "sending",
                            "description": "The list of the Peer connection ICE candidates sent.",
                            "type": "JSON"
                        },
                        {
                            "name": "receiving",
                            "description": "The list of the Peer connection ICE candidates received.",
                            "type": "JSON"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.14",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 47,
            "description": "Function that handles the Peer connection gathered ICE candidate to be sent.",
            "itemtype": "method",
            "name": "_onIceCandidate",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 148,
            "description": "Function that buffers the Peer connection ICE candidate when received\n  before remote session description is received and set.",
            "itemtype": "method",
            "name": "_addIceCandidateToQueue",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 164,
            "description": "Function that handles when the Peer connection received ICE candidate\n  has been added or processed successfully.\nSeparated in a function to prevent jshint errors.",
            "itemtype": "method",
            "name": "_onAddIceCandidateSuccess",
            "access": "private",
            "tagname": "",
            "since": "0.5.9",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 177,
            "description": "Function that handles when the Peer connection received ICE candidate\n  has failed adding or processing.\nSeparated in a function to prevent jshint errors.",
            "itemtype": "method",
            "name": "_onAddIceCandidateFailure",
            "access": "private",
            "tagname": "",
            "since": "0.5.9",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 190,
            "description": "Function that adds all the Peer connection buffered ICE candidates received.\nThis should be called only after the remote session description is received and set.",
            "itemtype": "method",
            "name": "_addIceCandidateFromQueue",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 1,
            "description": "Contains the list of Peer connection ICE connection states.",
            "itemtype": "attribute",
            "name": "ICE_CONNECTION_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "CHECKING",
                    "description": "<small>Value <code>\"checking\"</code></small>\n  The state when Peer connection is still checking for a suitable matching ICE\n  candidate pair sent and received.",
                    "type": "String"
                },
                {
                    "name": "CONNECTED",
                    "description": "<small>Value <code>\"connected\"</code></small>\n  The state when Peer connection has found a suitable matching ICE candidate pair\n  sent and received but is actively looking for other ICE candidates sent and received\n  for better ICE connection.\n  <small>At this stage, the ICE connection is established already and\n    media is streaming with Datachannel starting connections.</small>",
                    "type": "String"
                },
                {
                    "name": "COMPLETED",
                    "description": "<small>Value <code>\"completed\"</code></small>\n  The state when Peer connection had found the best ICE connection.\n  <small>At this stage, the ICE connection is established already and\n    media is streaming with Datachannel starting connections.</small>",
                    "type": "String"
                },
                {
                    "name": "FAILED",
                    "description": "<small>Value <code>\"failed\"</code></small>\n  The state when Peer connection has failed to find a suitable matching ICE candidate pair\n  for a connection.\n  <small>As a workaround, you may just simply invoke\n    <a href=\"#method_joinRoom\"><code>joinRoom()</code></a> again when this state happens to reconnect to\n    the room again to retrieve new ICE credentials and see if it helps the Peer to establish a\n    successful ICE connection.</small>",
                    "type": "String"
                },
                {
                    "name": "DISCONNECTED",
                    "description": "<small>Value <code>\"disconnected\"</code></small>\n  The state when Peer connection ICE connection has been disconnected.\n  This may be caused by a flaky network connection.",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "<small>Value <code>\"closed\"</code></small>\n  The state when Peer connection ICE connection has closed and no media could be streamed from\n  the Peer connection nor any Datachannel connection could be established.",
                    "type": "String"
                },
                {
                    "name": "TRICKLE_FAILED",
                    "description": "<small>Value <code>\"trickeFailed\"</code></small>\n  The state is the same as <code>FAILED</code> state except that the failure occurs with\n  trickle ICE enabled.\n  <small>To disable trickle ICE, configure the <code>enableIceTrickle</code> option in\n    the <a href=\"#method_init\"><code>init()</code> method</a>.</small>",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 51,
            "description": "<blockquote class=\"info\">\n  Note that configuring the protocol may not necessarily result in the desired protocol\n  used in the actual TURN IP traffic as it depends which protocol the browser selects and connects with.<br>\n  For an advanced explaination, this configures the ICE server urls passed in <code?transport=<protocol></code>\n  when constructing the Peer connection. When both protocols are selected, the ICE servers urls are duplicated\n  with both protocols.\n</blockquote>\nContains the list of configurations to use when Peer connection ICE connection using the TURN server.",
            "itemtype": "attribute",
            "name": "TURN_TRANSPORT",
            "params": [
                {
                    "name": "TCP",
                    "description": "<small>Value <code>\"tcp\"</code></small>\n  The option to configure using only TCP protocol.",
                    "type": "String"
                },
                {
                    "name": "UDP",
                    "description": "<small>Value <code>\"udp\"</code></small>\n  The option to configure using only UDP protocol.",
                    "type": "String"
                },
                {
                    "name": "ANY",
                    "description": "<small><b>DEFAULT</b> | Value <code>\"any\"</code></small>\n  The option to configure using any protocols provided by default.",
                    "type": "String"
                },
                {
                    "name": "NONE",
                    "description": "<small>Value <code>\"none\"</code></small>\n  The option to not configure using only protocols.\n  <small>Configuring this does not mean that no protocols will be used, but\n    rather removing <code>?transport</code> flags in the ICE server urls when constructing the Peer connection.</small>",
                    "type": "String"
                },
                {
                    "name": "ALL",
                    "description": "<small>Value <code>\"all\"</code></small>\n  The option to configure using both TCP and UDP protocols.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 86,
            "description": "Stores the flag that indicates if Peer connections should trickle ICE.",
            "itemtype": "attribute",
            "name": "_enableIceTrickle",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 97,
            "description": "Stores the flag that indicates if STUN ICE servers should be used when constructing Peer connection.",
            "itemtype": "attribute",
            "name": "_enableSTUN",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 108,
            "description": "Stores the flag that indicates if TURN ICE servers should be used when constructing Peer connection.",
            "itemtype": "attribute",
            "name": "_enableTURN",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 119,
            "description": "Stores the flag that indicates if public STUN ICE servers should be used when constructing Peer connection.",
            "itemtype": "attribute",
            "name": "_usePublicSTUN",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 130,
            "description": "Stores the option for the TURN protocols to use.\nThis should configure the TURN ICE servers urls <code>?transport=protocol</code> flag.",
            "itemtype": "attribute",
            "name": "_TURNTransport",
            "type": "String",
            "default": "\"any\"",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 143,
            "description": "Stores the list of Peer connections ICE failures counter.",
            "itemtype": "attribute",
            "name": "_ICEConnectionFailures",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The Peer connection ICE failures counter.",
                    "type": "Number"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 154,
            "description": "Function that filters and configures the ICE servers received from Signaling\n  based on the <code>init()</code> configuration and returns the updated\n  list of ICE servers to be used when constructing Peer connection.",
            "itemtype": "method",
            "name": "_setIceServers",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 1,
            "description": "Contains the list of Peer connection session description exchanging states.",
            "itemtype": "attribute",
            "name": "PEER_CONNECTION_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "STABLE",
                    "description": "<small>Value <code>\"stable\"</code></small>\n  The state when there is no session description being exchanged with Peer connection.",
                    "type": "String"
                },
                {
                    "name": "HAVE_LOCAL_OFFER",
                    "description": "<small>Value <code>\"have-local-offer\"</code></small>\n  The state when offer session description is generated from Peer connection and is sent.",
                    "type": "String"
                },
                {
                    "name": "HAVE_REMOTE_OFFER",
                    "description": "<small>Value <code>\"have-remote-offer\"</code></small>\n  The state when offer session description is received from Peer connection.\n  The Peer connection would then generate a local session description and send to Peer,\n  which would result in the <code>STABLE</code> state afterwards.",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "<small>Value <code>\"closed\"</code></small>\n  The state when Peer connection is closed and no session description would be exchanged.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 26,
            "description": "Contains the list of <a href=\"#method_getConnectionStatus\"><code>getConnectionStatus()</code>\n  method</a> retrieval states.",
            "itemtype": "attribute",
            "name": "GET_CONNECTION_STATUS_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "RETRIEVING",
                    "description": "<small>Value <code>0</code></small>\n  The state when <code>getConnectionStatus()</code> is retrieving the Peer connection stats.",
                    "type": "Number"
                },
                {
                    "name": "RETRIEVE_SUCCESS",
                    "description": "<small>Value <code>1</code></small>\n  The state when <code>getConnectionStatus()</code> has retrieved the Peer connection stats.",
                    "type": "Number"
                },
                {
                    "name": "RETRIEVE_ERROR",
                    "description": "<small>Value <code>-1</code></small>\n  The state when <code>getConnectionStatus()</code> has failed retrieving the Peer connection stats.",
                    "type": "Number"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 47,
            "description": "<blockquote class=\"info\">\n As there are more features getting implemented, there will be eventually more different types of\n server Peers.\n</blockquote>\nContains the list of different types of server Peer connections.",
            "itemtype": "attribute",
            "name": "SERVER_PEER_TYPE",
            "params": [
                {
                    "name": "MCU",
                    "description": "<small>Value <code>\"mcu\"</code></small>\n  The server Peer type that is used for MCU connection.\n<small>Read more about what is a MCU <a href=\"#\">here</a>.</small>",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 67,
            "description": "Stores the restart initiated timestamp to throttle the <code>refreshConnection</code> functionality.",
            "itemtype": "attribute",
            "name": "_lastRestart",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.5.9",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 77,
            "description": "Stores the global number of Peer connection retries that would increase the wait-for-response timeout\n  for the Peer connection health timer.",
            "itemtype": "attribute",
            "name": "_retryCount",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 88,
            "description": "Stores the list of the Peer connections.",
            "itemtype": "attribute",
            "name": "_peerConnections",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The Peer connection.",
                    "type": "Object"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 99,
            "description": "<blockquote class=\"info\">\n  For MCU enabled Peer connections, the restart functionality may differ.\n  <a href=\"http://support.temasys.com.sg/support/discussions/topics/12000002853\">Read this article here</a>.<br>\n  Note that the functionality is throttled when invoked many times in less than 3 seconds interval.\n</blockquote>\nFunction that refreshes Peer connections.",
            "itemtype": "method",
            "name": "refreshConnection",
            "params": [
                {
                    "name": "targetPeerId",
                    "description": "The target Peer ID to only refresh the Peer connection.<br>\n- When provided as an Array, it will refresh the Peer connections with all the Peer IDs provided.<br>\n- When not provided, it will refresh the Peer connections with all the currently connected Peers.",
                    "type": "String|Array",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "listOfPeers",
                                    "description": "The list Peer IDs targeted for refreshing the Peer connections.",
                                    "type": "Array"
                                },
                                {
                                    "name": "refreshErrors",
                                    "description": "The list of Peer connection refresh errors.\n  <small>If there is <code>\"self\"</code> property, it's likely due to having no Peers to refresh the\n    Peer connections with.</small>",
                                    "type": "JSON"
                                },
                                {
                                    "name": "refreshErrors.<#peerId>",
                                    "description": "The Peer connection refresh error associated\n  with the Peer ID property name.",
                                    "type": "Error|String"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "listOfPeers",
                                    "description": "The list Peer IDs targeted for refreshing the Peer connections.",
                                    "type": "Array"
                                }
                            ]
                        }
                    ]
                }
            ],
            "trigger": "<b class=\"desc-seq-header\">&#8594; For Peer connections without MCU enabled:</b> <ol class=\"desc-seq\">\n  <li>Starts re-negotiation with Peer connections. <ul>\n    <li>Triggers <a href=\"#event_peerRestart\"><code>peerRestart</code> event</a>.</li></ul></li>\n  </ol>\n  <b class=\"desc-seq-header\">&#8594; For Peer connections with MCU enabled:</b> <ol class=\"desc-seq\">\n  <li>Starts sending notifications to Peer connected in the Room that User is restarting connection.<ul>\n     <li>Triggers <a href=\"#event_peerRestart\"><code>peerRestart</code> event</a>.</li>\n     <li>Triggers <a href=\"#event_serverPeerRestart\"><code>serverPeerRestart</code> event</a> for User</li>\n  </ul></li>\n  <li>Invokes <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a>. <ul>\n    <li><code>refreshConnection()</code> will retain the User session information except the Peer ID will\n       be a different assigned ID.</li></ul></li>\n  </ol>",
            "example": [
                " &lt;body&gt;\n  &lt;div id=\"peer-list\"&gt;&lt;/div&gt;\n  &lt;script&gt;\n    skylinkDemo.on(\"peerJoined\", function (peerId, peerInfo, isSelf) {\n      if (!isSelf) {\n        var peerBtn = document.createElement(\"button\");\n        peerBtn.id = peerId;\n        peerBtn.onclick = function () {\n          skylinkDemo.refreshConnection(peerId);\n        };\n        peerBtn.innerHTML = \"Refresh Connection?\";\n        document.getElementById(\"peer-list\").appendChild(peerBtn);\n      }\n    });\n  &lt;/script&gt;\n &lt;/body&gt;"
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 275,
            "description": "Function that retrieves the Peer connection stats.",
            "itemtype": "method",
            "name": "getConnectionStatus",
            "params": [
                {
                    "name": "targetPeerId",
                    "description": "The target Peer ID to only retrieve the Peer connection stats.<br>\n- When provided as an Array, it will retrieve the Peer connections stats with all the Peer IDs provided.<br>\n- When not provided, it will retrieve the Peer connections stats with all the currently connected Peers.",
                    "type": "String|Array",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "he callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "listOfPeers",
                                    "description": "The list Peer IDs targeted for retrieving the Peer connections stats.",
                                    "type": "Array"
                                },
                                {
                                    "name": "retrievalErrors",
                                    "description": "The list of retrieval of Peer connection stats errors.\n  <small>If there is <code>\"self\"</code> property, it's likely due to having no Peers to retrieve the\n    Peer connections stats from.</small>",
                                    "type": "JSON"
                                },
                                {
                                    "name": "retrievalErrors.<#peerId>",
                                    "description": "The Peer connection stats retrieval error associated\n  with the Peer ID property name.",
                                    "type": "Error|String"
                                },
                                {
                                    "name": "connectionStats",
                                    "description": "The list of Peer connection stats that has been successfully retrieved.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "connectionStats.<#peerId>",
                                    "description": "The Peer connection stats associated\n  with the Peer ID property name.\n<small>Object signature matches the <code>stats</code> parameter payload received in the\n  <a href=\"#event_getConnectionStatusStateChange\"><code>getConnectionStatusStateChange</code> event</a>.</small>",
                                    "type": "JSON"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "listOfPeers",
                                    "description": "The list Peer IDs targeted for retrieving the Peer connections stats.",
                                    "type": "Array"
                                },
                                {
                                    "name": "connectionStats",
                                    "description": "The list of Peer connection stats.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "connectionStats.<#peerId>",
                                    "description": "The Peer connection stats associated\n  with the Peer ID property name.\n<small>Object signature matches the <code>stats</code> parameter payload received in the\n  <a href=\"#event_getConnectionStatusStateChange\"><code>getConnectionStatusStateChange</code> event</a>.</small>",
                                    "type": "JSON"
                                }
                            ]
                        }
                    ]
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>Retrieves the Peer connections stats.<ul>\n    <li>Triggers <a href=\"#event_getConnectionStatusStateChange\"><code>getConnectionStatusStateChange</code> event</a>\n      with parameter payload <code>state</code> as <code>RETRIEVING</code>.</li>\n    <li>If retrieval of Peer connection stats is successful, it triggers <a href=\"#event_getConnectionStatusStateChange\">\n      <code>getConnectionStatusStateChange</code> event</a> with parameter payload <code>state</code> as\n      <code>RETRIEVE_SUCCESS</code> after <code>RETRIEVING</code>.</li>\n    <li>If retrieval of Peer connection stats had failed, it triggers <a href=\"#event_getConnectionStatusStateChange\">\n      <code>getConnectionStatusStateChange</code> event</a> with parameter payload <code>state</code> as\n      <code>RETRIEVE_ERROR</code> after <code>RETRIEVING</code>.</li>\n  </ul></li></ol>",
            "example": [
                " \n  var peerIntervals = {};\n\n  skylinkDemo.on(\"getConnectionStatusStateChange\", function (state, peerId, stats, error) {\n    if (state === skylinkDemo.GET_CONNECTION_STATUS_STATE.RETRIEVE_SUCCESS) {\n      // Display connection stats\n    } else if (state === skylinkDemo.GET_CONNECTION_STATUS_STATE.RETRIEVE_ERROR) {\n      // Display retrieval error\n    }\n  });\n\n  skylinkDemo.on(\"peerJoined\", function (peerId, peerInfo, isSelf) {\n    if (!isSelf) {\n      peerIntervals[peerId] = setInterval(function () {\n        skylinkDemo.getConnectionStatus(peerId);\n      }, 1000);\n    }\n  });"
            ],
            "since": "0.6.14",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 614,
            "description": "Function that starts the Peer connection session.\nRemember to remove previous method of reconnection (re-creating the Peer connection - destroy and create connection).",
            "itemtype": "method",
            "name": "_addPeer",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 666,
            "description": "Function that re-negotiates a Peer connection.\nWe currently do not implement the ICE restart functionality.\nRemember to remove previous method of reconnection (re-creating the Peer connection - destroy and create connection).",
            "itemtype": "method",
            "name": "_restartPeerConnection",
            "access": "private",
            "tagname": "",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 796,
            "description": "Function that ends the Peer connection session.",
            "itemtype": "method",
            "name": "_removePeer",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 852,
            "description": "Function that creates the Peer connection.",
            "itemtype": "method",
            "name": "_createPeerConnection",
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 991,
            "description": "// resend if failed\nif (iceConnectionState === self.ICE_CONNECTION_STATE.FAILED) {\n  log.debug([targetMid, 'RTCIceConnectionState', null,\n    'Ice connection state failed. Re-negotiating connection']);\n  self._removePeer(targetMid);\n  self._sendChannelMessage({\n    type: self._SIG_MESSAGE_TYPE.WELCOME,\n    mid: self._user.sid,\n    rid: self._room.id,\n    agent: window.webrtcDetectedBrowser,\n    version: window.webrtcDetectedVersion,\n    userInfo: self.getPeerInfo(),\n    target: targetMid,\n    restartNego: true,\n    hsPriority: -1\n  });",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 1054,
            "description": "Function that handles the <code>_restartPeerConnection</code> scenario\n  for MCU enabled Peer connections.\nThis is implemented currently by making the user leave and join the Room again.\nThe Peer ID will not stay the same though.",
            "itemtype": "method",
            "name": "_restartMCUConnection",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 1,
            "description": "Stores the list of Peers session information.",
            "itemtype": "attribute",
            "name": "_peerInformations",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The Peer session information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The Peer custom data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "settings",
                            "description": "The Peer streaming information.",
                            "type": "JSON"
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The Peer streaming muted status.",
                            "type": "JSON"
                        },
                        {
                            "name": "agent",
                            "description": "The Peer agent information.",
                            "type": "JSON"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 16,
            "description": "Stores the Signaling user credentials from the API response required for connecting to the Signaling server.",
            "itemtype": "attribute",
            "name": "_user",
            "params": [
                {
                    "name": "uid",
                    "description": "The API result \"username\".",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "The API result \"userCred\".",
                    "type": "String"
                },
                {
                    "name": "timeStamp",
                    "description": "The API result \"timeStamp\".",
                    "type": "String"
                },
                {
                    "name": "sid",
                    "description": "The Signaling server receive user Peer ID.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 30,
            "description": "Stores the User custom data.\nBy default, if no custom user data is set, it is an empty string <code>\"\"</code>.",
            "itemtype": "attribute",
            "name": "_userData",
            "type": "JSON|String",
            "default": "\"\"",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 42,
            "description": "Function that overwrites the User current custom data.",
            "itemtype": "method",
            "name": "setUserData",
            "params": [
                {
                    "name": "userData",
                    "description": "The updated custom data.",
                    "type": "JSON|String"
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>Updates the User current custom data. <ul>\n    <li>If User is currently in Room, it will trigger the <a href=\"#event_peerUpdated\"><code>peerUpdated</code> event</a>.</li>\n  </ul></li></ol>",
            "example": [
                " &lt;body&gt;\n  skylinkDemo.on(\"peerUpdated\", function (peerId, peerInfo, isSelf) {\n    // Reflect updated custom data\n  });\n\n  skylinkDemo.on(\"peerJoined\", function (peerId, peerInfo, isSelf) {\n    if (isSelf) {\n      skylinkDemo.setUserData(\"newData\");\n    }\n  });"
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 82,
            "description": "Function that retrieves the User current custom data.",
            "itemtype": "method",
            "name": "getUserData",
            "return": {
                "description": "The User current custom data.",
                "type": "JSON|String"
            },
            "trigger": "<ol class=\"desc-seq\">\n  <li>Returns the User / Peer current custom data.</li></ol>",
            "example": [
                " &lt;body&gt;\n  skylinkDemo.on(\"iceConnectionState\", function (state, peerId) {\n    var peerCustomData = skylinkDemo.getUserData(peerId);\n  });"
            ],
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 109,
            "description": "Function that retrieves the User / Peer current session information.",
            "itemtype": "method",
            "name": "getPeerInfo",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID to retrieve current session information from.<br>\n&#8594; When not provided or the Peer ID is does not exists, it will return\n  the User current session information",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The User / Peer current session information.\n  <small>Object signature matches the <code>peerInfo</code> parameter payload received in the\n  <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>.</small>",
                "type": "JSON"
            },
            "trigger": "<ol class=\"desc-seq\">\n  <li>Returns the User / Peer current session information.</li></ol>",
            "example": [
                " &lt;body&gt;\n  skylinkDemo.on(\"iceConnectionState\", function (state, peerId) {\n    var peerInfo = skylinkDemo.getPeerInfo(peerId);\n  });"
            ],
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 179,
            "description": "Function that parses the User custom data provided.",
            "itemtype": "method",
            "name": "_parseUserData",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 1,
            "description": "These are the list of Peer connection handshake states that Skylink would trigger.\n- Do not be confused with {{#crossLink \"Skylink/PEER_CONNECTION_STATE:attr\"}}PEER_CONNECTION_STATE{{/crossLink}}.\n  This is the Peer recognition connection that is established with the platform signaling protocol, and not\n  the Peer connection signaling state itself.\n- In this case, this happens before the {{#crossLink \"Skylink/PEER_CONNECTION_STATE:attr\"}}PEER_CONNECTION_STATE\n  handshaking states. {{/crossLink}} The <code>OFFER</code> and <code>ANSWER</code> relates to the\n  {{#crossLink \"Skylink/PEER_CONNECTION_STATE:attr\"}}PEER_CONNECTION_STATE states{{/crossLink}}.\n- For example as explanation how these state works below, let's make self as the offerer and\n  the connecting Peer as the answerer.",
            "itemtype": "attribute",
            "name": "HANDSHAKE_PROGRESS",
            "type": "JSON",
            "params": [
                {
                    "name": "ENTER",
                    "description": "<small>Value <code>\"enter\"</code></small>\n  The state when Peer have received <code>ENTER</code> from self,\n  and Peer connection with self is initialised with self.<br>\nThis state will occur for both self and Peer as <code>ENTER</code>\n  message is sent to ping for Peers in the room.<br>\nAt this state, Peer would sent <code>WELCOME</code> to the peer to\n  start the session description connection handshake.<br>\n<table class=\"table table-condensed\">\n  <thead><tr><th class=\"col-md-1\"></th><th class=\"col-md-5\">Self</th><th>Peer</th></thead>\n  <tbody>\n    <tr><td class=\"col-md-1\">1.</td>\n      <td class=\"col-md-5\">Sends <code>ENTER</code></td><td>Sends <code>ENTER</code></td></tr>\n    <tr><td class=\"col-md-1\">2.</td>\n      <td class=\"col-md-5\">-</td><td>Receives self <code>ENTER</code></td></tr>\n    <tr><td class=\"col-md-1\">3.</td>\n      <td class=\"col-md-5\">-</td><td>Sends self <code>WELCOME</code></td></tr>\n  </tbody>\n</table>",
                    "type": "String"
                },
                {
                    "name": "WELCOME",
                    "description": "<small>Value <code>\"welcome\"</code></small>\n  The state when self have received <code>WELCOME</code> from Peer,\n  and Peer connection is initialised with Peer.<br>\nAt this state, self would start the session description connection handshake and\n  send the local <code>OFFER</code> session description to Peer.\n<table class=\"table table-condensed\">\n  <thead><tr><th class=\"col-md-1\"></th><th class=\"col-md-5\">Self</th><th>Peer</th></thead>\n  <tbody>\n    <tr><td class=\"col-md-1\">4.</td>\n      <td class=\"col-md-5\">Receives <code>WELCOME</code></td><td>-</td></tr>\n    <tr><td class=\"col-md-1\">5.</td>\n      <td class=\"col-md-5\">Generates <code>OFFER</code></td><td>-</td></tr>\n    <tr><td class=\"col-md-1\">6.</td>\n      <td class=\"col-md-5\">Sets local <code>OFFER</code><sup>REF</sup></td><td>-</td></tr>\n    <tr><td class=\"col-md-1\">7.</td>\n      <td class=\"col-md-5\">Sends <code>OFFER</code></td><td>-</td></tr>\n  </tbody>\n</table>\n<sup>REF</sup>: The will cause {{#crossLink \"Skylink/PEER_CONNECTION_STATE:attr\"}}PEER_CONNECTION_STATE{{/crossLink}}\n  state go to <code>HAVE_LOCAL_OFFER</code>.",
                    "type": "String"
                },
                {
                    "name": "OFFER",
                    "description": "<small>Value <code>\"offer\"</code></small>\n  The state when Peer received <code>OFFER</code> from self.\nAt this state, Peer would set the remote <code>OFFER</code> session description and\n  start to send local <code>ANSWER</code> session description to self.<br>\n<table class=\"table table-condensed\">\n  <thead><tr><th class=\"col-md-1\"></th><th class=\"col-md-5\">Self</th><th>Peer</th></thead>\n  <tbody>\n    <tr><td class=\"col-md-1\">8.</td>\n       <td class=\"col-md-5\">-</td><td>Receives <code>OFFER</code></td></tr>\n    <tr><td class=\"col-md-1\">9.</td>\n       <td class=\"col-md-5\">-</td><td>Sets remote <code>OFFER</code><sup>REF</sup></td></tr>\n    <tr><td class=\"col-md-1\">10.</td>\n       <td class=\"col-md-5\">-</td><td>Generates <code>ANSWER</code></td></tr>\n    <tr><td class=\"col-md-1\">11.</td>\n       <td class=\"col-md-5\">-</td><td>Sets local <code>ANSWER</code></td></tr>\n    <tr><td class=\"col-md-1\">12.</td>\n       <td class=\"col-md-5\">-</td><td>Sends <code>ANSWER</code></td></tr>\n  </tbody>\n</table>\n<sup>REF</sup>: The will cause {{#crossLink \"Skylink/PEER_CONNECTION_STATE:attr\"}}PEER_CONNECTION_STATE{{/crossLink}}\n  state go to <code>HAVE_REMOTE_OFFER</code>.",
                    "type": "String"
                },
                {
                    "name": "ANSWER",
                    "description": "<small>Value <code>\"answer\"</code></small>\n  The state when self received <code>ANSWER</code> from Peer.<br>\nAt this state, self would set the remote <code>ANSWER</code> session description and\n  the connection handshaking progress has been completed.<br>\n<table class=\"table table-condensed\">\n  <thead><tr><th class=\"col-md-1\"></th><th class=\"col-md-5\">Self</th><th>Peer</th></thead>\n  <tbody>\n    <tr><td class=\"col-md-1\">13.</td>\n       <td class=\"col-md-5\">Receives <code>ANSWER</code></td><td>-</td></tr>\n    <tr><td class=\"col-md-1\">14.</td>\n       <td class=\"col-md-5\">Sets remote <code>ANSWER</code></td><td>-</td></tr>\n  </tbody>\n</table>",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "<small>Value <code>\"error\"</code></small>\n  The state when connection handshake has occurred and exception,\n  in this which the connection handshake could have been aborted abruptly\n  and no Peer connection is established.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "Peer",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 102,
            "description": "Stores the list of Peer connection health timers.\nThis timers sets a timeout which checks and waits if Peer connection is successfully established,\n  or else it will attempt to re-negotiate with the Peer connection again.",
            "itemtype": "attribute",
            "name": "_peerConnectionHealthTimers",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The Peer connection health timer.",
                    "type": "Object"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 115,
            "description": "Stores the list of Peer connection \"healthy\" flags, which indicates if Peer connection is\n  successfully established, and when the health timers expires, it will clear the timer\n  and not attempt to re-negotiate with the Peer connection again.",
            "itemtype": "attribute",
            "name": "_peerConnectionHealth",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The flag that indicates if Peer connection has been successfully established.",
                    "type": "Boolean"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 127,
            "description": "Stores the User connection priority weight.\nIf Peer has a higher connection weight, it will do the offer from its Peer connection first.",
            "itemtype": "attribute",
            "name": "_peerPriorityWeight",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 138,
            "description": "Function that creates the Peer connection offer session description.",
            "itemtype": "method",
            "name": "_doOffer",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 236,
            "description": "Function that creates the Peer connection answer session description.\nThis comes after receiving and setting the offer session description.",
            "itemtype": "method",
            "name": "_doAnswer",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 276,
            "description": "Function that starts the Peer connection health timer.\nTo count as a \"healthy\" successful established Peer connection, the\n  ICE connection state has to be \"connected\" or \"completed\",\n  messaging Datachannel type state has to be \"opened\" (if Datachannel is enabled)\n  and Signaling state has to be \"stable\".\nShould consider dropping of counting messaging Datachannel type being opened as\n  it should not involve the actual Peer connection for media (audio/video) streaming.",
            "itemtype": "method",
            "name": "_startPeerConnectionHealthCheck",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 362,
            "description": "Function that stops the Peer connection health timer.\nThis happens when Peer connection has been successfully established or when\n  Peer leaves the Room.",
            "itemtype": "method",
            "name": "_stopPeerConnectionHealthCheck",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 387,
            "description": "Function that sets the local session description and sends to Peer.\nIf trickle ICE is disabled, the local session description will be sent after\n  ICE gathering has been completed.",
            "itemtype": "method",
            "name": "_setLocalAndSendMessage",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 1,
            "description": "<blockquote class=\"info\">\n  Note that this feature requires <code>\"isPrivileged\"</code> flag to be enabled for the App Key, as\n  only Users connecting using the App Key with this flag enabled (which we call Privileged Users / Peers)\n  can retrieve the list of Peer IDs from Rooms within the same App space.\n  <a href=\"http://support.temasys.com.sg/support/solutions/articles/12000012342-what-is-a-privileged-key-\">\n  Read more about Privileged App Key feature here</a>.\n</blockquote>\nContains the list of <a href=\"#method_getPeers\"><code>getPeers()</code> method</a> retrieval states.",
            "itemtype": "attribute",
            "name": "GET_PEERS_STATE",
            "params": [
                {
                    "name": "ENQUIRED",
                    "description": "<small>Value <code>\"enquired\"</code></small>\n  The state when retrieving the list of Peer IDs from Signaling.",
                    "type": "String"
                },
                {
                    "name": "RECEIVED",
                    "description": "<small>Value <code>\"received\"</code></small>\n  The state when the list of Peer IDs has been successfully retrieved from Signaling.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 25,
            "description": "<blockquote class=\"info\">\n  Note that this feature requires <code>\"isPrivileged\"</code> flag to be enabled and\n  <code>\"autoIntroduce\"</code> flag to be disabled for the App Key, as only Users connecting\n  using the App Key with this flag enabled (which we call Privileged Users / Peers)\n  can introduce Peers in the same App space from other Rooms.\n  <a href=\"http://support.temasys.com.sg/support/solutions/articles/12000012342-what-is-a-privileged-key-\">\n  Read more about Privileged App Key feature here</a>.\n</blockquote>\nContains the list of <a href=\"#method_introducePeer\"><code>introducePeer</code> method</a> introduction states.",
            "itemtype": "attribute",
            "name": "INTRODUCE_STATE",
            "params": [
                {
                    "name": "INTRODUCING",
                    "description": "<small>Value <code>\"enquired\"</code></small>\n  The state when request to introduce the pair of Peers has been made to the Signaling.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "<small>Value <code>\"error\"</code></small>\n  The state when request to introduce the pair of Peers has failed.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 49,
            "description": "Stores the flag that indicates if \"autoIntroduce\" is enabled.\nIf enabled, the Peers connecting the same Room will receive each others \"enter\" message ping.",
            "itemtype": "attribute",
            "name": "_autoIntroduce",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 61,
            "description": "Stores the flag that indicates if \"isPrivileged\" is enabled.\nIf enabled, the User has Privileged features which has the ability to retrieve the list of\n  Peers in the same App space with <code>getPeers()</code> method \n  and introduce Peers to each other with <code>introducePeer</code> method.",
            "itemtype": "attribute",
            "name": "isPrivileged",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 75,
            "description": "Stores the list of Peers retrieved from the Signaling from <code>getPeers()</code> method.",
            "itemtype": "attribute",
            "name": "_peerList",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 85,
            "description": "<blockquote class=\"info\">\n  Note that this feature requires <code>\"isPrivileged\"</code> flag to be enabled for the App Key, as\n  only Users connecting using the App Key with this flag enabled (which we call Privileged Users / Peers)\n  can retrieve the list of Peer IDs from Rooms within the same App space.\n  <a href=\"http://support.temasys.com.sg/support/solutions/articles/12000012342-what-is-a-privileged-key-\">\n  Read more about Privileged App Key feature here</a>.\n</blockquote>\nFunction that retrieves the list of Peer IDs from Rooms within in the same App space.",
            "itemtype": "method",
            "name": "getPeers",
            "params": [
                {
                    "name": "showAll",
                    "description": "The flag that indicates if Signaling should also retrieve\n  the list of the Privileged Peer IDs.\n<small>By default, the Signaling doesn't return the Privileged Peer IDs</small>",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>",
                            "type": "Error|String"
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>\n  <small>Object signature matches the <code>peerList</code> parameter payload received in the\n     <a href=\"#event_getPeersStateChange\"><code>getPeersStateChange</code> event</a>.</small>",
                            "type": "JSON"
                        }
                    ]
                }
            ],
            "trigger": "getPeersStateChange",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 146,
            "description": "<blockquote class=\"info\">\n  Note that this feature requires <code>\"isPrivileged\"</code> flag to be enabled and\n  <code>\"autoIntroduce\"</code> flag to be disabled for the App Key, as only Users connecting\n  using the App Key with this flag enabled (which we call Privileged Users / Peers)\n  can introduce Peers in the same App space from other Rooms.\n  <a href=\"http://support.temasys.com.sg/support/solutions/articles/12000012342-what-is-a-privileged-key-\">\n  Read more about Privileged App Key feature here</a>.\n</blockquote>\nFunction that introduces a pair of Peers to start Peer connection with each other.",
            "itemtype": "method",
            "name": "introducePeer",
            "params": [
                {
                    "name": "sendingPeerId",
                    "description": "The Peer ID of the Peer that will start Peer connection with <code>receivingPeerId</code>.",
                    "type": "String"
                },
                {
                    "name": "receivingPeerId",
                    "description": "The Peer ID of the Peer that will be connected with <code>sendingPeerId</code>.",
                    "type": "String"
                }
            ],
            "trigger": "introduceStateChange",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 1,
            "description": "Contains the list of Signaling action states.",
            "itemtype": "attribute",
            "name": "SYSTEM_ACTION",
            "params": [
                {
                    "name": "WARNING",
                    "description": "<small>Value <code>\"warning\"</code></small>\n  The action given when Signaling might be ending the User session.\n  <small>See <a href=\"#attr_SYSTEM_ACTION_REASON\"><code>SYSTEM_ACTION_REASON</code></a> for the\n    list of reasons that would result in this action state.</small>",
                    "type": "String"
                },
                {
                    "name": "REJECT",
                    "description": "<small>Value <code>\"reject\"</code></small>\n  The action state where the Signaling has ended the User session.\n  <small>See <a href=\"#attr_SYSTEM_ACTION_REASON\"><code>SYSTEM_ACTION_REASON</code></a> for the\n    list of reasons that would result in this action state.</small>",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 22,
            "description": "Contains the list of reason codes for the Signaling action states given.",
            "itemtype": "attribute",
            "name": "SYSTEM_ACTION_REASON",
            "params": [
                {
                    "name": "FAST_MESSAGE",
                    "description": "<small>Value <code>\"fastmsg\"</code></small>\n  The reason code given when User is jamming the Signaling with a flood of messages and\n  the Signaling might end the User session to prevent User from disrupting other Peers session.\n <small>This is caused by messages sent too quickly within less than 1 second interval from methods\n    like <a href=\"#method_sendMessage\"><code>sendMessage()</code> method</a>,\n    <a href=\"#method_setUserData\"><code>setUserData()</code> method</a>,\n    <a href=\"#method_muteStream\"><code>muteStream()</code> method</a>,\n    <a href=\"#method_enableAudio\"><code>enableAudio()</code> method</a>,\n    <a href=\"#method_enableVideo\"><code>enableVideo()</code> method</a>,\n    <a href=\"#method_disableAudio\"><code>disableAudio()</code> method</a> and\n    <a href=\"#method_disableVideo\"><code>disableVideo()</code> method</a>.\n    However this message should not occur as queueing of messages is implemented in the SDK.</small>\n <small>Ties with <a href=\"#attr_SYSTEM_ACTION\"><code>SYSTEM_ACTION</code></a> action state <code>WARNING</code></small>",
                    "type": "String"
                },
                {
                    "name": "ROOM_CLOSING",
                    "description": "<small>Value <code>\"toClose\"</code></small>\n  The reason code given when User session in the Room is ending.\n <small>The starting datetime and duration of the User session depends on the type of authentication scheme used.<br>\n   Read more about the different <a href=\"http://support.temasys.com.sg/support/solutions/articles/\n12000002712-authenticating-your-application-key-to-start-a-connection\">authentication methods here</a>\n   or see the <a href=\"#method_init\"><code>init()</code> method</a>.</small>\n <small>Ties with <a href=\"#attr_SYSTEM_ACTION\"><code>SYSTEM_ACTION</code></a> action state <code>WARNING</code></small>",
                    "type": "String"
                },
                {
                    "name": "CREDENTIALS_EXPIRED",
                    "description": "<small>Value <code>\"oldTimeStamp\"</code></small>\n   The reason code given when provided credentials has already expired when User is attempting to join Room.\n <small>The starting datetime and duration of the User session depends on the type of authentication scheme used.<br>\n   Read more about the different <a href=\"http://support.temasys.com.sg/support/solutions/articles/\n12000002712-authenticating-your-application-key-to-start-a-connection\">authentication methods here</a>\n   or see the <a href=\"#method_init\"><code>init()</code> method</a>.</small>\n <small>Ties with <a href=\"#attr_SYSTEM_ACTION\"><code>SYSTEM_ACTION</code></a> action state <code>REJECT</code></small>",
                    "type": "String"
                },
                {
                    "name": "CREDENTIALS_ERROR",
                    "description": "<small>Value <code>\"credentialError\"</code></small>\n   The reason code given when verifying provided credentials has failed when User is attempting to join Room.\n <small>Ties with <a href=\"#attr_SYSTEM_ACTION\"><code>SYSTEM_ACTION</code></a> action state <code>REJECT</code></small>",
                    "type": "String"
                },
                {
                    "name": "DUPLICATED_LOGIN",
                    "description": "<small>Value <code>\"duplicatedLogin\"</code></small>\n   The reason code given when provided credentials has already been used when User is attempting to join Room.\n <small>Ties with <a href=\"#attr_SYSTEM_ACTION\"><code>SYSTEM_ACTION</code></a> action state <code>REJECT</code></small>",
                    "type": "String"
                },
                {
                    "name": "ROOM_NOT_STARTED",
                    "description": "<small>Value <code>\"notStart\"</code></small>\n   The reason code given when Room session has not started when User is attempting to join Room.\n <small>The starting datetime and duration of the User session depends on the type of authentication scheme used.<br>\n   Read more about the different <a href=\"http://support.temasys.com.sg/support/solutions/articles/\n12000002712-authenticating-your-application-key-to-start-a-connection\">authentication methods here</a>\n   or see the <a href=\"#method_init\"><code>init()</code> method</a>.</small>\n <small>Ties with <a href=\"#attr_SYSTEM_ACTION\"><code>SYSTEM_ACTION</code></a> action state <code>REJECT</code></small>",
                    "type": "String"
                },
                {
                    "name": "EXPIRED",
                    "description": "<small>Value <code>\"expired\"</code></small>\n   The reason code given when Room session has already ended when User is attempting to join Room.\n <small>Ties with <a href=\"#attr_SYSTEM_ACTION\"><code>SYSTEM_ACTION</code></a> action state <code>REJECT</code></small>\n <small>The starting datetime and duration of the User session depends on the type of authentication scheme used.<br>\n   Read more about the different <a href=\"http://support.temasys.com.sg/support/solutions/articles/\n12000002712-authenticating-your-application-key-to-start-a-connection\">authentication methods here</a>\n   or see the <a href=\"#method_init\"><code>init()</code> method</a>.</small>",
                    "type": "String"
                },
                {
                    "name": "ROOM_LOCKED",
                    "description": "<small>Value <code>\"locked\"</code></small>\n   The reason code given when Room session has been locked and User is blocked from joining the Room.\n <small>Room can be unlocked with <a href=\"#method_unlockRoom\"><code>unlockRoom()</code> method</a> and\n    locked with <a href=\"#method_lockRoom\"><code>lockRoom()</code> method</a>.</small>\n <small>Ties with <a href=\"#attr_SYSTEM_ACTION\"><code>SYSTEM_ACTION</code></a> action state <code>REJECT</code></small>",
                    "type": "String"
                },
                {
                    "name": "ROOM_CLOSED",
                    "description": "<small>Value <code>\"roomclose\"</code></small>\n  The reason code given when User session in the Room has already ended.\n  <small>Ties with <a href=\"#attr_SYSTEM_ACTION\"><code>SYSTEM_ACTION</code></a> action state <code>REJECT</code></small>\n <small>The starting datetime and duration of the User session depends on the type of authentication scheme used.<br>\n   Read more about the different <a href=\"http://support.temasys.com.sg/support/solutions/articles/\n12000002712-authenticating-your-application-key-to-start-a-connection\">authentication methods here</a>\n   or see the <a href=\"#method_init\"><code>init()</code> method</a>.</small>",
                    "type": "String"
                },
                {
                    "name": "SERVER_ERROR",
                    "description": "<small>Value <code>\"serverError\"</code></small>\n   The reason code given when there has been errors while attempting to connect User to the Room.\n <small>Ties with <a href=\"#attr_SYSTEM_ACTION\"><code>SYSTEM_ACTION</code></a> action state <code>REJECT</code></small>",
                    "type": "String"
                },
                {
                    "name": "KEY_ERROR",
                    "description": "<small>Value <code>\"keyFailed\"</code></small>\n   The reason code given when there has been errors while attempting to connect with the App Key provided in\n   <a href=\"#method_init\"><code>init()</code> method</a>.\n <small>Ties with <a href=\"#attr_SYSTEM_ACTION\"><code>SYSTEM_ACTION</code></a> action state <code>REJECT</code></small>",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 110,
            "description": "Stores the current Room name that User is connected to.",
            "itemtype": "attribute",
            "name": "_selectedRoom",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 120,
            "description": "Stores the flag that indicates if Room is locked.",
            "itemtype": "attribute",
            "name": "_roomLocked",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 130,
            "description": "Stores the flag that indicates if User is connected to the Room.",
            "itemtype": "attribute",
            "name": "_inRoom",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 140,
            "description": "<blockquote class=\"info\">\n  Currently, the SDK only supports sending a single Stream to Peers.\n  If there is <a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a> available, it will\n  be the Stream sent to Peers regardless if <a href=\"#method_getUserMedia\"><code>getUserMedia()</code>\n  Stream</a> is available.\n</blockquote>\nFunction that connects User to the Room.",
            "itemtype": "method",
            "name": "joinRoom",
            "params": [
                {
                    "name": "room",
                    "description": "The Room name to connect to.\n  <small>If not provided, the User will be connected to the <code>defaultRoom</code>\n    configured in the <a href=\"#method_init\"><code>init()</code> method</a>.</small>",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "The Room connection settings.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "userData",
                            "description": "The User custom data.\n  <small>This can be set when User is in session with <a href=\"#method_setUserData\"><code>setUserData()</code> method</a>.</small>",
                            "type": "JSON|String",
                            "optional": true
                        },
                        {
                            "name": "audio",
                            "description": "The audio settings for the Stream sent.\n  <small>If either <code>options.audio</code> or <code>options.video</code> is defined,\n     <code>joinRoom()</code> would invoke <a href=\"#method_getUserMedia\"><code>getUserMedia()</code>\n     method</a> to retrieve a new Stream, else it will use any existing Stream if any.\n     Additionally, if <code>options.video</code> is not defined and this is, the <code>options.video</code>\n     value will be set to <code>false</code> when retrieving the new Stream.</small>\n     <small>Note that unless User's Stream is retrieved, <code>joinRoom()</code> will not join\n     the Room until Stream is retrieved successfully.</small>\n  <small>Object signature matches the <code>options.audio</code> parameter in the\n     <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>.</small>",
                            "type": "Boolean|JSON",
                            "optional": true
                        },
                        {
                            "name": "video",
                            "description": "The video settings for the Stream sent.\n  <small>If either <code>options.audio</code> or <code>options.video</code> is defined,\n    <code>joinRoom()</code> would invoke <a href=\"#method_getUserMedia\"><code>getUserMedia()</code>\n     method</a> to retrieve a new Stream, else it will use any existing Stream if any.\n     Additionally, if <code>options.audio</code> is not defined and this is, the <code>options.audio</code>\n     value will be set to <code>false</code> when retrieving the new Stream.</small>\n     <small>Note that unless User's Stream is retrieved, <code>joinRoom()</code> will not join\n     the Room until Stream is retrieved successfully.</small>\n  <small>Object signature matches the <code>options.video</code> parameter in the\n     <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>.</small>",
                            "type": "Boolean|JSON",
                            "optional": true
                        },
                        {
                            "name": "bandwidth",
                            "description": "<blockquote class=\"info\">Note that this currently does not work\n  with Firefox browsers.</blockquote> The configuration for limiting the maximum uploading Stream bandwidth.",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The maximum uploading Stream audio bandwidth.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The maximum uploading Stream video bandwidth.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "data",
                                    "description": "The maximum uploading Datachannel data transfer / P2P messaging bandwidth.\n  <small>Affects <a href=\"#method_sendP2PMessage\"><code>sendP2PMessage()</code> method</a>,\n     <a href=\"#method_sendBlobData\"><code>sendBlobData()</code> method</a> and\n     <a href=\"#method_sendURLData\"><code>sendURLData()</code> method</a>.</small>",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "manualGetUserMedia",
                            "description": "The flag that indicates if <code>joinRoom()</code> should trigger\n  <a href=\"#event_mediaAccessRequired\"><code>mediaAccessRequired</code> event</a> to allow developers to\n  handle the retrieval of Stream using <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a> or\n  <a href=\"#method_shareScreen\"><code>shareScreen()</code> method</a> as a requirement before joining the Room.\n  <small>Note that unless User's Stream is retrieved, <code>joinRoom()</code> will not join the Room until Stream\n     is retrieved succesfully.</small>\n  <small>Even if <code>options.audio</code> or <code>options.video</code> is defined, as long as this flag is\n     enabled, <code>joinRoom()</code> would not invoke <a href=\"#method_getUserMedia\"><code>getUserMedia()</code>\n     method</a> to retrieve a new Stream as it would leave to the developers to retrieve it.</small>",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "error",
                                    "description": "The <code>joinRoom()</code> error.",
                                    "type": "Error|String"
                                },
                                {
                                    "name": "errorCode",
                                    "description": "The Room authentication state error code.\n  <small>If error is not caused by Room authentication errors, this should not be defined</small>\n  <small>Sequentially, the User has to authenticate with the Platform to retrieve credentials which is\n     used to join the Room which is known when <a href=\"#event_systemAction\"><code>systemAction</code> event</a>\n     is triggered. This error occurs when the authentication with the Platform fails.</small>\n  [Rel: Skylink.READY_STATE_CHANGE_ERROR]",
                                    "type": "Number"
                                },
                                {
                                    "name": "room",
                                    "description": "The selected Room name to connect to.",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "room",
                                    "description": "The selected Room name to connect to.",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "The User's session Peer ID in Room.",
                                    "type": "String"
                                },
                                {
                                    "name": "peerInfo",
                                    "description": "The User current session information.\n  <small>Object signature matches the <code>peerInfo</code> parameter payload received in the\n  <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>.</small>",
                                    "type": "JSON"
                                }
                            ]
                        }
                    ]
                }
            ],
            "trigger": "readyStateChange, mediaAccessRequired, channelOpen, channelMessage, systemAction, peerJoined, incomingStream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 420,
            "description": "Function that disconnects User from the currently connected Room and ends the User's session.",
            "itemtype": "method",
            "name": "leaveRoom",
            "params": [
                {
                    "name": "stopMediaOptions",
                    "description": "The flag that indicates if <code>leaveRoom()</code>\n  should invoke <a href=\"#method_stopStream\"><code>stopStream()</code> method</a> and\n  <a href=\"#method_stopScreen\"><code>stopScreen()</code> method</a> to stop current Streams\n  retrieved from <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a> and\n  <a href=\"#method_shareScreen\"><code>shareScreen()</code> method</a>.<br>\n&#8594; When provided as an Boolean, it will set both <code>stopMediaOptions.userMedia</code> and\n   <code>stopMediaOptions.screenshare</code> to <code>true</code>.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "true",
                    "props": [
                        {
                            "name": "userMedia",
                            "description": "The flag that indicates if\n  <code>leaveRoom()</code> should stop any currently retrieved Stream from\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "screenshare",
                            "description": "The flag that indicates if\n  <code>leaveRoom()</code> should stop any currently retrieved Stream from\n  <a href=\"#method_shareScreen\"><code>shareScreen()</code> method</a>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>",
                            "type": "Error|String"
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "peerId",
                                    "description": "The User's ended session Peer ID in Room.",
                                    "type": "String"
                                },
                                {
                                    "name": "previousRoom",
                                    "description": "The Room name which User's session has ended.",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "trigger": "channelClose, streamEnded, peerLeft",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 534,
            "description": "Function that locks the current Room which prevent other Peers from joining the Room.",
            "itemtype": "method",
            "name": "lockRoom",
            "trigger": "roomLock",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 554,
            "description": "Function that unlocks the current Room which if Room is previously lock to\n  allow other Peers to join the Room.",
            "itemtype": "method",
            "name": "unlockRoom",
            "trigger": "roomLock",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 575,
            "description": "Function that waits for Socket connection to Signaling to be opened.",
            "itemtype": "method",
            "name": "_waitForOpenChannel",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 1,
            "description": "Contains the list of Room authentication or <a href=\"#method_init\"><code>init()</code> method</a> states.",
            "itemtype": "attribute",
            "name": "READY_STATE_CHANGE",
            "params": [
                {
                    "name": "INIT",
                    "description": "<small>Value <code>0</code></small>\n  The state when Skylink is at the initial state before retrieval.<br>\nIf all dependencies has been loaded, this would proceed to <code>LOADING</code> state.",
                    "type": "Number"
                },
                {
                    "name": "LOADING",
                    "description": "<small>Value <code>1</code></small>\n  The state when Skylink starts retrieving the connection information from the platform server.<br>\nThis state occurs after <code>INIT</code> state and if retrieval is successful, this would\n  proceed to <code>COMPLETED</code> state.",
                    "type": "Number"
                },
                {
                    "name": "COMPLETED",
                    "description": "<small>Value <code>2</code></small>\n  The state when the connection information has been retrieved successfully.<br>\nThis state occurs after <code>LOADING</code>, and if it's\n  {{#crossLink \"Skylink/joinRoom:attr\"}}joinRoom(){{/crossLink}} that is invoked, room connection\n  would commerce.",
                    "type": "Number"
                },
                {
                    "name": "ERROR",
                    "description": "<small>Value <code>-1</code></small>\n  The state when an exception occured while retrieving the connection information.<br>\nThis state might be triggered when dependencies failed to load or HTTP retrieval fails.<br>\nReference {{#crossLink \"Skylink/READY_STATE_CHANGE_ERROR:attr\"}}READY_STATE_CHANGE_ERROR{{/crossLink}}\n  to see the list of errors that might have triggered the <code>ERROR</code> state.",
                    "type": "Number"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 33,
            "description": "These are the list of room initialization ready state errors that Skylink has.\n- Ready state errors like <code>ROOM_LOCKED</code>, <code>API_NOT_ENOUGH_CREDIT</code>,\n  <code>API_NOT_ENOUGH_PREPAID_CREDIT</code>, <code>API_FAILED_FINDING_PREPAID_CREDIT</code> and\n  <code>SCRIPT_ERROR</code> has been removed as they are no longer supported.",
            "itemtype": "attribute",
            "name": "READY_STATE_CHANGE_ERROR",
            "type": "JSON",
            "params": [
                {
                    "name": "API_INVALID",
                    "description": "<small>Value <code>4001</code></small>\n  The error when provided Application Key does not exists <em>(invalid)</em>.<br>\nFor this error, it's recommended that you check if the Application Key exists in your account\n  in the developer console.",
                    "type": "Number"
                },
                {
                    "name": "API_DOMAIN_NOT_MATCH",
                    "description": "<small>Value <code>4002</code></small>\n  The error when application accessing from backend IP address is not valid for provided Application Key.<br>\nThis rarely (and should not) occur and it's recommended to report this issue if this occurs.",
                    "type": "Number"
                },
                {
                    "name": "API_CORS_DOMAIN_NOT_MATCH",
                    "description": "<small>Value <code>4003</code></small>\n  The error when application accessing from the CORS domain is not valid for provided Application Key.<br>\nFor this error, it's recommended that you check the CORS configuration for the provided Application Key\n  in the developer console.",
                    "type": "Number"
                },
                {
                    "name": "API_CREDENTIALS_INVALID",
                    "description": "<small>Value <code>4004</code></small>\n  The error when credentials provided is not valid for provided Application Key.<br>\nFor this error, it's recommended to check the <code>credentials</code> provided in\n  {{#crossLink \"Skylink/init:method\"}}init() configuration{{/crossLink}}.",
                    "type": "Number"
                },
                {
                    "name": "API_CREDENTIALS_NOT_MATCH",
                    "description": "<small>Value <code>4005</code></small>\n  The error when credentials does not match as expected generated credentials for provided Application Key.<br>\nFor this error, it's recommended to check the <code>credentials</code> provided in\n  {{#crossLink \"Skylink/init:method\"}}init() configuration{{/crossLink}}.",
                    "type": "Number"
                },
                {
                    "name": "API_INVALID_PARENT_KEY",
                    "description": "<small>Value <code>4006</code></small>\n  The error when provided alias Application Key has an error because parent Application Key does not exists.<br>\nFor this error, it's recommended to provide another alias Application Key.",
                    "type": "Number"
                },
                {
                    "name": "API_NO_MEETING_RECORD_FOUND",
                    "description": "<small>Value <code>4010</code></small>\n  The error when there is no meeting currently that is open or available to join\n  for self at the current time in the selected room.<br>\nFor this error, it's recommended to retrieve the list of meetings and check if it exists using\n  the [Meeting Resource REST API](https://temasys.atlassian.net/wiki/display/TPD/SkylinkAPI+-+Meeting+%28Persistent+Room%29+Resources).",
                    "type": "Number"
                },
                {
                    "name": "NO_SOCKET_IO",
                    "description": "<small>Value <code>1</code></small>\n  The error when socket.io dependency is not loaded.<br>\nFor this error, it's recommended to load the\n  [correct socket.io-client dependency](http://socket.io/download/) from the CDN.",
                    "type": "Number"
                },
                {
                    "name": "NO_XMLHTTPREQUEST_SUPPORT",
                    "description": "<small>Value <code>2</code></small>\n  The error when XMLHttpRequest is not supported in current browser.<br>\nFor this error, it's recommended to ask user to switch to another browser that supports <code>XMLHttpRequest</code>.",
                    "type": "Number"
                },
                {
                    "name": "NO_WEBRTC_SUPPORT",
                    "description": "<small>Value <code>3</code></small>\n  The error when WebRTC is not supported in current browser.<br>\nFor this error, it's recommended to ask user to switch to another browser that supports WebRTC.",
                    "type": "Number"
                },
                {
                    "name": "NO_PATH",
                    "description": "<small>Value <code>4</code></small>\n  The error when constructed path is invalid.<br>\nThis rarely (and should not) occur and it's recommended to report this issue if this occurs.",
                    "type": "Number"
                },
                {
                    "name": "INVALID_XMLHTTPREQUEST_STATUS",
                    "description": "<small>Value <code>5</code></small>\n  The error when XMLHttpRequest does not return a HTTP status code of <code>200</code> but a HTTP failure.<br>\nThis rarely (and should not) occur and it's recommended to report this issue if this occurs.",
                    "type": "Number"
                },
                {
                    "name": "ADAPTER_NO_LOADED",
                    "description": "<small>Value <code>7</code></small>\n  The error when AdapterJS dependency is not loaded.<br>\nFor this error, it's recommended to load the\n  [correct AdapterJS dependency](https://github.com/Temasys/AdapterJS/releases) from the CDN.",
                    "type": "Number"
                },
                {
                    "name": "XML_HTTP_REQUEST_ERROR",
                    "description": "<small>Value <code>-1</code></small>\n  The error when XMLHttpRequest failure on the network level when attempting to\n  connect to the platform server to retrieve selected room connection information.<br>\nThis might happen when connection timeouts. If this is a persistent issue, it's recommended to report this issue.",
                    "type": "Number"
                }
            ],
            "readonly": "",
            "component": "Room",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 115,
            "description": "These are the list of available platform signaling servers Skylink\n  should connect to for faster connectivity.",
            "itemtype": "attribute",
            "name": "REGIONAL_SERVER",
            "type": "JSON",
            "params": [
                {
                    "name": "APAC1",
                    "description": "<small>Value <code>\"sg\"</code></small>\n  The option to select the Asia pacific server 1 regional server.",
                    "type": "String"
                },
                {
                    "name": "US1",
                    "description": "<small>Value <code>\"us2\"</code></small>\n  The option to select the US server 1 regional server.",
                    "type": "String"
                }
            ],
            "deprecated": true,
            "deprecationMessage": "Signaling server selection is handled on\n   the server side based on load and latency.",
            "readonly": "",
            "component": "Room",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 136,
            "description": "Stores the flag if API and Signaling connections should enforce HTTPS connections\n  even though it's using HTTP connections.",
            "itemtype": "attribute",
            "name": "_forceSSL",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 148,
            "description": "Stores the flag if TURNS connections should be used   The flag to enforce an SSL TURN server connection.\nIf self domain accessing protocol is <code>https:</code>, SSL connections\n  would be automatically used. This flag is mostly used for self domain accessing protocol\n  that is <code>http:</code> and enforcing the SSL connections for\n  TURN server connection.\nThis will configure TURN server connection using port <code>443</code> only and\n  if <code>turns:</code> protocol is supported, it will use <code>turns:</code> protocol.",
            "itemtype": "attribute",
            "name": "_forceTURNSSL",
            "type": "Boolean",
            "default": "false",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 167,
            "description": "The flag to enforce TURN server connection for quicker connectivity.",
            "itemtype": "attribute",
            "name": "_forceTURN",
            "type": "Boolean",
            "default": "false",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 180,
            "description": "The constructed REST path that Skylink makes a <code>HTTP /GET</code> from\n  to retrieve the connection information required.",
            "itemtype": "attribute",
            "name": "_path",
            "type": "String",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 193,
            "description": "The regional server that Skylink should connect to for fastest connectivity.",
            "itemtype": "attribute",
            "name": "_serverRegion",
            "type": "String",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 204,
            "description": "The platform server URL that Skylink can construct the REST path with to make\n  a <code>HTTP /GET</code> to retrieve the connection information required.\nIf the value is not the default value, it's mostly for debugging purposes.\nIt's not advisable to allow developers to set the custom server URL unless\n  they are aware of what they are doing, as this is a debugging feature.",
            "itemtype": "attribute",
            "name": "_roomServer",
            "type": "String",
            "default": "\"//api.temasys.com.sg\"",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 220,
            "description": "Stores the Application Key that is configured in the\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}.",
            "itemtype": "attribute",
            "name": "_appKey",
            "type": "String",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 232,
            "description": "Stores the default room that is configured in the\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}.\nIf no room is provided in {{#crossLink \"Skylink/joinRoom:method\"}}joinRoom(){{/crossLink}},\n  this is the room that self would join to by default.\nIf the value is not provided in {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}},\n  by default, the value is the Application Key that is configured\n  in {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}.",
            "itemtype": "attribute",
            "name": "_defaultRoom",
            "type": "String",
            "default": "Skylink._appKey",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 250,
            "description": "Stores the new persistent room meeting start datetime stamp in\n  [(ISO 8601 format)](https://en.wikipedia.org/wiki/ISO_8601).\nThis will start a new meeting based on the starting datetime stamp\n  in the room that was selected to join.\nThe start date time of the room will not affect non persistent room connection.\nThe persistent room feature is configurable in the Application Key\n  in the developer console.",
            "itemtype": "attribute",
            "name": "_roomStart",
            "type": "String",
            "access": "private",
            "tagname": "",
            "optional": 1,
            "component": "Room",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 268,
            "description": "Stores the new persistent room meeting duration (in hours)\n  that the current new meeting duration should be in the room\n  that was selected to join.\nThe duration will not affect non persistent room connection.\nThe persistent room feature is configurable in the Application Key\n  in the developer console.",
            "itemtype": "attribute",
            "name": "_roomDuration",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "optional": 1,
            "component": "Room",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 285,
            "description": "Stores the room credentials for Application Key.\nThis is required for rooms connecting without CORS verification\n  or starting a new persistent room meeting.\nTo generate the credentials:\n- Concatenate a string that consists of the room name\n  the room meeting duration (in hours) and the start date timestamp (in ISO 8601 format).\n  Format <code>room + duration + startDateTimeStamp</code>.\n- Hash the concatenated string with the Application Key token using\n  [SHA-1](https://en.wikipedia.org/wiki/SHA-1).\n  You may use the [CryptoJS.HmacSHA1](https://code.google.com/p/crypto-js/#HMAC) function to do so.\n  Example <code>var hash = CryptoJS.HmacSHA1(concatenatedString, token);</code>.\n- Convert the hash to a [Base64](https://en.wikipedia.org/wiki/Base64) encoded string. You may use the\n  [CryptoJS.enc.Base64](https://code.google.com/p/crypto-js/#The_Cipher_Output) function\n  to do so. Example <code>var base64String = hash.toString(CryptoJS.enc.Base64); </code>.\n- Encode the Base64 encoded string to a URI component using UTF-8 encoding with\n  [encodeURIComponent()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent).\n  Example <code>var credentials = encodeURIComponent(base64String);</code>\nand the duration.",
            "itemtype": "attribute",
            "name": "_roomCredentials",
            "type": "String",
            "access": "private",
            "tagname": "",
            "optional": 1,
            "component": "Room",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 314,
            "description": "Stores the current Skylink room connection retrieval ready state.\n[Rel: Skylink.READY_STATE_CHANGE]",
            "itemtype": "attribute",
            "name": "_readyState",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Room",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 327,
            "description": "Stores the Skylink server connection key for the selected room.",
            "itemtype": "attribute",
            "name": "_key",
            "type": "String",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 338,
            "description": "Stores the Skylink server Application Key owner string for the selected room.",
            "itemtype": "attribute",
            "name": "_appKeyOwner",
            "type": "String",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 349,
            "description": "Stores the room connection information that is passed for starting\n  the selected room connection. Some of these information are also\n  used and required to send for every messages sent to the platform\n  signaling connection for targeting the correct room and\n  self identification in the room.",
            "itemtype": "attribute",
            "name": "_room",
            "type": "JSON",
            "params": [
                {
                    "name": "id",
                    "description": "The room ID for identification to the platform signaling connection.",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "The generated room token given by the platform server for starting\n   the platform signaling connection.",
                    "type": "String"
                },
                {
                    "name": "startDateTime",
                    "description": "The start datetime stamp (in The startDateTime in\n   [(ISO 8601 format)](https://en.wikipedia.org/wiki/ISO_8601) that the call has started\n   sent by the platform server as an indication for the starting datetime of\n   the platform signaling connection to self.",
                    "type": "String"
                },
                {
                    "name": "duration",
                    "description": "The duration of the room meeting (in hours). This duration will\n   not affect non persistent room.",
                    "type": "String"
                },
                {
                    "name": "connection",
                    "description": "Connection The RTCPeerConnection constraints and configuration.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "peerConstraints",
                            "description": "<i>Deprecated feature</i>. The RTCPeerConnection\n   constraints that is passed in this format <code>new RTCPeerConnection(config, constraints);</code>.\n   This feature is not documented in W3C Specification draft and not advisable to use.",
                            "type": "JSON"
                        },
                        {
                            "name": "peerConfig",
                            "description": "The RTCPeerConnection\n   [RTCConfiguration](http://w3c.github.io/webrtc-pc/#idl-def-RTCConfiguration).",
                            "type": "JSON"
                        },
                        {
                            "name": "offerConstraints",
                            "description": "<i>Deprecated feature</i>. The RTCPeerConnection\n   [RTCOfferOptions](http://w3c.github.io/webrtc-pc/#idl-def-RTCOfferOptions) used in\n   <code>RTCPeerConnection.createOffer(successCb, failureCb, options);</code>.",
                            "type": "JSON"
                        },
                        {
                            "name": "sdpConstraints",
                            "description": "<i>Not in use</i>. The RTCPeerConnection\n   [RTCAnswerOptions](http://w3c.github.io/webrtc-pc/#idl-def-RTCAnswerOptions) to be used\n   in <code>RTCPeerConnection.createAnswer(successCb, failureCb, options);</code>.\n   This is currently not in use due to not all browsers supporting this feature yet.",
                            "type": "JSON"
                        },
                        {
                            "name": "mediaConstraints",
                            "description": "<i>Deprecated feature</i>. The getUserMedia()\n   [MediaStreamConstraints](https://w3c.github.io/mediacapture-main/getusermedia.html#idl-def-MediaStreamConstraints)\n   in <code>getUserMedia(constraints, successCb, failureCb);</code>.",
                            "type": "JSON"
                        }
                    ]
                }
            ],
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 390,
            "description": "Starts a <code>HTTP /GET</code> REST call to the platform server to\n  retrieve the required connection information.",
            "itemtype": "method",
            "name": "_requestServerInfo",
            "params": [
                {
                    "name": "method",
                    "description": "The HTTP method. The value should be provided as\n  <code>\"GET\"</code>.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "The HTTP URI to invoke the REST call to. The\n  value should be {{#crossLink \"Skylink/_path:attribute\"}}_path{{/crossLink}}.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback fired The callback fired after the\n  <code>HTTP /GET</code> REST call has a response from the platform server.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "status",
                            "description": "The HTTP status code of the HTTP response\n  given by the platform server.",
                            "type": "Number"
                        },
                        {
                            "name": "response",
                            "description": "The HTTP response data after the platform server\n  has responded with the HTTP request.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "success",
                                    "description": "The response from the platform server\n  if Application Key connection retrieval is successful and validated or not.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "pc_constraints",
                                    "description": "For success state. The RTCPeerConnection\n  constraints that would be configured in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room.peerConstraints{{/crossLink}} in\n  {{#crossLink \"Skylink/_parseInfo:method\"}}_parseInfo(){{/crossLink}}.\n  The data is in JSON stringified string and requires converting the JSON string\n     to an JSON object to use the object.",
                                    "type": "String"
                                },
                                {
                                    "name": "media_constraints",
                                    "description": "For success state. The getUserMedia()\n  MediaStreamConstraints that would be configured in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room.mediaConstraints{{/crossLink}} in\n  {{#crossLink \"Skylink/_parseInfo:method\"}}_parseInfo(){{/crossLink}}.\n  The data is in JSON stringified string and requires converting the JSON string\n    to an JSON object to use the object.",
                                    "type": "String"
                                },
                                {
                                    "name": "offer_constraints",
                                    "description": "For success state. The RTCPeerConnection\n  RTCOfferOptions that would be configured in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room.offerConstraints{{/crossLink}} in\n  {{#crossLink \"Skylink/_parseInfo:method\"}}_parseInfo(){{/crossLink}}.\n  The data is in JSON stringified string and requires converting the JSON string\n     to an JSON object to use the object.",
                                    "type": "String"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "For success state. The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The default\n  audio stream channel for self Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "Number"
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The default\n  video stream channel for self Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "Number"
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The default\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "Number"
                                },
                                {
                                    "name": "cid",
                                    "description": "For success state. The Skylink server connection key for the\n  selected room. This would be stored in {{#crossLink \"Skylink/_key:attribute\"}}_key{{/crossLink}}\n  in {{#crossLink \"Skylink/_parseInfo:method\"}}_parseInfo(){{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "apiOwner",
                                    "description": "For success state. The Skylink server Application\n  Key owner string for the selected room. This would be stored in\n  {{#crossLink \"Skylink/_appKeyOwner:attribute\"}}_appKeyOwner{{/crossLink}}\n  in {{#crossLink \"Skylink/_parseInfo:method\"}}_parseInfo(){{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "httpPortList",
                                    "description": "For success state. The list of HTTP\n  ports for reconnection retries. This would be stored in\n  {{#crossLink \"Skylink/_socketPorts:attribute\"}}_socketPorts.http:{{/crossLink}}.",
                                    "type": "Array"
                                },
                                {
                                    "name": "httpPortList.(#index)",
                                    "description": "The HTTP port that Skylink\n  could reattempt to establish for a signaling connection with <code>http:</code> protocol.",
                                    "type": "Number"
                                },
                                {
                                    "name": "httpsPortList",
                                    "description": "For success state. The list of HTTPS\n  ports for reconnection retries. This would be stored in\n  {{#crossLink \"Skylink/_socketPorts:attribute\"}}_socketPorts.https:{{/crossLink}}.",
                                    "type": "Array"
                                },
                                {
                                    "name": "httpsPortList.(#index)",
                                    "description": "The HTTPS port that Skylink\n  could reattempt to establish for a signaling connection with <code>https:</code> protocol or\n  when {{#crossLink \"Skylink/_forceSSL:attribute\"}}_forceSSL{{/crossLink}} is enabled.",
                                    "type": "Number"
                                },
                                {
                                    "name": "ipSigserver",
                                    "description": "For success state. The platform signaling endpoint URI\n  to open socket connection with. This would be stored in\n  {{#crossLink \"Skylink/_signalingServer:attribute\"}}_signalingServer{{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "roomCred",
                                    "description": "For success state. The generated room token given\n  by the platform server for starting the platform signaling connection. This would be stored in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room.token{{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "room_key",
                                    "description": "For success state. The room ID for identification\n  to the platform signaling connection. This would be stored in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room.id{{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "start",
                                    "description": "For success state. The start datetime stamp (in The startDateTime in\n  [(ISO 8601 format)](https://en.wikipedia.org/wiki/ISO_8601) that the call has started\n  sent by the platform server as an indication for the starting datetime of\n  the platform signaling connection to self. This would be stored in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room.startDateTime{{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "timeStamp",
                                    "description": "For success state. The self session timestamp.\n  This would be stored in {{#crossLink \"Skylink/_user:attribute\"}}_user.timeStamp{{/crossLink}}",
                                    "type": "String"
                                },
                                {
                                    "name": "userCred",
                                    "description": "For success state. The self session access token.\n  This would be stored in {{#crossLink \"Skylink/_user:attribute\"}}_user.token{{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "username",
                                    "description": "For success state. The self session ID.\n  This would be stored in {{#crossLink \"Skylink/_user:attribute\"}}_user.username{{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "info",
                                    "description": "For failure state. The error message thrown by\n  the platform server.",
                                    "type": "String"
                                },
                                {
                                    "name": "error",
                                    "description": "For failure state. The error code of the error thrown by\n  the platform server.",
                                    "type": "Number"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "params",
                    "description": "HTTP Params The HTTP data parameters that would be\n   <code>application/json;charset=UTF-8</code> encoded when sent to the\n   platform server.",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 555,
            "description": "Parses the connection information retrieved from the platform server and\n  stores them into the relevant attributes in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room{{/crossLink}} and\n  {{#crossLink \"Skylink/_user:attribute\"}}_user{{/crossLink}}.",
            "itemtype": "method",
            "name": "_parseInfo",
            "params": [
                {
                    "name": "info",
                    "description": "The HTTP response data if the HTTP status\n  code is <code>200</code> (which means <var>HTTP OK</var> code)",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "pc_constraints",
                            "description": "The RTCPeerConnection constraints.\n  The data is in JSON stringified string and requires converting the JSON string\n     to an JSON object to use the object.",
                            "type": "String"
                        },
                        {
                            "name": "media_constraints",
                            "description": "The getUserMedia() MediaStreamConstraints.\n  The data is in JSON stringified string and requires converting the JSON string\n     to an JSON object to use the object.",
                            "type": "String"
                        },
                        {
                            "name": "offer_constraints",
                            "description": "The RTCPeerConnection RTCOfferOptions.\n  The data is in JSON stringified string and requires converting the JSON string\n     to an JSON object to use the object.",
                            "type": "String"
                        },
                        {
                            "name": "bandwidth",
                            "description": "The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The default\n  audio stream channel for self Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "Number"
                                },
                                {
                                    "name": "video",
                                    "description": "The default\n  video stream channel for self Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "Number"
                                },
                                {
                                    "name": "data",
                                    "description": "The default\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "cid",
                            "description": "The Skylink server connection key for starting the\n  selected room connection.",
                            "type": "String"
                        },
                        {
                            "name": "apiOwner",
                            "description": "The Skylink server Application Key owner string for the selected room.",
                            "type": "String"
                        },
                        {
                            "name": "httpPortList",
                            "description": "The list of HTTP\n  ports for reconnection retries.",
                            "type": "Array",
                            "props": [
                                {
                                    "name": "(#index)",
                                    "description": "The HTTP port that Skylink\n  could reattempt to establish for a signaling connection with <code>http:</code> protocol.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "httpsPortList",
                            "description": "The list of HTTPS\n  ports for reconnection retries.",
                            "type": "Array",
                            "props": [
                                {
                                    "name": "(#index)",
                                    "description": "The HTTPS port that Skylink\n  could reattempt to establish for a signaling connection with <code>https:</code> protocol or\n  when {{#crossLink \"Skylink/_forceSSL:attribute\"}}_forceSSL{{/crossLink}} is enabled.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "ipSigserver",
                            "description": "The platform signaling endpoint URI\n  to open socket connection with.",
                            "type": "String"
                        },
                        {
                            "name": "roomCred",
                            "description": "The generated room token given\n  by the platform server for starting the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "room_key",
                            "description": "For success state. The room ID for identification\n  to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "start",
                            "description": "The start datetime stamp (in The startDateTime in\n  [(ISO 8601 format)](https://en.wikipedia.org/wiki/ISO_8601) that the call has started\n  sent by the platform server as an indication for the starting datetime of\n  the platform signaling connection to self.",
                            "type": "String"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The self session timestamp.",
                            "type": "String"
                        },
                        {
                            "name": "userCred",
                            "description": "The self session access token.",
                            "type": "String"
                        },
                        {
                            "name": "username",
                            "description": "The self session ID.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "readyStateChange",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 684,
            "description": "Starts loading the required dependencies and then retrieve the required\n  connection information from the platform server.",
            "itemtype": "method",
            "name": "_loadInfo",
            "trigger": "readyStateChange",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 779,
            "description": "Starts loading the required connection information to start connection\n  based on the selected room in {{#crossLink \"Skylink/joinRoom:method\"}}joinRoom(){{/crossLink}}.",
            "itemtype": "method",
            "name": "_initSelectedRoom",
            "params": [
                {
                    "name": "room",
                    "description": "The room to retrieve required connection information\n  to start connection. If room is not provided, the room\n  would default to the the <code>defaultRoom</code> option set\n  in {{#crossLink \"Skylink/init:method\"}}init() settings{{/crossLink}}.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The callback fired after required connection\n  information has been retrieved successfully with the provided media\n  settings or have met with an exception.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "trigger": "readyStateChange",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 830,
            "description": "Initialises and configures Skylink to begin any connection.\n<b>NOTE</b> that this is the first method that has to be called before\n  using any other functionalities other than debugging features like\n  {{#crossLink \"Skylink/setLogLevel:method\"}}setLogLevel(){{/crossLink}} and\n  {{#crossLink \"Skylink/setDebugMode:method\"}}setDebugMode(){{/crossLink}} and\n  after all event subscriptions like {{#crossLink \"Skylink/on:method\"}}on(){{/crossLink}}\n  or {{#crossLink \"Skylink/once:method\"}}once(){{/crossLink}} has been made.\nThis is where the Application Key is configured and attached to Skylink for usage.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "The configuration settings for Skylink.\n  If provided options is a <var>typeof</var> <code>string</code>, it will\n  be interpreted as the Application Key being provided.",
                    "type": "String|JSON",
                    "props": [
                        {
                            "name": "appKey",
                            "description": "Previously known as <code>apiKey</code>.\n  The Application Key that Skylink uses for initialising and connecting rooms.",
                            "type": "String"
                        },
                        {
                            "name": "defaultRoom",
                            "description": "The default room that\n  Skylink should connect to if there is no room provided in\n  {{#crossLink \"Skylink/joinRoom:method\"}}joinRoom(){{/crossLink}}.\n  If this value is not provided, the default room value would be\n  the Application Key provided.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "options.appKey"
                        },
                        {
                            "name": "roomServer",
                            "description": "The platform server URL that Skylink makes a\n  <code>HTTP /GET</code> to retrieve the connection information required.\n  This is a debugging feature, and it's not advisable to manipulate\n    this value unless you are using a beta platform server.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "region",
                            "description": "<i>Deprecated feature</i>. The regional server that Skylink\n   should connect to for fastest connectivity. [Rel: Skylink.REGIONAL_SERVER]",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "enableIceTrickle",
                            "description": "<i>Debugging Feature</i>.\n   The flag that indicates if PeerConnections\n   should enable trickling of ICE to connect the ICE connection. Configuring\n   this value to <code>false</code> may result in a slower connection but\n   a more stable connection.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableDataChannel",
                            "description": "<i>Debugging feature</i>.\n  The flag that indicates if PeerConnections\n  should have any DataChannel connections. Configuring this value to <code>false</code>\n  may result in failure to use features like\n  {{#crossLink \"Skylink/sendBlobData:method\"}}sendBlobData(){{/crossLink}},\n  {{#crossLink \"Skylink/sendP2PMessage:method\"}}sendP2PMessage(){{/crossLink}} and\n  {{#crossLink \"Skylink/sendURLData:method\"}}sendURLData(){{/crossLink}} or any\n  DataChannel connection related services.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableTURNServer",
                            "description": "<i>Debugging feature</i>.\n  The flag that indicates if PeerConnections connection should use any TURN server connection.\n  Tampering this flag may disable any successful Peer connection\n  that is behind any firewalls, so set this value at your own risk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableSTUNServer",
                            "description": "<i>Debugging feature</i>.\n  The flag that indicates if PeerConnections connection should use any STUN server connection.\n  Tampering this flag may cause issues to connections, so set this value at your own risk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "forceTURN",
                            "description": "The flag that indicates if PeerConnections connection\n  should only use TURN server connection which enables a quicker connectivity.\n  Note that this will not work if TURN is disabled for the Application Key provided.\n  This configuration will override the settings for <code>enableTURNServer</code>\n  and <code>enableSTUNServer</code> and set <code>enableTURNServer</code> as <code>true</code> and\n  <code>enableSTUNServer</code> as <code>false</code> if the value is set to <code>true</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "usePublicSTUN",
                            "description": "The flag that indicates if PeerConnections connection\n  should enable usage of public STUN server connection connectivity.\n  This configuration would not work if <code>enableSTUNServer</code> is set to <code>false</code>\n  or <code>forceTURN</code> is set to <code>true</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "TURNServerTransport",
                            "description": "<i>Debugging feature</i>.\n  The TURN server transport to enable for TURN server connections.\n  Tampering this flag may cause issues to connections, so set this value at your own risk.\n  [Rel: Skylink.TURN_TRANSPORT]",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "Skylink.TURN_TRANSPORT.ANY"
                        },
                        {
                            "name": "credentials",
                            "description": "The credentials configured for starting a new persistent\n  room meeting or connecting with Application Keys that do not use CORS authentication.\n  Setting the <code>startDateTime</code> or the <code>duration</code> will not affect\n  the actual duration for non persistent rooms. This feature would only affect connections with\n  Application Keys that is configured for persistent room feature.\n  To enable persistent room or disable CORS, you may set it in the developer console.\n  CORS may be disabled by setting the platform to <code>\"Other\"</code>.",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "startDateTime",
                                    "description": "The room start datetime stamp in\n  <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 format</a>.\n  This will start a new meeting based on the starting datetime stamp\n  in the room that was selected to join for Application Key that is configured\n  with persistent room feature. You may use\n  <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\">\n  Date.toISOString()</a> to retrieve ISO 8601 formatted date time stamp.\n  The start date time of the room will not affect non persistent room connection.",
                                    "type": "String"
                                },
                                {
                                    "name": "duration",
                                    "description": "The duration (in hours)\n  that the room duration should be in. This will set the duration starting from\n  the provided <code>startDateTime</code> onwards and after the duration is over,\n  the meeting is over and the room is closed for Application Key that is\n  configured with persistent room feature.\n  The duration will not affect non persistent room connection.The duration of the meeting in hours.<br>\n  <small>E.g. <code>0.5</code> for half an hour, <code>1.4</code> for 1 hour and 24 minutes</small>",
                                    "type": "Number"
                                },
                                {
                                    "name": "credentials",
                                    "description": "The room credentials for Application Key.\n  This is required for rooms connecting without CORS verification or starting a new persistent room meeting.<br><br>\n  <u>To generate the credentials:</u><br>\n  <ol>\n  <li>Concatenate a string that consists of the room name\n    the room meeting duration (in hours) and the start date timestamp (in ISO 8601 format).<br>\n    <small>Format <code>room + \"_\" + duration + \"_\" + startDateTimeStamp</code></small></li>\n  <li>Hash the concatenated string with the Application Key token using\n    <a href=\"https://en.wikipedia.org/wiki/SHA-1\">SHA-1</a>.\n    You may use the <a href=\"https://code.google.com/p/crypto-js/#HMAC\">CryptoJS.HmacSHA1</a> function to do so.<br>\n    <small>Example <code>var hash = CryptoJS.HmacSHA1(concatenatedString, token);</code></small></li>\n  <li>Convert the hash to a <a href=\"https://en.wikipedia.org/wiki/Base64\">Base64</a> encoded string. You may use the\n    <a href=\"https://code.google.com/p/crypto-js/#The_Cipher_Output\">CryptoJS.enc.Base64</a> function\n    to do so.<br><small>Example <code>var base64String = hash.toString(CryptoJS.enc.Base64); </code></small></li>\n  <li>Encode the Base64 encoded string to a URI component using UTF-8 encoding with\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a>.<br>\n    <small>Example <code>var credentials = encodeURIComponent(base64String);</code></small></li>\n  </ol><br>",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "audioFallback",
                            "description": "The flag that indicates if there is a failure in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}} in retrieving user media\n  video stream, it should fallback to retrieve audio stream only. This would not work for\n  {{#crossLink \"Skylink/joinRoom:method\"}}joinRoom(){{/crossLink}} except\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "forceSSL",
                            "description": "The flag to enforce an SSL platform signaling and platform server connection.\n  If self domain accessing protocol is <code>https:</code>, SSL connections\n  would be automatically used. This flag is mostly used for self domain accessing protocol\n  that is <code>http:</code> and enforcing the SSL connections for\n  platform signaling and platform server connection.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "audioCodec",
                            "description": "<i>Debugging Feature</i>.\n  The preferred audio codec that Peer connection\n  streaming audio codec should use in the connection when available. If not available, the default\n  codec would be the browser generated session description selected codec. [Rel: Skylink.AUDIO_CODEC]",
                            "type": "String",
                            "optional": true,
                            "optdefault": "Skylink.AUDIO_CODEC.AUTO"
                        },
                        {
                            "name": "videoCodec",
                            "description": "<i>Debugging Feature</i>.\n  The preferred video codec that Peer connection\n  streaming video codec should use in the connection when available. If not available, the default\n  codec would be the browser generated session description selected codec. [Rel: Skylink.VIDEO_CODEC]",
                            "type": "String",
                            "optional": true,
                            "optdefault": "Skylink.VIDEO_CODEC.AUTO"
                        },
                        {
                            "name": "socketTimeout",
                            "description": "The timeout that the socket connection should throw a\n  timeout exception when socket fails to receive a response from connection. Depending on\n  the max retries left based on the availability of ports given by the platform server,\n  the socket will reattempt to establish a socket connection with the signaling server.<br>\n  The mininum timeout value is <code>5000</code>.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "20000"
                        },
                        {
                            "name": "forceTURNSSL",
                            "description": "The flag to enforce an SSL TURN server connection.\n  If self domain accessing protocol is <code>https:</code>, SSL connections\n  would be automatically used. This flag is mostly used for self domain accessing protocol\n  that is <code>http:</code> and enforcing the SSL connections for\n  TURN server connection.\nThis will configure TURN server connection using port <code>443</code> only and\n  if <code>turns:</code> protocol is supported, it will use <code>turns:</code> protocol.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback fired after Skylink has been\n  initialised successfully or have met with an exception.\n  The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "errorCode",
                                    "description": "The\n  <a href=\"#attr_READY_STATE_CHANGE_ERROR\">READY_STATE_CHANGE_ERROR</a>\n  if there is an <a href=\"#event_readyStateChange\">readyStateChange</a>\n  event error that caused the failure for initialising Skylink.\n  [Rel: Skylink.READY_STATE_CHANGE_ERROR]",
                                    "type": "Number"
                                },
                                {
                                    "name": "error",
                                    "description": "The exception thrown that caused the failure\n  for initialising Skylink.",
                                    "type": "Object"
                                },
                                {
                                    "name": "status",
                                    "description": "The XMLHttpRequest status code received\n  when exception is thrown that caused the failure for initialising Skylink.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "appKey",
                                    "description": "Previously known as <code>apiKey</code>.\n  The Application Key that Skylink uses for initialising and connecting rooms.",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultRoom",
                                    "description": "The default room that\n  Skylink should connect to if there is no room provided in\n  <a href=\"#method_joinRoom\">joinRoom()</a>.",
                                    "type": "String"
                                },
                                {
                                    "name": "roomServer",
                                    "description": "The platform server URL that Skylink makes a\n  <code>HTTP /GET</code> to retrieve the connection information required.",
                                    "type": "String"
                                },
                                {
                                    "name": "enableIceTrickle",
                                    "description": "The flag that indicates if PeerConnections\n   should enable trickling of ICE to connect the ICE connection.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "enableDataChannel",
                                    "description": "The flag that indicates if PeerConnections\n  should have any DataChannel connections.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "enableTURNServer",
                                    "description": "The flag that indicates if\n  PeerConnections connection should use any TURN server connection.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "enableSTUNServer",
                                    "description": "The flag that indicates if\n  PeerConnections connection should use any STUN server connection.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "TURNServerTransport",
                                    "description": "The TURN server transport\n  to enable for TURN server connections.\n  [Rel: Skylink.TURN_TRANSPORT]",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "serverRegion",
                                    "description": "The regional server that Skylink\n   should connect to for fastest connectivity. [Rel: Skylink.REGIONAL_SERVER]",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "audioFallback",
                                    "description": "The flag that indicates if there is a failure in\n  <a href=\"#method_getUserMedia\">getUserMedia()</a> in retrieving user media\n  video stream, it should fallback to retrieve audio stream only.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "forceSSL",
                                    "description": "The flag to enforce an SSL platform signaling and platform server connection.\n  If self domain accessing protocol is <code>https:</code>, SSL connections\n  would be automatically used.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "audioCodec",
                                    "description": "The preferred audio codec that Peer connection\n  streaming audio codec should use in the connection when available. [Rel: Skylink.AUDIO_CODEC]",
                                    "type": "String"
                                },
                                {
                                    "name": "videoCodec",
                                    "description": "The preferred video codec that Peer connection\n  streaming video codec should use in the connection when available. [Rel: Skylink.VIDEO_CODEC]",
                                    "type": "String"
                                },
                                {
                                    "name": "socketTimeout",
                                    "description": "The timeout that the socket connection should throw a\n  timeout exception when socket fails to receive a response from connection. Depending on\n  the max retries left based on the availability of ports given by the platform server,\n  the socket will reattempt to establish a socket connection with the signaling server.",
                                    "type": "Number"
                                },
                                {
                                    "name": "forceTURNSSL",
                                    "description": "The flag to enforce an SSL TURN server connection.\n  If self domain accessing protocol is <code>https:</code>, SSL connections\n  would be automatically used.\nThis will configure TURN server connection using port <code>443</code> only and\n  if <code>turns:</code> protocol is supported, it will use <code>turns:</code> protocol.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "forceTURN",
                                    "description": "The flag that indicates if PeerConnections connection\n  should only use TURN server connection which enables a quicker connectivity.\n  Note that this will not work if TURN is disabled for the Application Key provided.\n  This configuration will override the settings for <code>enableTURNServer</code>\n  and <code>enableSTUNServer</code> and set <code>enableTURNServer</code> as <code>true</code> and\n  <code>enableSTUNServer</code> as <code>false</code> if the value is set to <code>true</code>.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "usePublicSTUN",
                                    "description": "The flag that indicates if PeerConnections connection\n  should enable usage of public STUN server connection connectivity.\n  This configuration would not work if <code>enableSTUNServer</code> is set to <code>false</code>\n  or <code>forceTURN</code> is set to <code>true</code>.",
                                    "type": "Boolean"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Note: Default room is appKey when no room\n  // Example 1: To initalize without setting any default room.\n  SkylinkDemo.init(\"YOUR_APP_KEY_HERE\");\n\n  // Example 2: To initialize with appKey and defaultRoom\n  SkylinkDemo.init({\n    appKey: \"YOUR_APP_KEY_HERE\",\n    defaultRoom: \"mainHangout\"\n  });\n\n  // Example 3: To initialize with credentials to set startDateTime and\n  // duration of the room\n  var hash = CryptoJS.HmacSHA1(roomname + \"_\" + duration + \"_\" +\n    (new Date()).toISOString(), token);\n  var credentials = encodeURIComponent(hash.toString(CryptoJS.enc.Base64));\n  SkylinkDemo.init({\n    appKey: \"YOUR_APP_KEY_HERE\",\n    defaultRoom: \"mainHangout\"\n    credentials: {\n       startDateTime: (new Date()).toISOString(),\n       duration: 500,\n       credentials: credentials\n    }\n  });\n\n  // Example 4: To initialize with callback\n  SkylinkDemo.init(\"YOUR_APP_KEY_HERE\", function(error,success){\n    if (error){\n      console.error(\"Init failed:\", error);\n    }\n    else{\n      console.info(\"Init succeed:\", success);\n    }\n  });"
            ],
            "trigger": "readyStateChange",
            "required": 1,
            "component": "Room",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 1,
            "description": "These are the logging levels that Skylink provides.\n- This manipulates the debugging messages sent to <code>console</code> object.\n- Refer to [Javascript Web Console](https://developer.mozilla.org/en/docs/Web/API/console).",
            "itemtype": "attribute",
            "name": "LOG_LEVEL",
            "type": "JSON",
            "params": [
                {
                    "name": "DEBUG",
                    "description": "<small>Value <code>4</code> | Level higher than <code>LOG</code></small>\n  Displays debugging logs from <code>LOG</code> level onwards with <code>DEBUG</code> logs.",
                    "type": "Number"
                },
                {
                    "name": "LOG",
                    "description": "<small>Value <code>3</code> | Level higher than <code>INFO</code></small>\n  Displays debugging logs from <code>INFO</code> level onwards with <code>LOG</code> logs.",
                    "type": "Number"
                },
                {
                    "name": "INFO",
                    "description": "<small>Value <code>2</code> | Level higher than <code>WARN</code></small>\n  Displays debugging logs from <code>WARN</code> level onwards with <code>INFO</code> logs.",
                    "type": "Number"
                },
                {
                    "name": "WARN",
                    "description": "<small>Value <code>1</code> | Level higher than <code>ERROR</code></small>\n  Displays debugging logs of <code>ERROR</code> level with <code>WARN</code> logs.",
                    "type": "Number"
                },
                {
                    "name": "ERROR",
                    "description": "<small><b>DEFAULT</b> | Value <code>0</code> | Lowest level</small>\n  Displays only <code>ERROR</code> logs.",
                    "type": "Number"
                }
            ],
            "readonly": "",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 30,
            "description": "The format string that is printed in every Skylink console logs for Skylink logs identification.<br>\n<small>Example: <code>\"SkylinkJS - <<logs here>>\"</code></small>",
            "itemtype": "attribute",
            "name": "_LOG_KEY",
            "type": "String",
            "scoped": "true",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 45,
            "description": "Stores the list of Skylink console logging levels in an array.",
            "itemtype": "attribute",
            "name": "_LOG_LEVELS",
            "type": "Array",
            "required": 1,
            "scoped": "true",
            "access": "private",
            "tagname": "",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 58,
            "description": "Stores the current Skylink log level.\nBy default, the value is <code>ERROR</code>.",
            "itemtype": "attribute",
            "name": "_logLevel",
            "type": "String",
            "default": "Skylink.LOG_LEVEL.ERROR",
            "required": 1,
            "scoped": "true",
            "access": "private",
            "tagname": "",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 73,
            "description": "The flag that indicates if Skylink debugging mode is enabled.\nThis is not to be confused with {{#crossLink \"Skylink/setLogLevel:method\"}}setLogLevel(){{/crossLink}}\n  functionality, as that touches the output Web console log levels, and this\n  enables the debugging trace of the logs <code>console.trace()</code> or storage of the console logs.",
            "itemtype": "attribute",
            "name": "_enableDebugMode",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 90,
            "description": "The flag that indicates if Skylink should store the logs in\n  {{#crossLink \"Skylink/_storedLogs:attribute\"}}_storedLogs{{/crossLink}}.",
            "itemtype": "attribute",
            "name": "_enableDebugStack",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 105,
            "description": "The flag that indicates if Skylink console logs should all output as\n  <code>console.trace()</code>.\nIf <code>console.trace()</code> is not supported, it will fallback and\n  output as <code>console.log()</code>.",
            "itemtype": "attribute",
            "name": "_enableDebugTrace",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 122,
            "description": "Stores all Skylink console logs.",
            "itemtype": "attribute",
            "name": "_storedLogs",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 135,
            "description": "Gets the stored Skylink console logs from\n  {{#crossLink \"Skylink/_storedLogs:attribute\"}}_storedLogs{{/crossLink}}.",
            "itemtype": "method",
            "name": "_getStoredLogsFn",
            "params": [
                {
                    "name": "logLevel",
                    "description": "The specific log level of Skylink console logs\n  that should be returned. If value is not provided, it will return all stored console logs.\n [Rel: Skylink.LOG_LEVEL]",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The array of stored console logs based on the log level provided.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 163,
            "description": "Clears the stored Skylink console logs in\n  {{#crossLink \"Skylink/_storedLogs:attribute\"}}_storedLogs{{/crossLink}}.",
            "itemtype": "method",
            "name": "_clearAllStoredLogsFn",
            "params": [
                {
                    "name": "logLevel",
                    "description": "The specific log level of Skylink console logs\n  that should be cleared. If value is not provided, it will clear all stored console logs.\n [Rel: Skylink.LOG_LEVEL]",
                    "type": "Number",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 181,
            "description": "Prints all the stored Skylink console logs into the Web console from\n  {{#crossLink \"Skylink/_storedLogs:attribute\"}}_storedLogs{{/crossLink}}.",
            "itemtype": "method",
            "name": "_printAllStoredLogsFn",
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 208,
            "description": "The object that handles the stored Skylink console logs.\n- {{#crossLink \"Skylink/setDebugMode:method\"}}setDebugMode(){{/crossLink}} <code>storeLogs</code> flag\n  must be set as <code>true</code> to enable the storage of logs.",
            "itemtype": "property",
            "name": "SkylinkLogs",
            "type": "JSON",
            "required": 1,
            "global": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 221,
            "description": "Gets the stored Skylink console logs.",
            "itemtype": "property",
            "name": "SkylinkLogs.getLogs",
            "return": {
                "description": "The array of stored console logs based on the log level provided.",
                "type": "Array"
            },
            "example": [
                "\n // Example 1: Get logs of specific level\n var debugLogs = SkylinkLogs.getLogs(SkylinkDemo.LOG_LEVEL.DEBUG);\n\n // Example 2: Get all logs\n var allLogs = SkylinkLogs.getLogs();"
            ],
            "type": "Function",
            "required": 1,
            "global": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "logLevel",
                    "description": "The specific log level of Skylink console logs\n  that should be returned.<br>If value is not provided, it will return all stored console logs.\n [Rel: Skylink.LOG_LEVEL]",
                    "type": "Number",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 243,
            "description": "Clears the stored Skylink console logs.",
            "itemtype": "property",
            "name": "SkylinkLogs.clearAllLogs",
            "type": "Function",
            "example": [
                "\n  SkylinkLogs.clearAllLogs(); // empties all logs"
            ],
            "required": 1,
            "global": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "logLevel",
                    "description": "The specific log level of Skylink console logs\n  that should be cleared. If value is not provided, it will clear all stored console logs.\n [Rel: Skylink.LOG_LEVEL]",
                    "type": "Number",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 260,
            "description": "Prints all the stored Skylink console logs into the [Web console](https://developer.mozilla.org/en/docs/Web/API/console).",
            "itemtype": "property",
            "name": "SkylinkLogs.printAllLogs",
            "type": "Function",
            "example": [
                "\n  SkylinkLogs.printAllLogs(); // check the console"
            ],
            "required": 1,
            "global": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 275,
            "description": "Handles the Skylink logs and stores the console log message in\n  {{#crossLink \"Skylink/_storedLogs:attribute\"}}_storedLogs{{/crossLink}}\n  if {{#crossLink \"Skylink/_enableDebugStack:attribute\"}}_enableDebugStack{{/crossLink}} is\n  set to <code>true</code> and prints out the log to the Web console.",
            "itemtype": "method",
            "name": "_logFn",
            "params": [
                {
                    "name": "logLevel",
                    "description": "The console log message log level. [Rel: Skylink.LOG_LEVEL]",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The console log message contents.",
                    "type": "Array|String",
                    "props": [
                        {
                            "name": "1",
                            "description": "The interface the message is associated with.",
                            "type": "String"
                        },
                        {
                            "name": "2",
                            "description": "Any additional message information that the message is\n   associated with.",
                            "type": "String|Array"
                        },
                        {
                            "name": "3:",
                            "description": "The console log message message data.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "0",
                    "description": "The Peer ID the message is associated with.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "debugObject",
                    "description": "The console debugging message object to accompany\n   and display that associates with the console log message.",
                    "type": "Object|String",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 357,
            "description": "The object that handles the logging functionality in Skylink.",
            "itemtype": "attribute",
            "name": "log",
            "type": "JSON",
            "params": [
                {
                    "name": "debug",
                    "description": "See {{#crossLink \"Skylink/log.debug:property\"}}log.debug(){{/crossLink}}.",
                    "type": "Function"
                },
                {
                    "name": "log",
                    "description": "See {{#crossLink \"Skylink/log.log:property\"}}log.log(){{/crossLink}}.",
                    "type": "Function"
                },
                {
                    "name": "info",
                    "description": "See {{#crossLink \"Skylink/log.info:property\"}}log.info(){{/crossLink}}.",
                    "type": "Function"
                },
                {
                    "name": "warn",
                    "description": "See {{#crossLink \"Skylink/log.warn:property\"}}log.warn(){{/crossLink}}.",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "See {{#crossLink \"Skylink/log.error:property\"}}log.error(){{/crossLink}}.",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 374,
            "description": "Handles the <code>console.debug</code> console log message.",
            "itemtype": "property",
            "name": "log.debug",
            "type": "Function",
            "example": [
                "\n  // Logging for message\n  log.debug(\"This is my message\", object);"
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "message",
                    "description": "The console log message contents.",
                    "type": "Array|String",
                    "props": [
                        {
                            "name": "1",
                            "description": "The interface the message is associated with.",
                            "type": "String"
                        },
                        {
                            "name": "2",
                            "description": "Any additional message information that the message is\n   associated with.",
                            "type": "String|Array"
                        },
                        {
                            "name": "3:",
                            "description": "The console log message message data.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "0",
                    "description": "The Peer ID the message is associated with.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "debugObject",
                    "description": "The console debugging message object to accompany\n   and display that associates with the console log message.",
                    "type": "Object|String",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 400,
            "description": "Handles the <code>console.log</code> console log message.",
            "itemtype": "property",
            "name": "log.log",
            "type": "Function",
            "example": [
                "\n  // Logging for message\n  log.log(\"This is my message\", object);"
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "message",
                    "description": "The console log message contents.",
                    "type": "Array|String",
                    "props": [
                        {
                            "name": "1",
                            "description": "The interface the message is associated with.",
                            "type": "String"
                        },
                        {
                            "name": "2",
                            "description": "Any additional message information that the message is\n   associated with.",
                            "type": "String|Array"
                        },
                        {
                            "name": "3:",
                            "description": "The console log message message data.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "0",
                    "description": "The Peer ID the message is associated with.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "debugObject",
                    "description": "The console debugging message object to accompany\n   and display that associates with the console log message.",
                    "type": "Object|String",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 426,
            "description": "Handles the <code>console.info</code> console log message.",
            "itemtype": "property",
            "name": "log.info",
            "type": "Function",
            "example": [
                "\n  // Logging for message\n  log.debug(\"This is my message\", object);"
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "message",
                    "description": "The console log message contents.",
                    "type": "Array|String",
                    "props": [
                        {
                            "name": "1",
                            "description": "The interface the message is associated with.",
                            "type": "String"
                        },
                        {
                            "name": "2",
                            "description": "Any additional message information that the message is\n   associated with.",
                            "type": "String|Array"
                        },
                        {
                            "name": "3:",
                            "description": "The console log message message data.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "0",
                    "description": "The Peer ID the message is associated with.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "debugObject",
                    "description": "The console debugging message object to accompany\n   and display that associates with the console log message.",
                    "type": "Object|String",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 452,
            "description": "Handles the <code>console.warn</code> console log message.",
            "itemtype": "property",
            "name": "log.warn",
            "type": "Function",
            "example": [
                "\n  // Logging for message\n  log.debug(\"Here's a warning. Please do xxxxx to resolve this issue\", object);"
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "message",
                    "description": "The console log message contents.",
                    "type": "Array|String",
                    "props": [
                        {
                            "name": "1",
                            "description": "The interface the message is associated with.",
                            "type": "String"
                        },
                        {
                            "name": "2",
                            "description": "Any additional message information that the message is\n   associated with.",
                            "type": "String|Array"
                        },
                        {
                            "name": "3:",
                            "description": "The console log message message data.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "0",
                    "description": "The Peer ID the message is associated with.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "debugObject",
                    "description": "The console debugging message object to accompany\n   and display that associates with the console log message.",
                    "type": "Object|String",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 477,
            "description": "Handles the <code>console.error</code> console log message.",
            "itemtype": "property",
            "name": "log.error",
            "type": "Function",
            "example": [
                "\n  // Logging for external information\n  log.error(\"There has been an error\", object);"
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "message",
                    "description": "The console log message contents.",
                    "type": "Array|String",
                    "props": [
                        {
                            "name": "1",
                            "description": "The interface the message is associated with.",
                            "type": "String"
                        },
                        {
                            "name": "2",
                            "description": "Any additional message information that the message is\n   associated with.",
                            "type": "String|Array"
                        },
                        {
                            "name": "3:",
                            "description": "The console log message message data.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "0",
                    "description": "The Peer ID the message is associated with.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "debugObject",
                    "description": "The console debugging message object to accompany\n   and display that associates with the console log message.",
                    "type": "Object|String",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 504,
            "description": "Configures the Skylink console log level that would determine the\n  type of console logs that would be printed in the [Web console](https://developer.mozilla.org/en/docs/Web/API/console).",
            "itemtype": "method",
            "name": "setLogLevel",
            "params": [
                {
                    "name": "logLevel",
                    "description": "The log level of console message logs to\n   be printed in the Web console. [Rel: Skylink.LOG_LEVEL]",
                    "type": "Number",
                    "optional": true
                }
            ],
            "example": [
                "\n  //Display logs level: Error, warn, info, log and debug.\n  SkylinkDemo.setLogLevel(SkylinkDemo.LOG_LEVEL.DEBUG);"
            ],
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 531,
            "description": "Configures the Skylink debugging tools.",
            "itemtype": "method",
            "name": "setDebugMode",
            "params": [
                {
                    "name": "options",
                    "description": "The debugging settings for Skylink.\n  If provided options is a <var>typeof</var> <code>boolean</code>,\n  <code>storeLogs</code> and <code>trace</code> will be set to <code>true</code>.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "trace",
                            "description": "The flag that indicates if Skylink console\n  logs should all output as <code>console.trace()</code>.\n  If <code>console.trace()</code> is not supported, it will fallback and\n  output as <code>console.log()</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "storeLogs",
                            "description": "The flag that indicates if\n  Skylink should store the logs in\n  {{#crossLink \"Skylink/SkylinkLogs:property\"}}SkylinkLogs{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: just to enable\n  SkylinkDemo.setDebugMode(true);\n  // or\n  SkylinkDemo.setDebugMode();\n\n  // Example 2: just to disable\n  SkylinkDemo.setDebugMode(false);\n\n  // Example 3: disable storeLogs or trace feature individually\n  SkylinkDemo.setDebugMode({ trace: true });"
            ],
            "component": "Log",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1,
            "description": "Stores the list of event subscription handlers from the\n  <a href=\"#method_on\"><code>on() method</code></a>.",
            "itemtype": "attribute",
            "name": "_EVENTS",
            "params": [
                {
                    "name": "<#event>",
                    "description": "The list of the event subscription handlers.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "<#index>",
                            "description": "The event subscription handler.",
                            "type": "Function"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 13,
            "description": "Event triggered when the socket connection to the platform signaling is opened.\n- This event means that socket connection is open and self is ready to join the room.",
            "itemtype": "event",
            "name": "channelOpen",
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 23,
            "description": "Event triggered when the socket connection to the platform signaling is closed.\n- This event means that socket connection is closed and self has left the room.",
            "itemtype": "event",
            "name": "channelClose",
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 33,
            "description": "Event triggered when the socket connection is exchanging messages with the platform signaling.\n- This event is a debugging feature, and it's not advisable to subscribe to\n  this event unless you are debugging the socket messages\n  received from the platform signaling.",
            "itemtype": "event",
            "name": "channelMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The socket message object data received from the platform signaling.",
                    "type": "JSON"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 46,
            "description": "Event triggered when the socket connection has occurred an exception\n  during a connection with the platform signaling.\n- After this event is triggered, it may result in <a href=\"#event_channelClose\">channelClose</a>,\n  and the socket connection with the platform signaling could be disrupted.",
            "itemtype": "event",
            "name": "channelError",
            "params": [
                {
                    "name": "error",
                    "description": "The error object thrown that caused the exception.",
                    "type": "Object|String"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 59,
            "description": "Event triggered when attempting to reconnect the socket connection with the platform signaling.\n- Depending on the current <code>type</code> triggered in <a href=\"#event_socketError\">\n  socketError</a> event before, it may or may not attempt the socket reconnection and\n  this event may not be triggered.\n- If reconnection attempt fails, it will trigger <a href=\"#event_socketError\">socketError</a> event\n  again and repeat the stage from there.",
            "itemtype": "event",
            "name": "channelRetry",
            "params": [
                {
                    "name": "fallbackType",
                    "description": "The fallback socket transport that Skylink is attempting to reconnect with.\n  [Rel: Skylink.SOCKET_FALLBACK]",
                    "type": "String"
                },
                {
                    "name": "currentAttempt",
                    "description": "The current reconnection attempt.",
                    "type": "Number"
                }
            ],
            "component": "Events",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 76,
            "description": "Event triggered when attempt to <em>(re)</em>connect the socket connection with the platform signaling has failed.\n- Depending on the current <code>type</code> payload, it may or may not attempt the\n  socket reconnection and <a href=\"#event_channelRetry\">channelRetry</a> event may not be triggered.\n- If reconnection attempt fails and there are still available ports to reconnect with,\n  it will trigger <a href=\"#event_channelRetry\">channelRetry</a> event again and\n  repeat the stage from there.",
            "itemtype": "event",
            "name": "socketError",
            "params": [
                {
                    "name": "errorCode",
                    "description": "The socket connection error code received.\n  [Rel: Skylink.SOCKET_ERROR]",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The error object thrown that caused the failure.",
                    "type": "Number|String|Object"
                },
                {
                    "name": "type",
                    "description": "The socket transport that Skylink has failed to connect with.\n  [Rel: Skylink.SOCKET_FALLBACK]",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 95,
            "description": "Event triggered when room connection information is being retrieved from platform server.\n- This is also triggered when <a href=\"#method_init\">init()</a> is invoked, but\n  the socket connection events like <a href=\"#event_channelOpen\">channelOpen</a> does\n  not get triggered but stops at <u>readyStateChange</u> event.",
            "itemtype": "event",
            "name": "readyStateChange",
            "params": [
                {
                    "name": "readyState",
                    "description": "The current ready state of the retrieval when the event is triggered.\n  [Rel: Skylink.READY_STATE_CHANGE]",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The error object thrown when there is a failure in retrieval.\n  If received as <code>null</code>, it means that there is no errors.",
                    "type": "JSON",
                    "optional": true,
                    "optdefault": "null",
                    "props": [
                        {
                            "name": "status",
                            "description": "Http status when retrieving information.\n  May be empty for other errors.",
                            "type": "Number"
                        },
                        {
                            "name": "errorCode",
                            "description": "The\n  <a href=\"#attr_READY_STATE_CHANGE_ERROR\">READY_STATE_CHANGE_ERROR</a>\n  if there is an <a href=\"#event_readyStateChange\">readyStateChange</a>\n  event error that caused the failure for initialising Skylink.\n  [Rel: Skylink.READY_STATE_CHANGE_ERROR]",
                            "type": "Number"
                        },
                        {
                            "name": "content",
                            "description": "The exception thrown that caused the failure\n  for initialising Skylink.",
                            "type": "Object"
                        },
                        {
                            "name": "status",
                            "description": "The XMLHttpRequest status code received\n  when exception is thrown that caused the failure for initialising Skylink.",
                            "type": "Number"
                        }
                    ]
                },
                {
                    "name": "room",
                    "description": "The selected room connection information that Skylink is attempting\n  to retrieve the information for to start connection to.",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 124,
            "description": "Event triggered when a Peer handshaking state has changed.\n- This event may trigger <code>state</code> <code>HANDSHAKE_PROGRESS.ENTER</code> for\n  self to indicate that broadcast to ping for any existing Peers in the room has\n  been made.\n- This event is a debugging feature, and it's used to check the\n  Peer handshaking connection status.\n- This starts the Peer connection handshaking, where it retrieves all the Peer\n  information and then proceeds to start the ICE connection.",
            "itemtype": "event",
            "name": "handshakeProgress",
            "params": [
                {
                    "name": "state",
                    "description": "The Peer connection handshake state.\n  [Rel: Skylink.HANDSHAKE_PROGRESS]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID associated with the connection\n  handshake state.",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The error object thrown when there is a failure in\n  the connection handshaking.",
                    "type": "Object|String",
                    "optional": true
                }
            ],
            "component": "Events",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 146,
            "description": "Event triggered when a Peer connection ICE gathering state has changed.\n- This event is a debugging feature, and it's used to check the\n  Peer ICE candidate gathering status.\n- This indicates if the ICE gathering has been completed to\n  start ICE connection for DataChannel and media streaming connection.",
            "itemtype": "event",
            "name": "candidateGenerationState",
            "params": [
                {
                    "name": "state",
                    "description": "The current ICE gathering state.\n  <small>See the list of available triggered states in the related link.</small>\n  [Rel: Skylink.CANDIDATE_GENERATION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID associated with the connection",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 163,
            "description": "Event triggered when a Peer connection signaling state has changed.\n- This event is a debugging feature, and it's used to check the\n  Peer signaling connection status.\n- This event indicates if the session description is received\n  to start ICE gathering for DataChannel and media streaming connection.",
            "itemtype": "event",
            "name": "peerConnectionState",
            "params": [
                {
                    "name": "state",
                    "description": "The current connection signaling state.\n  [Rel: Skylink.PEER_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID associated with the current connection\n  signaling state.",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 180,
            "description": "Event triggered when a Peer connection ICE connection state has changed.\n- This event is a debugging feature, and it's used to check the\n  Peer ICE connection of added ICE candidates status.\n- This event indicates if the ICE connection is established for successful\n  DataChannel and media streaming connection.",
            "itemtype": "event",
            "name": "iceConnectionState",
            "params": [
                {
                    "name": "state",
                    "description": "The current ICE connection state.\n  [Rel: Skylink.ICE_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID associated with the current ICE connection state.",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 196,
            "description": "Event triggered when access to self user media stream has failed.\n- If <code>audioFallback</code> is enabled in <a href=\"#method_init\">init()</a>,\n  it will throw an error if audio only user media stream failed after\n  a failed attempt to retrieve video and audio user media.",
            "itemtype": "event",
            "name": "mediaAccessError",
            "params": [
                {
                    "name": "error",
                    "description": "The error object thrown that caused the failure.",
                    "type": "Object|String"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag that indicates if self\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean"
                },
                {
                    "name": "isAudioFallbackError",
                    "description": "The flag that indicates if Skylink throws\n   the error after an audio fallback has been attempted.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 213,
            "description": "Event triggered when media access fallback has been made.\n- If <code>audioFallback</code> is enabled in <a href=\"#method_init\">init()</a>,\n  and if there is a failed attempt to retrieve video and audio user media,\n  it will attempt to do the audio fallback.\n- If MediaStream successfully received does not meet to expected tracks, this\n  event would be triggered.",
            "itemtype": "event",
            "name": "mediaAccessFallback",
            "params": [
                {
                    "name": "error",
                    "description": "The error object information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object thrown that caused the failure\n  from retrieve video and audio user media stream.\n  is triggered because (video+audio) error is fallbacking to audio only.",
                            "type": "Object|String"
                        },
                        {
                            "name": "diff",
                            "description": "The list of expected audio and video tracks and received\n  tracks.<br>This is only defined when <code>state</code> payload is <code>1</code>.",
                            "type": "JSON",
                            "optional": true,
                            "optdefault": "null",
                            "props": [
                                {
                                    "name": "video",
                                    "description": "The expected and received video tracks.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.expected",
                                    "description": "The expected video tracks.",
                                    "type": "Number"
                                },
                                {
                                    "name": "video.received",
                                    "description": "The received video tracks.",
                                    "type": "Number"
                                },
                                {
                                    "name": "audio",
                                    "description": "The expected and received audio tracks.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "audio.expected",
                                    "description": "The expected audio tracks.",
                                    "type": "Number"
                                },
                                {
                                    "name": "audio.received",
                                    "description": "The received audio tracks.",
                                    "type": "Number"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "state",
                    "description": "The access fallback state.\n<small><ul>\n<li><code>0</code>: Attempting to retrieve access for fallback state.</li>\n<li><code>1</code>: Fallback access has been completed successfully</li>\n<li><code>-1</code>: Failed retrieving fallback access</li>\n</ul></small>",
                    "type": "Number"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag that indicates if this event ia an\n  fallback from failed screensharing retrieval or attaching of audio.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "isAudioFallback",
                    "description": "The flag that indicates if this event is an\n  audio fallbacking from failed attempt to retrieve video and audio user media.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "component": "Events",
            "since": "0.6.3",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 249,
            "description": "Event triggered when access to self user media stream is successfully\n  attached to Skylink.",
            "itemtype": "event",
            "name": "mediaAccessSuccess",
            "params": [
                {
                    "name": "stream",
                    "description": "The self user [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n  object. To display the MediaStream object to a <code>video</code> or <code>audio</code>, simply invoke:<br>\n  <code>attachMediaStream(domElement, stream);</code>.",
                    "type": "Object"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag that indicates if self\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 264,
            "description": "Event triggered when the application requires to retrieve self\n  user media stream manually instead of doing it automatically in\n  {{#crossLink \"Skylink/joinRoom:method\"}}joinRoom(){{/crossLink}}.\n- This event triggers based on the configuration of <code>manualGetUserMedia</code>\n  in the <a href=\"#method_joinRoom\">joinRoom() configuration settings</a>.\n- Developers must manually invoke <a href=\"#method_getUserMedia\">getUserMedia()</a>\n  to retrieve the user media stream before self would join the room.\n  Once the user media stream is attached, self would proceed to join the room\n  automatically.",
            "itemtype": "event",
            "name": "mediaAccessRequired",
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 281,
            "description": "Event triggered when self user media stream attached to Skylink has been stopped.",
            "itemtype": "event",
            "name": "mediaAccessStopped",
            "params": [
                {
                    "name": "isScreensharing",
                    "description": "The flag that indicates if self\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 292,
            "description": "Event triggered when a Peer joins the room.",
            "itemtype": "event",
            "name": "peerJoined",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID of the new peer\n  that has joined the room.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The Peer Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated Peer.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  Peer Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  <a href=\"#method_init\">init()</a>\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The Peer\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The Peer\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The Peer\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The Peer\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The Peer\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the Peer connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The Peer Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The Peer platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The Peer platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The Peer platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The Peer platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the Peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the Peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 367,
            "description": "Event triggered when a Peer connection has been restarted for\n  a reconnection.",
            "itemtype": "event",
            "name": "peerRestart",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID of the connection that\n  is restarted for a reconnection.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The Peer Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated Peer.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  Peer Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  <a href=\"#method_init\">init()</a>\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The Peer\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The Peer\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The Peer\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The Peer\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The Peer\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the Peer connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The Peer Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The Peer platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The Peer platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The Peer platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The Peer platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the Peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelfInitiateRestart",
                    "description": "The flag that indicates if self is\n   the one who have initiated the Peer connection restart.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 444,
            "description": "Event triggered when a Peer information have been updated.\n- This event would only be triggered if self is in the room.\n- This event triggers when the <code>peerInfo</code> data is updated,\n  like <code>peerInfo.mediaStatus</code> or the <code>peerInfo.userData</code>,\n  which is invoked through <a href=\"#method_muteStream\">muteStream()</a> or\n  <a href=\"#method_setUserData\">setUserData()</a>.",
            "itemtype": "event",
            "name": "peerUpdated",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID of the peer with updated information.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The Peer Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated Peer.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  Peer Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  <a href=\"#method_init\">init()</a>\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The Peer\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The Peer\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The Peer\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The Peer\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The Peer\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the Peer connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The Peer Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The Peer platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The Peer platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The Peer platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The Peer platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the Peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the Peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 526,
            "description": "Event triggered when a Peer leaves the room.",
            "itemtype": "event",
            "name": "peerLeft",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID of the peer\n  that had left the room.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The Peer Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated Peer.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  Peer Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  <a href=\"#method_init\">init()</a>\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The Peer\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The Peer\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The Peer\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The Peer\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The Peer\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the Peer connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The Peer Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The Peer platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The Peer platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The Peer platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The Peer platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the Peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the Peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 601,
            "description": "Event triggered when self is disconnected from room.",
            "itemtype": "event",
            "name": "sessionDisconnect",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID of the peer\n  that had left the room.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The Peer Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated Peer.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  Peer Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  <a href=\"#method_init\">init()</a>\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The Peer\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The Peer\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The Peer\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The Peer\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The Peer\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the Peer connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The Peer Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The Peer platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The Peer platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The Peer platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The Peer platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the Peer is in.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "component": "Events",
            "since": "0.6.10",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 675,
            "description": "Event triggered when a Stream is sent by Peer.\n- This event may trigger for self, which indicates that self has joined the room\n  and is sending this Stream object to other Peers connected in the room.",
            "itemtype": "event",
            "name": "incomingStream",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID associated to the Stream object.",
                    "type": "String"
                },
                {
                    "name": "stream",
                    "description": "The Peer\n  [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n  object that is sent in this connection.\n  To display the MediaStream object to a <code>video</code> or <code>audio</code>, simply invoke:<br>\n  <code>attachMediaStream(domElement, stream);</code>.",
                    "type": "Object"
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the Peer.",
                    "type": "Boolean"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The Peer Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated Peer.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  Peer Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  <a href=\"#method_init\">init()</a>\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The Peer\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The Peer\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The Peer\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The Peer\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The Peer\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the Peer connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The Peer Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The Peer platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The Peer platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The Peer platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The Peer platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the Peer is in.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 756,
            "description": "Event triggered when message data is received from Peer.\n- This event may trigger for self when sending message data to Peer,\n  which indicates that self has sent the message data.",
            "itemtype": "event",
            "name": "incomingMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from Peer.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "content",
                            "description": "The message object content. This is the\n  message data content passed in {{#crossLink \"Skylink/sendMessage:method\"}}sendMessage(){{/crossLink}}\n  and {{#crossLink \"Skylink/sendP2PMessage:method\"}}sendP2PMessage(){{/crossLink}}.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "senderPeerId",
                            "description": "The Peer ID of the peer who\n  sent the message object.",
                            "type": "String"
                        },
                        {
                            "name": "targetPeerId",
                            "description": "The array of targeted Peer\n  peers or the single targeted Peer the message is\n  targeted to received the message object. If the value is <code>null</code>, the message\n  object is broadcasted to all Peer peers in the room.",
                            "type": "String|Array",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "isPrivate",
                            "description": "The flag that indicates if the message object is sent to\n  targeted Peer peers and not broadcasted to all Peer peers.",
                            "type": "Boolean"
                        },
                        {
                            "name": "isDataChannel",
                            "description": "The flag that indicates if the message object is sent\n  from the platform signaling socket connection or P2P channel connection (DataChannel connection).",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID of peer who sent the\n  message object.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The Peer Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated Peer.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  Peer Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  <a href=\"#method_init\">init()</a>\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The Peer\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The Peer\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The Peer\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The Peer\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The Peer\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the Peer connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The Peer Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The Peer platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The Peer platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The Peer platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The Peer platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the Peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the Peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 847,
            "description": "Event triggered when a data transfer is completed.\n- This event may trigger for self when transferring data to Peer,\n  which indicates that self has transferred the data successfully.\n- For more extensive states like the outgoing and incoming\n  data transfer progress and rejection of data transfer requests,\n  you may subscribe to the <a href=\"#event_dataTransferState\">dataTransferState</a> event.\n- If <code>enableDataChannel</code> disabled in <a href=\"#method_init\">init() configuration\n  settings</a>, this event will not be triggered at all.",
            "itemtype": "event",
            "name": "incomingData",
            "params": [
                {
                    "name": "data",
                    "description": "The transferred data object.<br>\n  For Blob data object, see the\n  [createObjectURL](https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL)\n  method on how you can convert the Blob data object to a download link.",
                    "type": "Blob|String"
                },
                {
                    "name": "transferId",
                    "description": "The transfer ID of the completed data transfer.",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID associated with the data transfer.",
                    "type": "String"
                },
                {
                    "name": "transferInfo",
                    "description": "The transfer data object information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "name",
                            "description": "The transfer data object name.\n  If there is no name based on the Blob given, the name would be the transfer ID.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "transferId"
                        },
                        {
                            "name": "size",
                            "description": "The transfer data size.",
                            "type": "Number"
                        },
                        {
                            "name": "dataType",
                            "description": "The type of data transfer initiated.\n  Available types are <code>\"dataURL\"</code> and <code>\"blob\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "The waiting timeout in seconds that the DataChannel\n  connection data transfer should wait before throwing an exception and terminating the data transfer.",
                            "type": "String"
                        },
                        {
                            "name": "isPrivate",
                            "description": "The flag to indicate if the data transferred\n  targeted Peer peers and not broadcasted to all Peer peers.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if the data transfer is from self or from\n  associated Peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 882,
            "description": "Event triggered when there is a request to start a data transfer.\n- This event may trigger for self when requesting a data transfer to Peer,\n  which indicates that self has sent the data transfer request.\n- For more extensive states like the outgoing and incoming\n  data transfer progress and rejection of data transfer requests,\n  you may subscribe to the <a href=\"#event_dataTransferState\">dataTransferState</a> event.\n- If <code>enableDataChannel</code> disabled in <a href=\"#method_init\">init() configuration\n  settings</a>, this event will not be triggered at all.\n- <sub>DATA TRANSFER STAGE</sub><br>\n  <small>\n  <a href=\"#event_dataTransferState\">dataTransferState</a> &#8594;\n  <b>incomingDataRequest</b> &#8594;\n  <a href=\"#event_incomingData\">incomingData</a>\n  </small>",
            "itemtype": "event",
            "name": "incomingDataRequest",
            "params": [
                {
                    "name": "transferId",
                    "description": "The transfer ID of the data transfer request.",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID associated with the data transfer request.",
                    "type": "String"
                },
                {
                    "name": "transferInfo",
                    "description": "The transfer data object information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "name",
                            "description": "The transfer data object name.\n  If there is no name based on the Blob given, the name would be the transfer ID.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "transferId"
                        },
                        {
                            "name": "size",
                            "description": "The transfer data size.",
                            "type": "Number"
                        },
                        {
                            "name": "dataType",
                            "description": "The type of data transfer initiated.\n  Available types are <code>\"dataURL\"</code> and <code>\"blob\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "The waiting timeout in seconds that the DataChannel\n  connection data transfer should wait before throwing an exception and terminating the data transfer.",
                            "type": "String"
                        },
                        {
                            "name": "isPrivate",
                            "description": "The flag to indicate if the data transferred\n  targeted Peer peers and not broadcasted to all Peer peers.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if the data transfer request is from self or from\n  associated Peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 918,
            "description": "Event triggered when the currently connected room lock status have been updated.\n- If this event is triggered, this means that the room is locked / unlocked which\n  may allow or prevent any other Peers from joining the room.",
            "itemtype": "event",
            "name": "roomLock",
            "params": [
                {
                    "name": "isLocked",
                    "description": "The flag that indicates if the currently connected room is locked.",
                    "type": "Boolean"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID of the peer that updated the\n  currently connected room lock status.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The Peer Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated Peer.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  Peer Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  <a href=\"#method_init\">init()</a>\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The Peer\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The Peer\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The Peer\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The Peer\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The Peer\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the Peer connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The Peer Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The Peer platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The Peer platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The Peer platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The Peer platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the Peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the Peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 996,
            "description": "Event triggered when a Peer connection DataChannel connection state has changed.\n- This event is a debugging feature, and it's used to check the\n  Peer DataChannel connection, which is used for P2P messaging and transfers for\n  methods like <a href=\"#method_sendBlobData\">sendBlobData()</a>,\n  <a href=\"#method_sendURLData\">sendURLData()</a> and\n  <a href=\"#method_sendP2PMessage\">sendP2PMessage()</a>.\n- If <code>enableDataChannel</code> disabled in <a href=\"#method_init\">init() configuration\n  settings</a>, this event will not be triggered at all.",
            "itemtype": "event",
            "name": "dataChannelState",
            "params": [
                {
                    "name": "state",
                    "description": "The current DataChannel connection state.\n  [Rel: Skylink.DATA_CHANNEL_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID associated with the current DataChannel connection state.",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The error object thrown when there is a failure in\n  the DataChannel connection.\n  If received as <code>null</code>, it means that there is no errors.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "channelName",
                    "description": "The DataChannel connection ID.",
                    "type": "String"
                },
                {
                    "name": "channelType",
                    "description": "The DataChannel connection functionality type.\n  [Rel: Skylink.DATA_CHANNEL_TYPE]",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1021,
            "description": "The event triggered when a data transfer state has changed.",
            "itemtype": "event",
            "name": "dataTransferState",
            "params": [
                {
                    "name": "state",
                    "description": "The data transfer state. [Rel: Skylink.DATA_TRANSFER_STATE]",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "The data transfer ID.",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID targeted for the data transfer.",
                    "type": "String"
                },
                {
                    "name": "transferInfo",
                    "description": "The data transfer information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "data",
                            "description": "<blockquote class=\"info\">\n   Use [<code>URL.createObjectURL()</code> method](https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL)\n   to append Blob data as a download link <code>&lt;a href=\"<blobURL>\" download=\"blobName\"&gt;\nDownload File&lt;/a&gt;.</code></blockquote>\n  The data transfer data based off the <code>data</code> parameter in method used to start data transfer.\n  <small>Defined when <code>state</code> payload parameter value is <code>DOWNLOAD_COMPLETED</code> and\n    <code>UPLOAD_STARTED</code>, else its value is <code>null</code>.</small>",
                            "type": "Blob|String"
                        },
                        {
                            "name": "name",
                            "description": "The data transfer <code>data</code> Blob name.\n  If data transfer data type is String or Blob name is not defined, the value will\n  be the same as of the <code>transferId</code> value.",
                            "type": "String"
                        },
                        {
                            "name": "size",
                            "description": "The data transfer Blob size or String length.",
                            "type": "Number"
                        },
                        {
                            "name": "dataType",
                            "description": "The data transfer transfer type.\n  <ul>\n    <li><code>\"dataURL\"</code>: The data transfer was made using <a href=\"#method_sendURLData\">\n<code>sendURLData()</code> method</a></li>\n    <li><code>\"blob\"</code>: The data transfer was made using <a href=\"#method_sendBlobData\">\n<code>sendBlobData()</code> method</a></li>\n  </ul>",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "The response timeout as provided in the <code>timeout</code>\n  parameter in method used to start data transfer.",
                            "type": "Number"
                        },
                        {
                            "name": "isPrivate",
                            "description": "The flag that indicates if data transfer is targeted or not, based\n  off the <code>targetPeerId</code> parameter being defined in method used to start data transfer.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "error",
                    "description": "The error result when data transfer results in failure.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "message",
                            "description": "The error message.",
                            "type": "Error|String"
                        },
                        {
                            "name": "transferType",
                            "description": "The direction of the failure. [Rel: Skylink.DATA_TRANSFER_TYPE]",
                            "type": "String"
                        }
                    ]
                }
            ],
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1058,
            "description": "Event triggered when Skylink receives an system action from the platform signaling.",
            "itemtype": "event",
            "name": "systemAction",
            "params": [
                {
                    "name": "action",
                    "description": "The system action that is received from the platform signaling.\n  [Rel: Skylink.SYSTEM_ACTION]",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The message received from the platform signaling when\n  the system action and reason is given.",
                    "type": "String"
                },
                {
                    "name": "reason",
                    "description": "The reason received from the platform signaling behind the\n  system action given.\n  [Rel: Skylink.SYSTEM_ACTION_REASON]",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1074,
            "description": "Event triggered when a server Peer joins the room.",
            "itemtype": "event",
            "name": "serverPeerJoined",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID of the new server peer\n  that has joined the room.",
                    "type": "String"
                },
                {
                    "name": "serverPeerType",
                    "description": "The server Peer type\n  [Rel: Skylink.SERVER_PEER_TYPE]",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1087,
            "description": "Event triggered when a server Peer leaves the room.",
            "itemtype": "event",
            "name": "serverPeerLeft",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID of the new server peer\n  that has left the room.",
                    "type": "String"
                },
                {
                    "name": "serverPeerType",
                    "description": "The server Peer type\n  [Rel: Skylink.SERVER_PEER_TYPE]",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1100,
            "description": "Event triggered when a sever Peer connection has been restarted for\n  a reconnection.",
            "itemtype": "event",
            "name": "serverPeerRestart",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID of the new server peer\n  that has joined the room.",
                    "type": "String"
                },
                {
                    "name": "serverPeerType",
                    "description": "The server Peer type\n  [Rel: Skylink.SERVER_PEER_TYPE]",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1114,
            "description": "Event triggered when a Peer connection Stream streaming has stopped.",
            "itemtype": "event",
            "name": "streamEnded",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID associated to the Stream object.\n  If self is not in the room, the value returned would be <code>null</code>.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The Peer Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated Peer.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  Peer Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  <a href=\"#method_init\">init()</a>\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The Peer\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The Peer\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The Peer\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The Peer\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The Peer\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the Peer connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The Peer Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The Peer platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The Peer platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The Peer platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The Peer platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the Peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the Peer.",
                    "type": "Boolean"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag that indicates if Peer connection\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1191,
            "description": "Event triggered when a Peer connection Stream streaming audio or video\n  stream muted status have been updated.",
            "itemtype": "event",
            "name": "streamMuted",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID associated to the Stream object.\n  If self is not in the room, the value returned would be <code>null</code>.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The Peer Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated Peer.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  Peer Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  <a href=\"#method_init\">init()</a>\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The Peer\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The Peer\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The Peer\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The Peer\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The Peer\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the Peer connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The Peer Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The Peer platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The Peer platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The Peer platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The Peer platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the Peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the Peer.",
                    "type": "Boolean"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag that indicates if Peer connection\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1269,
            "description": "Event triggered when the retrieval of the list of rooms and peers under the same realm based\n  on the Application Key configured in <a href=\"#method_init\">init()</a>\n  from the platform signaling state has changed.\n- This requires that the provided alias Application Key has privileged feature configured.",
            "itemtype": "event",
            "name": "getPeersStateChange",
            "params": [
                {
                    "name": "state",
                    "description": "The retrieval current status.\n  [Rel: Skylink.GET_PEERS_STATE]",
                    "type": "String"
                },
                {
                    "name": "privilegedPeerId",
                    "description": "The Peer ID of the privileged Peer.",
                    "type": "String"
                },
                {
                    "name": "peerList",
                    "description": "The retrieved list of rooms and peers under the same realm based on\n  the Application Key configured in <code>init()</code>.",
                    "type": "JSON"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1286,
            "description": "Event triggered when introductory state of two Peer peers to each other\n  selected by the privileged Peer state has changed.\n- This requires that the provided alias Application Key has privileged feature configured.",
            "itemtype": "event",
            "name": "introduceStateChange",
            "params": [
                {
                    "name": "state",
                    "description": "The Peer introduction state.\n  [Rel: Skylink.INTRODUCE_STATE]",
                    "type": "String"
                },
                {
                    "name": "privilegedPeerId",
                    "description": "The Peer ID of the privileged Peer.",
                    "type": "String"
                },
                {
                    "name": "sendingPeerId",
                    "description": "The Peer ID of the peer\n  that initiates the connection with the introduced Peer.",
                    "type": "String"
                },
                {
                    "name": "receivingPeerId",
                    "description": "The Peer ID of the\n  introduced peer who would be introduced to the initiator Peer.",
                    "type": "String"
                },
                {
                    "name": "reason",
                    "description": "The error object thrown when there is a failure in\n  the introduction with the two Peer peers.\n  If received as <code>null</code>, it means that there is no errors.",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1307,
            "description": "Event triggered when the retrieval of the Peer connection status state has changed.",
            "itemtype": "event",
            "name": "getConnectionStatusStateChange",
            "params": [
                {
                    "name": "state",
                    "description": "The retrieval state of the Peer connection status.\n  [Rel: Skylink.GET_CONNECTION_STATUS_STATE]",
                    "type": "Number"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID of the peer connection status.",
                    "type": "String"
                },
                {
                    "name": "stats",
                    "description": "The Peer retrieved connection stats.\n  Returned as <code>null</code> unless <code>RETRIEVE_SUCCESS</code> state.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "raw",
                            "description": "The received raw connection stats data before parsing.",
                            "type": "JSON"
                        },
                        {
                            "name": "audio",
                            "description": "The Peer connection audio stats.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "sending",
                                    "description": "The Peer connection audio sending stats.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "sending.bytes",
                                    "description": "The Peer connection audio sending bytes.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.packets",
                                    "description": "The Peer\n  connection audio sending packets.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.packetsLost",
                                    "description": "The Peer\n  connection audio sending packets lost.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.ssrc",
                                    "description": "The Peer\n  connection audio sending ssrc.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.rtt",
                                    "description": "The Peer\n  connection audio sending RTT (Round-trip delay time). This will be defined as <code>0</code> if it's not\n  defined in the original raw stats data.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving",
                                    "description": "The Peer connection audio receiving stats.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "receiving.bytes",
                                    "description": "The Peer connection audio receiving bytes.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving.packets",
                                    "description": "The Peer\n  connection audio receiving packets.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving.packetsLost",
                                    "description": "The Peer\n  connection audio receiving packets lost.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving.ssrc",
                                    "description": "The Peer\n  connection audio receiving ssrc.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The Peer connection video stats.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "sending",
                                    "description": "The Peer connection video sending stats.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "sending.bytes",
                                    "description": "The Peer connection video sending bytes.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.packets",
                                    "description": "The Peer\n  connection video sending packets.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.packetsLost",
                                    "description": "The Peer\n  connection video sending packets lost.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.ssrc",
                                    "description": "The Peer\n  connection video sending ssrc ID.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "sending.rtt",
                                    "description": "The Peer\n  connection video sending RTT (Round-trip delay time). This will be defined as <code>0</code> if it's not\n  defined in the original raw stats data.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving",
                                    "description": "The Peer connection video receiving stats.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "receiving.bytes",
                                    "description": "The Peer connection video receiving bytes.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving.packets",
                                    "description": "The Peer\n  connection video receiving packets.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving.packetsLost",
                                    "description": "The Peer\n  connection video receiving packets lost.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving.ssrc",
                                    "description": "The Peer\n  connection video receiving ssrc.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "selectedCandidate",
                            "description": "The Peer connection selected candidate\n  pair details.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "local",
                                    "description": "The Peer connection\n  selected local candidate.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "local.ipAddress",
                                    "description": "The Peer connection\n  selected local candidate IP address.",
                                    "type": "String"
                                },
                                {
                                    "name": "local.portNumber",
                                    "description": "The Peer connection\n  selected local candidate port number.",
                                    "type": "Number"
                                },
                                {
                                    "name": "local.transport",
                                    "description": "The Peer connection\n  selected local candidate transport.",
                                    "type": "String"
                                },
                                {
                                    "name": "local.candidateType",
                                    "description": "The Peer connection\n  selected local candidate candidate type.",
                                    "type": "String"
                                },
                                {
                                    "name": "remote",
                                    "description": "The Peer connection\n  selected remote candidate.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "remote.ipAddress",
                                    "description": "The Peer connection\n  selected remote candidate IP address.",
                                    "type": "String"
                                },
                                {
                                    "name": "remote.portNumber",
                                    "description": "The Peer connection\n  selected remote candidate port number.",
                                    "type": "Number"
                                },
                                {
                                    "name": "remote.transport",
                                    "description": "The Peer connection\n  selected remote candidate transport.",
                                    "type": "String"
                                },
                                {
                                    "name": "remote.candidateType",
                                    "description": "The Peer connection\n  selected remote candidate candidate type.",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "connection",
                            "description": "The Peer connection details.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "iceConnectionState",
                                    "description": "The Peer connection ICE\n  connection state.",
                                    "type": "String"
                                },
                                {
                                    "name": "iceGatheringState",
                                    "description": "The Peer connection ICE\n  gathering state.",
                                    "type": "String"
                                },
                                {
                                    "name": "signalingState",
                                    "description": "The Peer connection\n  signaling state.",
                                    "type": "String"
                                },
                                {
                                    "name": "localDescription",
                                    "description": "The Peer connection\n  local session description.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "localDescription.type",
                                    "description": "The Peer connection\n  local session description type.",
                                    "type": "String"
                                },
                                {
                                    "name": "localDescription.sdp",
                                    "description": "The Peer connection\n  local session description sdp.",
                                    "type": "String"
                                },
                                {
                                    "name": "remoteDescription",
                                    "description": "The Peer connection\n  remote session description.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "remoteDescription.type",
                                    "description": "The Peer connection\n  remote session description type.",
                                    "type": "String"
                                },
                                {
                                    "name": "remoteDescription.sdp",
                                    "description": "The Peer connection\n  remote session description sdp.",
                                    "type": "String"
                                },
                                {
                                    "name": "candidates",
                                    "description": "The Peer connection list of\n  candidates received or sent.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "candidates.sending",
                                    "description": "The Peer connection list of\n  candidates sent.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "candidates.sending.host",
                                    "description": "The Peer connection list of\n  <code>\"host\"</code> candidates sent.",
                                    "type": "Array"
                                },
                                {
                                    "name": "candidates.sending.host.(#index)",
                                    "description": "The <code>\"host\"</code>\n  candidate sent.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "candidates.sending.srflx",
                                    "description": "The Peer connection list of\n  <code>\"srflx\"</code> candidates sent.",
                                    "type": "Array"
                                },
                                {
                                    "name": "candidates.sending.srflx.(#index)",
                                    "description": "The <code>\"srflx\"</code>\n  candidate sent.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "candidates.sending.relay",
                                    "description": "The Peer connection list of\n  <code>\"relay\"</code> candidates sent.",
                                    "type": "Array"
                                },
                                {
                                    "name": "candidates.sending.relay.(#index)",
                                    "description": "The <code>\"relay\"</code>\n  candidate sent.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "candidates.receiving",
                                    "description": "The Peer connection list of\n  candidates received.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "candidates.receiving.host",
                                    "description": "The Peer connection list of\n  <code>\"host\"</code> candidates received.",
                                    "type": "Array"
                                },
                                {
                                    "name": "candidates.receiving.host.(#index)",
                                    "description": "The <code>\"host\"</code>\n  candidate received.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "candidates.receiving.srflx",
                                    "description": "The Peer connection list of\n  <code>\"srflx\"</code> candidates received.",
                                    "type": "Array"
                                },
                                {
                                    "name": "candidates.receiving.srflx.(#index)",
                                    "description": "The <code>\"srflx\"</code>\n  candidate received.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "candidates.receiving.relay",
                                    "description": "The Peer connection list of\n  <code>\"relay\"</code> candidates received.",
                                    "type": "Array"
                                },
                                {
                                    "name": "candidates.receiving.relay.(#index)",
                                    "description": "The <code>\"relay\"</code>\n  candidate received.",
                                    "type": "JSON"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "error",
                    "description": "The Error object received when failed retrieving the\n  Peer connection status.",
                    "type": "Error"
                }
            ],
            "component": "Events",
            "since": "0.6.14",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1436,
            "description": "Stores the list of {{#crossLink \"Skylink/once:method\"}}once(){{/crossLink}}\n  event subscription handlers.",
            "itemtype": "attribute",
            "name": "_onceEvents",
            "params": [
                {
                    "name": "(#eventName)",
                    "description": "The array of event subscription handlers that is\n  subscribed using {{#crossLink \"Skylink/once:method\"}}once() method{{/crossLink}}\n  associated with the event name.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "(#index)",
                            "description": "The event subscription handler\n  associated with the event name. This is to be triggered once when condition is met.\n  Alternatively, the <code>once()</code> event subscription handler can be\n  unsubscribed with {{#crossLink \"Skylink/off:method\"}}off(){{/crossLink}} before\n  condition is met.",
                            "type": "Function"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Events",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1457,
            "description": "The throttling function datetime stamp in\n  [(ISO 8601 format)](https://en.wikipedia.org/wiki/ISO_8601).",
            "itemtype": "attribute",
            "name": "_timestamp",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Events",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1473,
            "description": "Triggers event subscription handlers that is associated with the event name.\n{{#crossLink \"Skylink/on:method\"}}on() event subscription handlers{{/crossLink}}\n  will be triggered always, but\n  {{#crossLink \"Skylink/once:method\"}}once() event subscription hadlers{{/crossLink}}\n  will only be triggered once the condition is met.",
            "itemtype": "method",
            "name": "_trigger",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skylink event name to trigger that would trigger event subscription\n  handlers associated to the event name with the <code>arguments</code> parameters payload.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1532,
            "description": "Subscribes an event handler associated to the event name.\nThis event handler will always be triggered when the event name is triggered. If you\n  are looking for subscription event handler to be triggered once, check out\n  {{#crossLink \"Skylink/once:method\"}}once() event subscription{{/crossLink}}.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skylink event name to subscribe to.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The event handler to subsribe to the associated\n  Skylink event name that would be triggered once the event name is triggered.",
                    "type": "Function"
                }
            ],
            "example": [
                "\n  SkylinkDemo.on(\"peerJoined\", function (peerId, peerInfo) {\n     alert(peerId + \" has joined the room\");\n  });"
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1559,
            "description": "Subscribes an event handler associated to the event name that\n   would only be triggered once the provided condition function has been met.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skylink event name to subscribe to.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The event handler to subscribe to the associated\n  Skylink event name to trigger once the condition has met. If\n  <code>fireAlways</code> option is set toe <code>true</code>, this will\n  always be fired when condition is met.",
                    "type": "Function"
                },
                {
                    "name": "condition",
                    "description": "The condition function that once the condition has\n  been met, trigger the event handler once. Return in the condition function <code>true</code>\n  to pass as meeting the condition.\n  If the condition function is not provided, the event handler will be triggered\n    once the Skylink event name is triggered.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "fireAlways",
                    "description": "The flag that indicates if Skylink should interrupt this\n  <code>once()</code> function once the function has been triggered to not unsubscribe the\n  event handler but to always trigger when the condition has been met.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "example": [
                "\n  SkylinkDemo.once(\"peerConnectionState\", function (state, peerId) {\n    alert(\"Peer has left\");\n  }, function (state, peerId) {\n    return state === SkylinkDemo.PEER_CONNECTION_STATE.CLOSED;\n  });"
            ],
            "component": "Events",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1608,
            "description": "Unsubscribes an event handler associated to the event name.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skylink event name to unsubscribe to.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The event handler to unsubscribe to the associated\n  Skylink event name. If the event handler is not provided, Skylink would\n  unsubscribe all event handlers subscribed to the associated event name.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "example": [
                "\n  // Example 1: Unsubscribe all event handlers related to the event\n  SkylinkDemo.off(\"peerJoined\");\n\n  // Example 2: Unsubscribe to one event handler\n  SkylinkDemo.off(\"peerJoined\", callback);"
            ],
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1655,
            "description": "Checks if the first condition is already met before doing an event\n  handler subscription to wait for the second condition to be met.\nThis method will do a event subscription with\n  {{#crossLink \"Skylink/once:method\"}}once(){{/crossLink}} as this\n  <code>_condition()</code> would only trigger once, unless <code>fireAlways</code>\n  is set to <code>true</code>.",
            "itemtype": "method",
            "name": "_condition",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skylink event name to subscribe to.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The event handler to subscribe to the associated\n  Skylink event name to trigger once the condition has met. If\n  <code>fireAlways</code> option is set to <code>true</code>, this will\n  always be fired when condition is met.",
                    "type": "Function"
                },
                {
                    "name": "checkFirst",
                    "description": "The first condition to check before\n  doing an event subscription to wait for second condition to meet.\n  Return in the first condition function <code>true</code> to pass as meeting the condition.\n  If the first condition is met, the event handler would be triggered\n  and the event handler will not be subscribed to the event or wait\n  for second condition to pass.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "condition",
                    "description": "The second condition function that once the it has\n  been met, it will trigger the event handler once.\n  Return in the second condition function <code>true</code> to pass as meeting the condition.\n  If the second condition is met, the event handler would be triggered and\n  depending if <code>fireAlways</code> option is set to <code>true</code>, this will\n  always be fired when condition is met.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "fireAlways",
                    "description": "The flag that indicates if Skylink should interrupt the\n  second condition function once the function has been triggered to not unsubscribe the\n  event handler but to always trigger when the second condition has been met.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1706,
            "description": "Starts the interval check for the condition provided to meet before clearing\n  the interval and triggering the callback provided.\nThis utilises <code>setInterval()</code> function.",
            "itemtype": "method",
            "name": "_wait",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback fired after the condition provided\n  has been met.",
                    "type": "Function"
                },
                {
                    "name": "condition",
                    "description": "The condition function that once the condition has\n  been met, trigger the callback. Return in the condition function <code>true</code>\n  to pass as meeting the condition.",
                    "type": "Function"
                },
                {
                    "name": "intervalTime",
                    "description": "The interval loop timeout that the interval\n  check should iterate based on the timeout provided (in ms).\n  By default, if the value is not configured, it is <code>50</code>ms.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "50"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1756,
            "description": "Returns a wrapper of the original function, which fires only once during\n a specified amount of time.",
            "itemtype": "method",
            "name": "_throttle",
            "params": [
                {
                    "name": "func",
                    "description": "The function that should be throttled.",
                    "type": "Function"
                },
                {
                    "name": "wait",
                    "description": "The amount of time that function need to throttled (in ms).",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The throttled function.",
                "type": "Function"
            },
            "access": "private",
            "tagname": "",
            "component": "Events",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 1,
            "description": "These are the list of socket connection error states that Skylink would trigger.\n- These error states references the [socket.io-client events](http://socket.io/docs/client-api/).",
            "itemtype": "attribute",
            "name": "SOCKET_ERROR",
            "type": "JSON",
            "params": [
                {
                    "name": "CONNECTION_FAILED",
                    "description": "<small>Value <code>0</code></small>\n  The error state when Skylink have failed to establish a socket connection with\n  platform signaling in the first attempt.",
                    "type": "Number"
                },
                {
                    "name": "RECONNECTION_FAILED",
                    "description": "<small>Value <code>-1</code></small>\n  The error state when Skylink have failed to\n  reestablish a socket connection with platform signaling after the first attempt\n  <code>CONNECTION_FAILED</code>.",
                    "type": "String"
                },
                {
                    "name": "CONNECTION_ABORTED",
                    "description": "<small>Value <code>-2</code></small>\n  The error state when attempt to reestablish socket connection\n  with platform signaling has been aborted after the failed first attempt\n  <code>CONNECTION_FAILED</code>.",
                    "type": "String"
                },
                {
                    "name": "RECONNECTION_ABORTED",
                    "description": "<small>Value <code>-3</code></small>\n  The error state when attempt to reestablish socket connection\n  with platform signaling has been aborted after several failed reattempts\n  <code>RECONNECTION_FAILED</code>.",
                    "type": "String"
                },
                {
                    "name": "RECONNECTION_ATTEMPT",
                    "description": "<small>Value <code>-4</code></small>\n  The error state when Skylink is attempting to reestablish\n  a socket connection with platform signaling after a failed attempt\n  <code>CONNECTION_FAILED</code> or <code>RECONNECTION_FAILED</code>.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "Socket",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 38,
            "description": "Stores the socket connection session information.",
            "itemtype": "attribute",
            "name": "_socketSession",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Socket",
            "since": "0.6.13",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 50,
            "description": "Stores the queued socket messages to sent to the platform signaling to\n  prevent messages from being dropped due to messages being sent in\n  less than a second interval.",
            "itemtype": "attribute",
            "name": "_socketMessageQueue",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Socket",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 64,
            "description": "Limits the socket messages being sent in less than a second interval\n  using the <code>setTimeout</code> object to prevent messages being sent\n  in less than a second interval.\nThe messaegs are stored in\n  {{#crossLink \"Skylink/_socketMessageQueue:attribute\"}}_socketMessageQueue{{/crossLink}}.",
            "itemtype": "attribute",
            "name": "_socketMessageTimeout",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Socket",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 81,
            "description": "Stores the list of fallback ports that Skylink can attempt\n  to establish a socket connection with platform signaling.",
            "itemtype": "attribute",
            "name": "_socketPorts",
            "type": "JSON",
            "params": [
                {
                    "name": "http://",
                    "description": "The array of <code>HTTP</code> protocol fallback ports.\n   By default, the ports are <code>[80, 3000]</code>.",
                    "type": "Array"
                },
                {
                    "name": "https://",
                    "description": "The The array of <code>HTTP</code> protocol fallback ports.\n   By default, the ports are <code>[443, 3443]</code>.",
                    "type": "Array"
                }
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Socket",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 101,
            "description": "These are the list of fallback attempt types that Skylink would attempt with.",
            "itemtype": "attribute",
            "name": "SOCKET_FALLBACK",
            "type": "JSON",
            "params": [
                {
                    "name": "NON_FALLBACK",
                    "description": "<small>Value <code>\"nonfallback\"</code> | Protocol <code>\"http:\"</code>,\n<code>\"https:\"</code> | Transports <code>\"WebSocket\"</code>, <code>\"Polling\"</code></small>\n  The current socket connection attempt\n  is using the first selected socket connection port for\n  the current selected transport <code>\"Polling\"</code> or <code>\"WebSocket\"</code>.",
                    "type": "String"
                },
                {
                    "name": "FALLBACK_PORT",
                    "description": "<small>Value <code>\"fallbackPortNonSSL\"</code> | Protocol <code>\"http:\"</code>\n | Transports <code>\"WebSocket\"</code></small>\n  The current socket connection reattempt\n  is using the next selected socket connection port for\n  <code>HTTP</code> protocol connection with the current selected transport\n  <code>\"Polling\"</code> or <code>\"WebSocket\"</code>.",
                    "type": "String"
                },
                {
                    "name": "FALLBACK_PORT_SSL",
                    "description": "<small>Value <code>\"fallbackPortSSL\"</code> | Protocol <code>\"https:\"</code>\n | Transports <code>\"WebSocket\"</code></small>\n  The current socket connection reattempt\n  is using the next selected socket connection port for\n  <code>HTTPS</code> protocol connection with the current selected transport\n  <code>\"Polling\"</code> or <code>\"WebSocket\"</code>.",
                    "type": "String"
                },
                {
                    "name": "LONG_POLLING",
                    "description": "<small>Value <code>\"fallbackLongPollingNonSSL\"</code> | Protocol <code>\"http:\"</code>\n | Transports <code>\"Polling\"</code></small>\n  The current socket connection reattempt\n  is using the next selected socket connection port for\n  <code>HTTP</code> protocol connection with <code>\"Polling\"</code> after\n  many attempts of <code>\"WebSocket\"</code> has failed.\n  This occurs only for socket connection that is originally using\n  <code>\"WebSocket\"</code> transports.",
                    "type": "String"
                },
                {
                    "name": "LONG_POLLING_SSL",
                    "description": "<small>Value <code>\"fallbackLongPollingSSL\"</code> | Protocol <code>\"https:\"</code>\n | Transports <code>\"Polling\"</code></small>\n  The current socket connection reattempt\n  is using the next selected socket connection port for\n  <code>HTTPS</code> protocol connection with <code>\"Polling\"</code> after\n  many attempts of <code>\"WebSocket\"</code> has failed.\n  This occurs only for socket connection that is originally using\n  <code>\"WebSocket\"</code> transports.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "Socket",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 151,
            "description": "The flag that indicates if the current socket connection with\n  platform signaling is opened.",
            "itemtype": "attribute",
            "name": "_channelOpen",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Socket",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 164,
            "description": "Stores the platform signaling endpoint URI to open socket connection with.",
            "itemtype": "attribute",
            "name": "_signalingServer",
            "type": "String",
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 175,
            "description": "Stores the current platform signaling protocol to open socket connection with.",
            "itemtype": "attribute",
            "name": "_signalingServerProtocol",
            "type": "String",
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 186,
            "description": "Stores the current platform signaling port to open socket connection with.",
            "itemtype": "attribute",
            "name": "_signalingServerPort",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 197,
            "description": "Stores the [socket.io-client <code>io</code> object](http://socket.io/docs/client-api/) that\n  handles the middleware socket connection with platform signaling.",
            "itemtype": "attribute",
            "name": "_socket",
            "type": "Object",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 210,
            "description": "Stores the timeout (in ms) set to await in seconds for response from platform signaling\n  before throwing a connection timeout exception when Skylink is attemtping\n  to establish a connection with platform signaling.\nIf the value is <code>0</code>, it will use the default timeout from\n  socket.io-client that is in <code>20000</code>.",
            "itemtype": "attribute",
            "name": "_socketTimeout",
            "type": "Number",
            "default": "0",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 227,
            "description": "The flag that indicates if the current socket connection for\n  transports types with <code>\"Polling\"</code> uses\n  [XDomainRequest](https://msdn.microsoft.com/en-us/library/cc288060(v=vs.85).aspx)\n  instead of [XMLHttpRequest](http://www.w3schools.com/Xml/dom_httprequest.asp)\n  due to the IE 8 / 9 <code>XMLHttpRequest</code> not supporting CORS access.",
            "itemtype": "attribute",
            "name": "_socketUseXDR",
            "type": "Boolean",
            "default": "false",
            "required": 1,
            "component": "Socket",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 244,
            "description": "Sends socket message over the platform signaling socket connection.",
            "itemtype": "method",
            "name": "_sendChannelMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The socket message object.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "Required. Protocol type of the socket message object.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 368,
            "description": "Starts a socket.io connection with the platform signaling.",
            "itemtype": "method",
            "name": "_createSocket",
            "params": [
                {
                    "name": "type",
                    "description": "The transport type of socket.io connection to use.\n<ul>\n<li><code>\"WebSocket\"</code>: Uses the WebSocket connection.<br>\n  <code>options.transports = [\"websocket\"]</code></li>\n<li><code>\"Polling\"</code>: Uses the Polling connection.<br>\n  <code>options.transports = [\"xhr-polling\", \"jsonp-polling\", \"polling\"]</code></li>\n</ul>",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 540,
            "description": "Connects to the socket connection endpoint URI to platform signaling that is constructed with\n {{#crossLink \"Skylink/_signalingServerProtocol:attribute\"}}_signalingServerProtocol{{/crossLink}},\n {{#crossLink \"Skylink/_signalingServer:attribute\"}}_signalingServer{{/crossLink}} and\n {{#crossLink \"Skylink/_signalingServerPort:attribute\"}}_signalingServerPort{{/crossLink}}.\n <small>Example format: <code>protocol//serverUrl:port</code></small>.<br>\nOnce URI is formed, it will start a new socket.io connection with\n {{#crossLink \"Skylink/_createSocket:method\"}}_createSocket(){{/crossLink}}.",
            "itemtype": "method",
            "name": "_openChannel",
            "trigger": "channelMessage, channelOpen, channelError, channelClose",
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 589,
            "description": "Disconnects the current socket connection with the platform signaling.",
            "itemtype": "method",
            "name": "_closeChannel",
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 1,
            "description": "The current version of the internal <u>Signaling Message (SM)</u> Protocol that Skylink is using.<br>\n- This is not a feature for developers to use but rather for SDK developers to\n  see the Protocol version used in this Skylink version.\n- In some cases, this information may be used for reporting issues with Skylink.\n- SM_PROTOCOL VERSION: <code>0.1.</code>.",
            "itemtype": "attribute",
            "name": "SM_PROTOCOL_VERSION",
            "type": "String",
            "required": 1,
            "component": "Socket",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 16,
            "description": "The list of Protocol types that is used for messaging using\n  the platform signaling socket connection.",
            "itemtype": "attribute",
            "name": "_SIG_MESSAGE_TYPE",
            "type": "JSON",
            "params": [
                {
                    "name": "JOIN_ROOM",
                    "description": "Protocol sent from Skylink to platform signaling to let\n   self join the room. Join room Step 1.",
                    "type": "String"
                },
                {
                    "name": "IN_ROOM",
                    "description": "Protocol received from platform signaling to inform\n   Skylink that self has joined the room. Join room Step 2 (Completed).",
                    "type": "String"
                },
                {
                    "name": "ENTER",
                    "description": "Protocol Skylink sends to all Peer peers\n   in the room to start handshake connection. Handshake connection Step 1.",
                    "type": "String"
                },
                {
                    "name": "WELCOME",
                    "description": "Protocol received to Peer as a response\n   to self <code>ENTER</code> message. This is sent as a response to\n   Peer <code>ENTER</code> message. Handshake connection Step 2.",
                    "type": "String"
                },
                {
                    "name": "OFFER",
                    "description": "Protocol sent to Peer as a response\n   to the <code>WELCOME</code> message received after generating the offer session description with\n   <code>RTCPeerConnection.createOffer()</code>. This is received as a response from\n   Peer after sending <code>WELCOME</code> message and requires\n   setting into the Peer connection before sending the\n   <code>ANSWER</code> response. Handshake connection Step 3.",
                    "type": "String"
                },
                {
                    "name": "ANSWER",
                    "description": "Protocol received from Peer as a response\n   to self <code>OFFER</code> message offer session description and requires setting\n   into the Peer connection. This is sent to Peer as a response\n   to the <code>OFFER</code> message received after setting the received <code>OFFER</code>\n   message and generating the answer session description with <code>RTCPeerConnection.createAnswer()</code>.\n   Handshake connection Step 4 (Completed).",
                    "type": "String"
                },
                {
                    "name": "CANDIDATE",
                    "description": "Protocol received from Peer when connection\n   ICE candidate has been generated and requires self to add to the Peer connection.",
                    "type": "String"
                },
                {
                    "name": "BYE",
                    "description": "Protocol received from platform signaling when a Peer has left\n   the room.",
                    "type": "String"
                },
                {
                    "name": "REDIRECT",
                    "description": "Protocol received from platform signaling when self is kicked out from\n   the currently joined room.",
                    "type": "String"
                },
                {
                    "name": "UPDATE_USER",
                    "description": "Protocol received when a Peer information has been\n   updated. The message object should contain the updated peer information.\n   This is broadcasted by self when self peer information is updated.",
                    "type": "String"
                },
                {
                    "name": "ROOM_LOCK",
                    "description": "Protocol received when the current joined room lock status have\n   been updated. The message object should contain the updated room lock status.\n   This is broadcasted by self when self updates the room lock status.",
                    "type": "String"
                },
                {
                    "name": "MUTE_VIDEO",
                    "description": "Protocol received when a Peer Stream video media streaming\n   muted status have been updated. The message object should contain the updated Stream video media\n   streaming muted status. This is broadcasted by self when self Stream video media streaming\n   muted status have been updated.",
                    "type": "String"
                },
                {
                    "name": "MUTE_AUDIO",
                    "description": "Protocol received when a Peer connection Stream audio media streaming\n   muted status have been updated. The message object should contain the updated Stream audio media\n   streaming muted status. This is broadcasted by self when self Stream audio media streaming\n   muted status have been updated.",
                    "type": "String"
                },
                {
                    "name": "PUBLIC_MESSAGE",
                    "description": "Protocol received when a Peer broadcasts a message\n   object to all Peer peers via the platform signaling socket connection.\n   This is broadcasted by self when self sends the message object.",
                    "type": "String"
                },
                {
                    "name": "PRIVATE_MESSAGE",
                    "description": "Protocol received when a Peer sends a message\n   object targeted to several Peer peers via the platform signaling socket connection.\n   This is sent by self when self sends the message object.",
                    "type": "String"
                },
                {
                    "name": "RESTART",
                    "description": "Protocol received when a Peer connection requires a reconnection.\n   At this point, the Peer connection have to recreate the <code>RTCPeerConnection</code>\n   object again. This is sent by self when self initiates the reconnection.",
                    "type": "String"
                },
                {
                    "name": "STREAM",
                    "description": "Protocol received when a Peer connection Stream status have\n   changed.",
                    "type": "String"
                },
                {
                    "name": "GET_PEERS",
                    "description": "Protocol for privileged self to get the list of Peer peers\n   under the same parent Application Key.",
                    "type": "String"
                },
                {
                    "name": "PEER_LIST",
                    "description": "Protocol to retrieve a list of peers under the same parent.",
                    "type": "String"
                },
                {
                    "name": "INTRODUCE",
                    "description": "Protocol sent to the platform signaling to\n   introduce Peer peers to each other.",
                    "type": "String"
                },
                {
                    "name": "INTRODUCE_ERROR",
                    "description": "Protocol received when Peer peers introduction failed.",
                    "type": "String"
                },
                {
                    "name": "APPROACH",
                    "description": "Protocol to indicate that a Peer has been introduced.\n   At this point, self would send an <code>ENTER</code> to introduced Peer\n   to start the handshake connection.",
                    "type": "String"
                },
                {
                    "name": "GROUP",
                    "description": "Protocol received that bundles messages together when socket messages are\n   sent less than 1 second interval apart from the previous sent socket message. This would\n   prevent receiving <code>REDIRECT</code> from the platform signaling.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 117,
            "description": "The flag that indicates if MCU is enabled.",
            "itemtype": "attribute",
            "name": "_hasMCU",
            "type": "Boolean",
            "development": "true",
            "access": "private",
            "tagname": "",
            "component": "MCU",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 129,
            "description": "Stores the list of types of socket messages that requires to be queued or bundled\n   before sending to the server to prevent platform signaling from dropping of socket messages.",
            "itemtype": "attribute",
            "name": "_groupMessageList",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Message",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 149,
            "description": "The flag that indicates if MCU is in the room and is enabled.",
            "itemtype": "attribute",
            "name": "_hasMCU",
            "type": "Boolean",
            "development": "true",
            "default": "false",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 163,
            "description": "The flag that indicates that the current self connection\n  should only receive streaming Stream objects from other Peer connection\n  and not send streaming Stream objects to other Peer connection.",
            "itemtype": "attribute",
            "name": "_receiveOnly",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Message",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 179,
            "description": "Parses any <code>GROUP</code> type of message received and split them up to\n  send them to {{#crossLink \"Skylink/_processSingleMessage:method\"}}_processSingleMessage(){{/crossLink}}\n  to handle the individual message object received.\nIf the message is not <code>GROUP</code> type of message received, it will send\n  it directly to {{#crossLink \"Skylink/_processSingleMessage:method\"}}_processSingleMessage(){{/crossLink}}",
            "itemtype": "method",
            "name": "_processSigMessage",
            "params": [
                {
                    "name": "messageString",
                    "description": "The message object in JSON string.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 204,
            "description": "Routes the data received to the relevant Protocol handler based on the socket message received.",
            "itemtype": "method",
            "name": "_processingSingleMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 292,
            "description": "Handles the PEER_LIST message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_peerListEventHandler",
            "params": [
                {
                    "name": "message.type",
                    "description": "Protocol step: <code>\"peerList\"</code>.",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "Protocol step: <code>\"peerList\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "result",
                            "description": "The received resulting object\n  <small>E.g. <code>{room1: [peer1, peer2], room2: ...}</code></small>.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 312,
            "description": "Handles the INTRODUCE_ERROR message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_introduceErrorEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"introduceError\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "reason",
                            "description": "The error message.",
                            "type": "Object"
                        },
                        {
                            "name": "sendingPeerId",
                            "description": "Id of the peer initiating the handshake",
                            "type": "Object"
                        },
                        {
                            "name": "receivingPeerId",
                            "description": "Id of the peer receiving the handshake",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 332,
            "description": "Handles the APPROACH message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_approachEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"approach\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The peer to initiate the handshake to",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 364,
            "description": "Handles the REDIRECT message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_redirectHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>REDIRECT</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "info",
                            "description": "The message received from the platform signaling when\n  the system action and reason is given.",
                            "type": "String"
                        },
                        {
                            "name": "action",
                            "description": "The system action that is received from the platform signaling.\n  [Rel: Skylink.SYSTEM_ACTION]",
                            "type": "String"
                        },
                        {
                            "name": "reason",
                            "description": "The reason received from the platform signaling behind the\n  system action given. [Rel: Skylink.SYSTEM_ACTION_REASON]",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"redirect\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "systemAction",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 400,
            "description": "Handles the UPDATE_USER Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_updateUserEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>UPDATE_USER</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "userData",
                            "description": "The updated Peer information\n   custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"updateUserEvent\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 428,
            "description": "Handles the ROOM_LOCK Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_roomLockEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>ROOM_LOCK</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "lock",
                            "description": "The flag that indicates if the currently joined room is locked.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"roomLockEvent\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "roomLock",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 450,
            "description": "Handles the MUTE_AUDIO Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_muteAudioEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>MUTE_AUDIO</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "muted",
                            "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted.",
                            "type": "Boolean"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"muteAudioEvent\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 478,
            "description": "Handles the MUTE_VIDEO Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_muteVideoEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>MUTE_VIDEO</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "muted",
                            "description": "The flag that\n  indicates if the remote Stream object video streaming is muted.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"muteVideoEvent\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 506,
            "description": "Handles the STREAM Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_streamEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>STREAM</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "status",
                            "description": "The Peer connection remote Stream streaming current status.\n<ul>\n<li><code>ended</code>: The Peer connection remote Stream streaming has ended</li>\n</ul>",
                            "type": "String"
                        },
                        {
                            "name": "cid",
                            "description": "The Skylink server connection key for the selected room.",
                            "type": "String"
                        },
                        {
                            "name": "sessionType",
                            "description": "The Peer connection remote Stream streaming\n  session type. If value is <code>\"stream\"</code>, the Stream streaming session\n  is normal user media streaming, else if it is <code>\"screensharing\"</code>, the\n  Stream streaming session is screensharing session.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"stream\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "streamEnded",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 554,
            "description": "Handles the BYE Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_byeHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>BYE</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"bye\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerLeft",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 580,
            "description": "Handles the PRIVATE_MESSAGE Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_privateMessageHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>PRIVATE_MESSAGE</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "data",
                            "description": "The Message object.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "cid",
                            "description": "The Skylink server connection key for the selected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted Peer ID to receive the message object.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step: <code>\"private\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "incomingMessage",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 610,
            "description": "Handles the PUBLIC_MESSAGE Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_publicMessageHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>PUBLIC_MESSAGE</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "cid",
                            "description": "The Skylink server connection key for the selected room.",
                            "type": "String"
                        },
                        {
                            "name": "muted",
                            "description": "The flag to indicate if the User's audio\n   stream is muted or not.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step: <code>\"public\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "incomingMessage",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 640,
            "description": "Handles the IN_ROOM Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_inRoomHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>IN_ROOM</code> payload.",
                    "type": "JSON",
                    "props": []
                },
                {
                    "name": "message",
                    "description": "Expected IN_ROOM data object format.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "",
                            "description": "The self session socket connection ID. This\n  is used by the signalling socket connection as ID to target\n  self and the peers Peer ID.",
                            "type": "String"
                        },
                        {
                            "name": "",
                            "description": "The Peer connection iceServers configuration.",
                            "type": "JSON"
                        },
                        {
                            "name": "",
                            "description": "Protocol step: <code>\"inRoom\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerJoined",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 705,
            "description": "Handles the ENTER Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_enterHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>ENTER</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "receiveOnly",
                            "description": "The flag that indicates if the Peer\n  connection would send Stream or not (receive only).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "userInfo",
                            "description": "The peer information associated\n  with the Peer Connection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "userData",
                                    "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                                    "type": "String|JSON"
                                },
                                {
                                    "name": "settings",
                                    "description": "The Peer Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated Peer.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "settings.audio",
                                    "description": "The\n  Peer Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "settings.audio.stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in the Peer connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video",
                                    "description": "The Peer\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "settings.video.resolution",
                                    "description": "The Peer\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.resolution.width",
                                    "description": "The Peer\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.resolution.height",
                                    "description": "The Peer\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.frameRate",
                                    "description": "The Peer\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.screenshare",
                                    "description": "The flag\n  that indicates if the Peer connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "settings.bandwidth",
                                    "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "settings.bandwidth.audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "settings.bandwidth.video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "settings.bandwidth.data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "mediaStatus",
                                    "description": "The Peer Stream mute\n  settings for both audio and video streamings.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "mediaStatus.audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "mediaStatus.videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent.name",
                            "description": "The Peer platform browser or agent name.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The Peer platform browser or agent version.",
                            "type": "Number"
                        },
                        {
                            "name": "os",
                            "description": "The Peer platform name.",
                            "type": "Number"
                        },
                        {
                            "name": "sessionType",
                            "description": "The Peer connection remote Stream streaming\n  session type. If value is <code>\"stream\"</code>, the Stream streaming session\n  is normal user media streaming, else if it is <code>\"screensharing\"</code>, the\n  Stream streaming session is screensharing session.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"enter\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress, peerJoined",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 841,
            "description": "Handles the RESTART Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_restartHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>RESTART</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "receiveOnly",
                            "description": "The flag that indicates if the Peer\n  connection would send Stream or not (receive only).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "enableIceTrickle",
                            "description": "The flag that indicates\n   if PeerConnections should enable trickling of ICE to connect the ICE connection.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "enableDataChannel",
                            "description": "The flag that indicates if\n  Peer connection should have any DataChannel connections.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "userInfo",
                            "description": "The peer information associated\n  with the Peer Connection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "userData",
                                    "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                                    "type": "String|JSON"
                                },
                                {
                                    "name": "settings",
                                    "description": "The Peer Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated Peer.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "settings.audio",
                                    "description": "The\n  Peer Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "settings.audio.stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in the Peer connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video",
                                    "description": "The Peer\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "settings.video.resolution",
                                    "description": "The Peer\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.resolution.width",
                                    "description": "The Peer\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.resolution.height",
                                    "description": "The Peer\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.frameRate",
                                    "description": "The Peer\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.screenshare",
                                    "description": "The flag\n  that indicates if the Peer connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "settings.bandwidth",
                                    "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "settings.bandwidth.audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "settings.bandwidth.video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "settings.bandwidth.data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "mediaStatus",
                                    "description": "The Peer Stream mute\n  settings for both audio and video streamings.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "mediaStatus.audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "mediaStatus.videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent.name",
                            "description": "The Peer platform browser or agent name.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The Peer platform browser or agent version.",
                            "type": "Number"
                        },
                        {
                            "name": "os",
                            "description": "The Peer platform name.",
                            "type": "Number"
                        },
                        {
                            "name": "target",
                            "description": "The targeted Peer ID to receive the message object.",
                            "type": "String"
                        },
                        {
                            "name": "weight",
                            "description": "The generated handshake reconnection\n  weight for associated Peer.",
                            "type": "Number"
                        },
                        {
                            "name": "lastRestart",
                            "description": "The datetime stamp generated using\n  [Date.now()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now)\n  (in ms) used to throttle the Peer reconnection functionality\n  to prevent less Peer reconnection handshaking errors.",
                            "type": "Number"
                        },
                        {
                            "name": "isConnectionRestart",
                            "description": "The flag that indicates whether the restarting action\n  is caused by ICE connection or handshake connection failure. Currently, this feature works the same as\n  <code>message.explict</code> parameter.",
                            "type": "Boolean"
                        },
                        {
                            "name": "explict",
                            "description": "The flag that indicates whether the restart functionality\n  is invoked by the application or by Skylink when the ICE connection fails to establish\n  a \"healthy\" connection state. Currently, this feature works the same as\n  <code>message.isConnectionRestart</code> parameter.",
                            "type": "Boolean"
                        },
                        {
                            "name": "sessionType",
                            "description": "The Peer connection remote Stream streaming\n  session type. If value is <code>\"stream\"</code>, the Stream streaming session\n  is normal user media streaming, else if it is <code>\"screensharing\"</code>, the\n  Stream streaming session is screensharing session.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"restart\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress, peerRestart",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 1035,
            "description": "Handles the WELCOME Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_welcomeHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>WELCOME</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "receiveOnly",
                            "description": "The flag that indicates if the Peer\n  connection would send Stream or not (receive only).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "enableIceTrickle",
                            "description": "The flag that indicates\n   if PeerConnections should enable trickling of ICE to connect the ICE connection.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "enableDataChannel",
                            "description": "The flag that indicates if\n  Peer connection should have any DataChannel connections.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "userInfo.userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "userInfo.settings",
                            "description": "The Peer Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated Peer.",
                            "type": "JSON"
                        },
                        {
                            "name": "userInfo.settings.audio",
                            "description": "The\n  Peer Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the Peer.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "userInfo.settings.audio.stereo",
                            "description": "The flag that indicates if\n  stereo should be enabled in the Peer connection Stream\n  audio streaming.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.video",
                            "description": "The Peer\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "userInfo.settings.video.resolution",
                            "description": "The Peer\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                            "type": "JSON",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.video.resolution.width",
                            "description": "The Peer\n  Stream streaming video resolution width.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.video.resolution.height",
                            "description": "The Peer\n  Stream streaming video resolution height.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.video.frameRate",
                            "description": "The Peer\n  Stream streaming video maximum frameRate.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.video.screenshare",
                            "description": "The flag\n  that indicates if the Peer connection Stream object sent\n  is a screensharing stream or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "userInfo.settings.bandwidth",
                            "description": "The Peer configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.bandwidth.audio",
                            "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.bandwidth.video",
                            "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.bandwidth.data",
                            "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "userInfo.mediaStatus",
                            "description": "The Peer Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON"
                        },
                        {
                            "name": "userInfo.mediaStatus.audioMuted",
                            "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "userInfo.mediaStatus.videoMuted",
                            "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the Peer, by default,\n  it is set to <code>true</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "agent.name",
                            "description": "The Peer platform browser or agent name.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The Peer platform browser or agent version.",
                            "type": "Number"
                        },
                        {
                            "name": "os",
                            "description": "The Peer platform name.",
                            "type": "Number"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"enter\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted Peer ID to receive the message object.",
                            "type": "String"
                        },
                        {
                            "name": "weight",
                            "description": "The generated handshake connection\n  weight for associated Peer.",
                            "type": "Number"
                        },
                        {
                            "name": "sessionType",
                            "description": "The Peer connection remote Stream streaming\n  session type. If value is <code>\"stream\"</code>, the Stream streaming session\n  is normal user media streaming, else if it is <code>\"screensharing\"</code>, the\n  Stream streaming session is screensharing session.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"welcome\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress, peerJoined",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 1203,
            "description": "Handles the OFFER Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_offerHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>OFFER</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "sdp",
                            "description": "The generated offer session description.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted Peer ID to receive the message object.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"offer\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 1296,
            "description": "Handles the CANDIDATE Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_candidateHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>CANDIDATE</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "id",
                            "description": "The ICE candidate identifier of the \"media stream identification\"\n   for the m-line this candidate is associated with if present.\n   The value is retrieved from <code>RTCIceCandidate.sdpMid</code>.",
                            "type": "String"
                        },
                        {
                            "name": "label",
                            "description": "The ICE candidate index (starting at zero) of the m-line\n   in the SDP this candidate is associated with.\n   The value is retrieved from <code>RTCIceCandidate.sdpMLineIndex</code>.",
                            "type": "String"
                        },
                        {
                            "name": "candidate",
                            "description": "The ICE candidate candidate-attribute.\n   The value is retrieved from <code>RTCIceCandidate.candidate</code>.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted Peer ID to receive the message object.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step: <code>\"candidate\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 1401,
            "description": "Handles the ANSWER Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_answerHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>ANSWER</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "sdp",
                            "description": "The generated answer session description.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The Peer ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted Peer ID to receive the message object.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"answer\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 1511,
            "description": "Send a message object or string using the platform signaling socket connection\n  to the list of targeted PeerConnections.\nTo send message objects with DataChannel connections, see\n  {{#crossLink \"Skylink/sendP2PMessage:method\"}}sendP2PMessage(){{/crossLink}}.",
            "itemtype": "method",
            "name": "sendMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message object.",
                    "type": "String|JSON"
                },
                {
                    "name": "targetPeerId",
                    "description": "The array of targeted PeerConnections to\n  transfer the message object to. Alternatively, you may provide this parameter\n  as a string to a specific targeted Peer to transfer the message object.",
                    "type": "String|Array",
                    "optional": true
                }
            ],
            "example": [
                "\n  // Example 1: Send to all peers\n  SkylinkDemo.sendMessage(\"Hi there!\"\");\n\n  // Example 2: Send to a targeted peer\n  SkylinkDemo.sendMessage(\"Hi there peer!\", targetPeerId);"
            ],
            "trigger": "incomingMessage",
            "component": "Message",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1,
            "description": "These are the list of available video codecs settings that Skylink would use\n  when streaming video stream with Peers.\n- The video codec would be used if the self and Peer's browser supports the selected codec.\n- This would default to the browser selected codec. In most cases, option <code>VP8</code> is\n  used by default.",
            "itemtype": "attribute",
            "name": "VIDEO_CODEC",
            "params": [
                {
                    "name": "AUTO",
                    "description": "<small><b>DEFAULT</b> | Value <code>\"auto\"</code></small>\n  The option to let Skylink use any video codec selected by the browser generated session description.",
                    "type": "String"
                },
                {
                    "name": "VP8",
                    "description": "<small>Value <code>\"VP8\"</code></small>\n  The option to let Skylink use the [VP8](https://en.wikipedia.org/wiki/VP8) codec.<br>\n  This is the common and mandantory video codec used by most browsers.",
                    "type": "String"
                },
                {
                    "name": "H264",
                    "description": "<small>Value <code>\"H264\"</code></small>\n  The option to let Skylink use the [H264](https://en.wikipedia.org/wiki/H.264/MPEG-4_AVC) codec.<br>\n  This only works if the browser supports the H264 video codec.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "component": "Stream",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 28,
            "description": "These are the list of available audio codecs settings that Skylink would use\n  when streaming audio stream with Peers.\n- The audio codec would be used if the self and Peer's browser supports the selected codec.\n- This would default to the browser selected codec. In most cases, option <code>OPUS</code> is\n  used by default.",
            "itemtype": "attribute",
            "name": "AUDIO_CODEC",
            "params": [
                {
                    "name": "AUTO",
                    "description": "<small><b>DEFAULT</b> | Value <code>\"auto\"</code></small>\n  The option to let Skylink use any audio codec selected by the browser generated session description.",
                    "type": "String"
                },
                {
                    "name": "OPUS",
                    "description": "<small>Value <code>\"opus\"</code></small>\n  The option to let Skylink use the [OPUS](https://en.wikipedia.org/wiki/Opus_(audio_format)) codec.<br>\n  This is the common and mandantory audio codec used.",
                    "type": "String"
                },
                {
                    "name": "ISAC",
                    "description": "<small>Value <code>\"ISAC\"</code></small>\n  The option to let Skylink use the [iSAC](https://en.wikipedia.org/wiki/Internet_Speech_Audio_Codec).<br>\n  This only works if the browser supports the iSAC video codec.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "component": "Stream",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 55,
            "description": "Stores the preferred Peer connection streaming audio codec.",
            "itemtype": "attribute",
            "name": "_selectedAudioCodec",
            "type": "String",
            "default": "Skylink.AUDIO_CODEC.AUTO",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 67,
            "description": "Stores the preferred Peer connection streaming video codec.",
            "itemtype": "attribute",
            "name": "_selectedVideoCodec",
            "type": "String",
            "default": "Skylink.VIDEO_CODEC.AUTO",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 80,
            "description": "These are the list of suggested video resolutions that Skylink should configure\n  when retrieving self user media video stream.\n- Setting the resolution may not force set the resolution provided as it\n  depends on the how the browser handles the resolution.\n- It's recommended to use video resolution option to maximum <code>FHD</code>, as the other\n  resolution options may be unrealistic and create performance issues. However, we provide them\n  to allow developers to test with the browser capability, but do use it at your own risk.\n- The higher the resolution, the more CPU usage might be used, hence it's recommended to\n  use the default option <code>VGA</code>.\n- This follows the\n  [Wikipedia Graphics display resolution page](https://en.wikipedia.org/wiki/Graphics_display_resolution#Video_Graphics_Array)",
            "params": [
                {
                    "name": "QQVGA",
                    "description": "<small>Value <code>{ width: 160, height: 120 }</code> | Aspect Ratio <code>4:3</code></small>\n  The option to use QQVGA resolution.",
                    "type": "JSON"
                },
                {
                    "name": "HQVGA",
                    "description": "<small>Value <code>{ width: 240, height: 160 }</code> | Aspect Ratio <code>3:2</code></small>\n  The option to use HQVGA resolution.",
                    "type": "JSON"
                },
                {
                    "name": "QVGA",
                    "description": "<small>Value <code>{ width: 320, height: 240 }</code> | Aspect Ratio <code>4:3</code></small>\n  The option to use QVGA resolution.",
                    "type": "JSON"
                },
                {
                    "name": "WQVGA",
                    "description": "<small>Value <code>{ width: 384, height: 240 }</code> | Aspect Ratio <code>16:10</code></small>\n  The option to use WQVGA resolution.",
                    "type": "JSON"
                },
                {
                    "name": "HVGA",
                    "description": "<small>Value <code>{ width: 480, height: 320 }</code> | Aspect Ratio <code>3:2</code></small>\n  The option to use HVGA resolution.",
                    "type": "JSON"
                },
                {
                    "name": "VGA",
                    "description": "<small><b>DEFAULT</b> | Value <code>{ width: 640, height: 480 }</code> | Aspect Ratio <code>4:3</code></small>\n  The option to use VGA resolution.",
                    "type": "JSON"
                },
                {
                    "name": "WVGA",
                    "description": "<small>Value <code>{ width: 768, height: 480 }</code> | Aspect Ratio <code>16:10</code></small>\n  The option to use WVGA resolution.",
                    "type": "JSON"
                },
                {
                    "name": "FWVGA",
                    "description": "<small>Value <code>{ width: 854, height: 480 }</code> | Aspect Ratio <code>16:9</code></small>\n  The option to use FWVGA resolution.",
                    "type": "JSON"
                },
                {
                    "name": "SVGA",
                    "description": "<small>Value <code>{ width: 800, height: 600 }</code> | Aspect Ratio <code>4:3</code></small>\n  The option to use SVGA resolution.",
                    "type": "JSON"
                },
                {
                    "name": "DVGA",
                    "description": "<small>Value <code>{ width: 960, height: 640 }</code> | Aspect Ratio <code>3:2</code></small>\n  The option to use DVGA resolution.",
                    "type": "JSON"
                },
                {
                    "name": "WSVGA",
                    "description": "<small>Value <code>{ width: 1024, height: 576 }</code> | Aspect Ratio <code>16:9</code></small>\n  The option to use WSVGA resolution.",
                    "type": "JSON"
                },
                {
                    "name": "HD",
                    "description": "<small>Value <code>{ width: 1280, height: 720 }</code> | Aspect Ratio <code>16:9</code></small>\n  The option to use HD resolution.",
                    "type": "JSON"
                },
                {
                    "name": "HDPLUS",
                    "description": "<small>Value <code>{ width: 1600, height: 900 }</code> | Aspect Ratio <code>16:9</code></small>\n  The option to use HDPLUS resolution.",
                    "type": "JSON"
                },
                {
                    "name": "FHD",
                    "description": "<small>Value <code>{ width: 1920, height: 1080 }</code> | Aspect Ratio <code>16:9</code></small>\n  The option to use FHD resolution.",
                    "type": "JSON"
                },
                {
                    "name": "QHD",
                    "description": "<small>Value <code>{ width: 2560, height: 1440 }</code> | Aspect Ratio <code>16:9</code></small>\n  The option to use QHD resolution.",
                    "type": "JSON"
                },
                {
                    "name": "WQXGAPLUS",
                    "description": "<small>Value <code>{ width: 3200, height: 1800 }</code> | Aspect Ratio <code>16:9</code></small>\n  The option to use WQXGAPLUS resolution.",
                    "type": "JSON"
                },
                {
                    "name": "UHD",
                    "description": "<small>Value <code>{ width: 3840, height: 2160 }</code> | Aspect Ratio <code>16:9</code></small>\n  The option to use UHD resolution.",
                    "type": "JSON"
                },
                {
                    "name": "UHDPLUS",
                    "description": "<small>Value <code>{ width: 5120, height: 2880 }</code> | Aspect Ratio <code>16:9</code></small>\n  The option to use UHDPLUS resolution.",
                    "type": "JSON"
                },
                {
                    "name": "FUHD",
                    "description": "<small>Value <code>{ width: 7680, height: 4320 }</code> | Aspect Ratio <code>16:9</code></small>\n  The option to use FUHD resolution.",
                    "type": "JSON"
                },
                {
                    "name": "QUHD",
                    "description": "<small>Value <code>{ width: 15360, height: 8640 }</code> | Aspect Ratio <code>16:9</code></small>\n  The option to use QUHD resolution.",
                    "type": "JSON"
                }
            ],
            "itemtype": "attribute",
            "name": "VIDEO_RESOLUTION",
            "type": "JSON",
            "readonly": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 162,
            "description": "Stores the self user media MediaStream object.",
            "itemtype": "attribute",
            "name": "_mediaStream",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 173,
            "description": "Stores the self screensharing MediaStream.",
            "itemtype": "attribute",
            "name": "_mediaScreen",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 184,
            "description": "Stores the self screensharing audio MediaStream\n  for browsers that do not support bundling of\n  screensharing MediaStream with <code>audio: true</code>.\nThe current {{#crossLink \"Skylink/_mediaScreen:attribute\"}}_mediaScreen{{/crossLink}}\n  clones this MediaStream object and <code>.addTrack()</code> with the\n  screensharing MediaStream object video MediaStreamTrack object.",
            "itemtype": "attribute",
            "name": "_mediaScreenClone",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 200,
            "description": "Stores the Skylink default streaming settings.",
            "itemtype": "attribute",
            "name": "_defaultStreamSettings",
            "type": "JSON",
            "params": [
                {
                    "name": "audio",
                    "description": "The\n  default streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  self connection Stream.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "stereo",
                            "description": "The default flag that indicates if\n  stereo should be enabled in self connection Stream\n   audio streaming.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "video",
                    "description": "The default\n  streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the Peer.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "resolution",
                            "description": "The default\n  streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "width",
                                    "description": "The default\n  streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "height",
                                    "description": "The default\n  streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "frameRate",
                            "description": "The default\n  streaming video maximum frameRate.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "bandwidth",
                    "description": "The configuration for\n  the maximum sending bandwidth. Setting the flags may or may not work depending\n  on the browser implementations and how it handles it. By default, this is empty.",
                    "type": "JSON",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.7",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 250,
            "description": "Stores self user media Stream streaming settings. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from self connection.",
            "itemtype": "attribute",
            "name": "_streamSettings",
            "type": "JSON",
            "params": [
                {
                    "name": "audio",
                    "description": "The\n  self Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of self connection.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "stereo",
                            "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "optional",
                            "description": "The optional constraints for audio streaming\n  in self user media Stream object. Some of the values are\n  set by the <code>audio.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "video",
                    "description": "The self\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of self connection.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "resolution",
                            "description": "The self\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "frameRate",
                            "description": "The self\n  Stream streaming video maximum frameRate.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "screenshare",
                            "description": "The flag\n  that indicates if the self connection Stream object sent\n  is a screensharing stream or not. In this case, the\n  value is <code>false</code> for user media Stream object.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "optional",
                            "description": "The optional constraints for video streaming\n  in self user media Stream object. Some of the values are\n  set by the <code>video.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "bandwidth",
                    "description": "The configuration for\n  the maximum sending bandwidth. The flags set may or may not work depending\n  on the browser implementations and how it handles it.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "audio",
                            "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "video",
                            "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 307,
            "description": "Stores self screensharing Stream streaming settings.",
            "itemtype": "attribute",
            "name": "_screenSharingStreamSettings",
            "type": "JSON",
            "params": [
                {
                    "name": "audio",
                    "description": "The\n  self Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of self connection.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "stereo",
                            "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "video",
                    "description": "The self\n  Stream streaming video settings.",
                    "type": "Boolean|JSON",
                    "props": [
                        {
                            "name": "screenshare",
                            "description": "The flag\n  that indicates if the self connection Stream object sent\n  is a screensharing stream or not. In this case, the\n  value is <code>true</code> for screensharing Stream object.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "bandwidth",
                    "description": "The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                    "type": "JSON",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 338,
            "description": "The flag that indicates if self browser supports the screensharing feature.\nCurrently, Opera does not support screensharing and only premium\n  Temasys plugins support this screensharing feature.",
            "itemtype": "attribute",
            "name": "_screenSharingAvailable",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 352,
            "description": "Stores the\n  [getUserMedia MediaStreamConstraints](https://w3c.github.io/mediacapture-main/getusermedia.html#idl-def-MediaStreamConstraints)\n  parsed from {{#crossLink \"Skylink/_streamSettings:attribute\"}}_streamSettings{{/crossLink}}\n  for user media Stream object.",
            "itemtype": "attribute",
            "name": "_getUserMediaSettings",
            "type": "JSON",
            "params": [
                {
                    "name": "audio",
                    "description": "The flag that indicates if self user media\n  MediaStream would have audio streaming.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "optional",
                            "description": "The optional constraints for audio streaming\n  in self user media MediaStream object. Some of the values are\n  set by the <code>audio.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "video",
                    "description": "The flag that indicates if self user media\n  MediaStream would have video streaming.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "mandatory.maxHeight",
                            "description": "The self user media\n  MediaStream video streaming resolution maximum height.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "mandatory.maxWidth",
                            "description": "The self user media\n  MediaStream video streaming resolution maximum width.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "mandatory.maxFrameRate",
                            "description": "The self user media\n  MediaStream video streaming maxinmum framerate.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "optional",
                            "description": "The optional constraints for video streaming\n  in self user media MediaStream object. Some of the values are\n  set by the <code>video.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 384,
            "description": "Stores self Stream mute settings for both audio and video streamings.",
            "itemtype": "attribute",
            "name": "_mediaStreamsStatus",
            "type": "JSON",
            "params": [
                {
                    "name": "audioMuted",
                    "description": "The flag that\n  indicates if self connection Stream object audio streaming is muted. If\n  there is no audio streaming enabled for self connection, by default,\n  it is set to <code>true</code>.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "videoMuted",
                    "description": "The flag that\n  indicates if self connection Stream object video streaming is muted. If\n  there is no video streaming enabled for self connection, by default,\n  it is set to <code>true</code>.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 403,
            "description": "The flag indicates that when Skylink tries to get both audio and video stream\n  but Skylink fails to retrieve the user media stream, it should fallback\n  to retrieve audio streaming for the user media stream only.",
            "itemtype": "attribute",
            "name": "_audioFallback",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Stream",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 418,
            "description": "Handles the event when access to self user media MediaStream is successful.",
            "itemtype": "method",
            "name": "_onUserMediaSuccess",
            "params": [
                {
                    "name": "stream",
                    "description": "The self user MediaStream object.",
                    "type": "MediaStream"
                },
                {
                    "name": "isScreenSharing",
                    "description": "The flag that indicates if self\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "trigger": "mediaAccessSuccess",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 528,
            "description": "Handles the event when access to self user media MediaStream has failed.",
            "itemtype": "method",
            "name": "_onUserMediaError",
            "params": [
                {
                    "name": "error",
                    "description": "The error object thrown that caused the failure.",
                    "type": "Object"
                },
                {
                    "name": "isScreenSharing",
                    "description": "The flag that indicates if self\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "audioFallback",
                    "description": "The flag that indicates if stage\n   of stream media error should do an audio fallback.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "trigger": "mediaAccessError",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 584,
            "description": "Handles the event when remote MediaStream is received from Peer connection.",
            "itemtype": "method",
            "name": "_onRemoteStreamAdded",
            "params": [
                {
                    "name": "targetMid",
                    "description": "The Peer ID associated with the remote Stream object received.",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "The event object received in the <code>RTCPeerConnection.\n  onaddstream</code>.",
                    "type": "Event"
                },
                {
                    "name": "isScreenSharing",
                    "description": "The flag that indicates if Peer connection\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "trigger": "incomingStream",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 627,
            "description": "Parses the audio stream settings for self provided.",
            "itemtype": "method",
            "name": "_parseAudioStreamSettings",
            "params": [
                {
                    "name": "options",
                    "description": "The flag that indicates if self user media\n  MediaStream would have audio streaming.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "mute",
                            "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "optional",
                            "description": "The optional constraints for audio streaming\n  in self user media Stream object. Some of the values are\n  set by the <code>audio.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The parsed audio stream settings for self.\n  <ul>\n    <li><code>return.settings</code>: The output audio stream settings\n       information for self</li>\n    <li><code>return.userMedia</code>: The output audio\n       MediaStreamConstraints to be passed into getUserMedia()</li>\n </ul>",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 686,
            "description": "Parses the video stream settings for self provided.",
            "itemtype": "method",
            "name": "_parseVideoStreamSettings",
            "params": [
                {
                    "name": "options",
                    "description": "The self\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of self connection.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "resolution",
                            "description": "The self\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "frameRate",
                            "description": "The self\n  Stream streaming video maximum frameRate.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "mute",
                            "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "optional",
                            "description": "The optional constraints for video streaming\n  in self user media Stream object. Some of the values are\n  set by the <code>video.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The parsed video stream settings for self.\n  <ul>\n    <li><code>return.settings</code>: The output video stream settings\n       information for self</li>\n    <li><code>return.userMedia</code>: The output video\n       MediaStreamConstraints to be passed into getUserMedia()</li>\n </ul>",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 787,
            "description": "Parses the streaming bandwidth settings for self provided.",
            "itemtype": "method",
            "name": "_parseBandwidthSettings",
            "params": [
                {
                    "name": "options",
                    "description": "The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "audio",
                            "description": "The configured\n  audio stream channel for self connection Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "video",
                            "description": "The configured\n  video stream channel for the self connection Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "The configured\n  datachannel channel for self DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 831,
            "description": "Parses the <code>mediaStatus</code> settings for self provided.",
            "itemtype": "method",
            "name": "_parseMutedSettings",
            "params": [
                {
                    "name": "options",
                    "description": "The self Stream streaming settings.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in {{#crossLink \"Skylink/setUserData:method\"}}setUserData(){{/crossLink}}.",
                            "type": "String|JSON",
                            "optional": true
                        },
                        {
                            "name": "audio",
                            "description": "The self Stream streaming audio settings.\n  If <code>false</code>, it means that audio streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream audio\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The self Stream streaming video settings.\n  If <code>false</code>, it means that video streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream video\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "resolution",
                                    "description": "The self Stream streaming video\n  resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The self\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "audio.stereo",
                    "description": "The default flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The parsed <code>mediaStatus</code> settings for self.\n  <ul>\n    <li><code>return.audioMuted</code>:  The flag that\n      indicates if self connection Stream object audio streaming is muted. If\n      there is no audio streaming enabled for self connection, by default,\n      it is set to <code>true</code>.</li>\n    <li><code>return.videoMuted</code>: The flag that\n      indicates if self connection Stream object video streaming is muted. If\n      there is no video streaming enabled for self connection, by default,\n      it is set to <code>true</code>.</li>\n </ul>",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 899,
            "description": "Parses the default stream settings received from\n  the platform signaling.",
            "itemtype": "method",
            "name": "_parseDefaultMediaStreamSettings",
            "params": [
                {
                    "name": "defaults",
                    "description": "The default user media settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "maxHeight",
                            "description": "The default user media\n  MediaStream video streaming resolution maximum height.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "maxWidth",
                            "description": "The default user media\n  MediaStream video streaming resolution maximum width.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.7",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 933,
            "description": "Parses the provided stream settings for self provided.",
            "itemtype": "method",
            "name": "_parseMediaStreamSettings",
            "params": [
                {
                    "name": "options",
                    "description": "The self Stream streaming settings. If both audio and video\n  option is <code>false</code>, there should be no audio and video stream\n  sending from self connection.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "audio",
                            "description": "The self Stream streaming audio settings.\n  If <code>false</code>, it means that audio streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream audio\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The self Stream streaming video settings.\n  If <code>false</code>, it means that video streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream video\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "resolution",
                                    "description": "The self Stream streaming video\n  resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The self\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "The configuration for\n  the maximum sending bandwidth. Setting the flags may or may not work depending\n  on the browser implementations and how it handles it.",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1014,
            "description": "Sends self selected Stream object to current Peer connections.\nIf {{#crossLink \"Skylink/_mediaScreen:attribute\"}}_mediaScreen{{/crossLink}}\n  is not empty, it will send the screensharing stream, else it will\n  send the {{#crossLink \"Skylink/_mediaStream:attribute\"}}_mediaStream{{/crossLink}}\n  if is not empty.\nIf self does not have any Stream object to send, it will a connection without\n  any remote Stream sent to the Peer connection.",
            "itemtype": "method",
            "name": "_addLocalMediaStreams",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID of the connection to send\n  Stream object to.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1095,
            "description": "Stops self user media Stream object attached to Skylink.",
            "itemtype": "method",
            "name": "stopStream",
            "trigger": "mediaAccessStopped, streamEnded",
            "example": [
                "\n  SkylinkDemo.stopStream();"
            ],
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1111,
            "description": "Handles the muting of audio and video streams in\n  {{#crossLink \"Skylink/_mediaStream:attribute\"}}_mediaStream{{/crossLink}},\n  {{#crossLink \"Skylink/_mediaScreen:attribute\"}}_mediaScreen{{/crossLink}} and\n  {{#crossLink \"Skylink/_mediaScreenClone:attribute\"}}_mediaScreenClone{{/crossLink}},",
            "itemtype": "method",
            "name": "_muteLocalMediaStreams",
            "return": {
                "description": "The information of the self MediaStream object attached to\n  Skylink if they have the specified tracks for the stream settings.\n  <ul>\n    <li><code>return.hasAudioTracks</code>: The flag that indicates if\n       self MediaStream has audio tracks</li>\n    <li><code>return.hasVideoTracks</code>: The flag that indicates if\n       self MediaStream has video tracks</li>\n </ul>",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1223,
            "description": "Handles the stopping of audio and video streams.",
            "itemtype": "method",
            "name": "_stopLocalMediaStreams",
            "params": [
                {
                    "name": "options",
                    "description": "The stop attached Stream options for\n  Skylink when leaving the room.",
                    "type": "Boolean|JSON",
                    "props": [
                        {
                            "name": "userMedia",
                            "description": "The flag that indicates if leaving the room\n  should automatically stop and clear the existing user media stream attached to skylink.\n  This would trigger <code>mediaAccessStopped</code> for this Stream if available.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "screenshare",
                            "description": "The flag that indicates if leaving the room\n  should automatically stop and clear the existing screensharing stream attached to skylink.\n  This would trigger <code>mediaAccessStopped</code> for this Stream if available.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.3",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1326,
            "description": "Waits for self MediaStream object to be attached to Skylink based\n  on the options provided before firing the callback to indicate\n  that self Stream object is received.\nThis will stop any currently attached Stream object to Skylink.",
            "itemtype": "method",
            "name": "_waitForLocalMediaStream",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback fired after self MediaStream object\n  is attached to Skylink based on the options provided.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "error",
                            "description": "The callback error that is defined\n  when there's an error.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback fired after self MediaStream object\n  is attached to Skylink based on the options provided successfully or met with\n  an exception. The callback signature is <code>function (error)</code>.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "",
                            "description": "The error object received in the callback.\n  If received as <code>undefined</code>, it means that there is no errors.",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "options",
                    "description": "The self Stream streaming settings. If both audio and video\n  option is <code>false</code>, there should be no audio and video stream\n  sending from self connection.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "audio",
                            "description": "The self Stream streaming audio settings.\n  If <code>false</code>, it means that audio streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream audio\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The self Stream streaming video settings.\n  If <code>false</code>, it means that video streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream video\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "resolution",
                                    "description": "The self Stream streaming video\n  resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The self\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "The configuration for\n  the maximum sending bandwidth. Setting the flags may or may not work depending\n  on the browser implementations and how it handles it.",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The maximum\n  sending audio bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the audio bitrate to the browser defaults.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The maximum\n  sending video bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the video bitrate to the browser defaults.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "data",
                                    "description": "The maximum\n  sending data bandwidth bitrate in <var>kb/s</var>. If this is not provided,\n  it will leave the data bitrate to the browser defaults.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "trigger": "mediaAccessSuccess, mediaAccessError, mediaAccessRequired",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1461,
            "description": "Gets self user media Stream object to attach to Skylink.\nDo not invoke this function when user has already joined a room as\n  this may affect any currently attached stream. You may use\n {{#crossLink \"Skylink/sendStream:method\"}}sendStream(){{/crossLink}}\n instead if self is already in the room, and allows application to\n attach application own MediaStream object to Skylink.",
            "itemtype": "method",
            "name": "getUserMedia",
            "params": [
                {
                    "name": "options",
                    "description": "The self Stream streaming settings for the new Stream\n  object attached to Skylink. If this parameter is not provided, the\n  options value would be <code>{ audio: true, video: true }</code>.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "audio",
                            "description": "The self Stream streaming audio settings.\n  If <code>false</code>, it means that audio streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream audio\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "optional",
                                    "description": "The optional constraints for audio streaming\n  in self user media Stream object. This follows the <code>optional</code>\n  setting in the <code>MediaStreamConstraints</code> when <code>getUserMedia()</code> is invoked.\n  Tampering this may cause errors in retrieval of self user media Stream object.\n  Refer to this [site for more reference](http://www.sitepoint.com/introduction-getusermedia-api/).",
                                    "type": "Array",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The self Stream streaming video settings.\n  If <code>false</code>, it means that video streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream video\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "resolution",
                                    "description": "The self Stream streaming video\n  resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The self\n  Stream streaming video resolution width.\n  <i>This sets the <code>maxWidth</code> of the <code>video</code>\n  constraints passed in <code>getUserMedia()</code></i>.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The self\n  Stream streaming video resolution height.\n  <i>This sets the <code>maxHeight</code> of the <code>video</code>\n  constraints passed in <code>getUserMedia()</code></i>.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The self\n  Stream streaming video maximum frameRate.\n  <i>This sets the <code>maxFramerate</code> of the <code>video</code>\n  constraints passed in <code>getUserMedia()</code></i>.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                },
                                {
                                    "name": "optional",
                                    "description": "The optional constraints for video streaming\n  in self user media Stream object. This follows the <code>optional</code>\n  setting in the <code>MediaStreamConstraints</code> when <code>getUserMedia()</code> is invoked.\n  Tampering this may cause errors in retrieval of self user media Stream object.\n  Refer to this [site for more reference](http://www.sitepoint.com/introduction-getusermedia-api/).",
                                    "type": "Array",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback fired after Skylink has gained\n  access to self media stream and attached it successfully with the provided\n  media settings or have met with an exception.\n  The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  This is the exception thrown that caused the failure for getting self user media.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "Object"
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  The self user media [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n  object. To display the MediaStream object to a <code>video</code> or <code>audio</code>, simply invoke:<br>\n  <code>attachMediaStream(domElement, stream);</code>.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Default is to get both audio and video\n  // Example 1: Get both audio and video by default.\n  SkylinkDemo.getUserMedia();\n\n  // Example 2: Get the audio stream only\n  SkylinkDemo.getUserMedia({\n    video: false,\n    audio: true\n  });\n\n  // Example 3: Set the stream settings for the audio and video\n  SkylinkDemo.getUserMedia({\n    video: {\n       resolution: SkylinkDemo.VIDEO_RESOLUTION.HD,\n       frameRate: 50\n     },\n    audio: {\n      stereo: true\n    }\n  });\n\n  // Example 4: Get user media with callback\n  SkylinkDemo.getUserMedia({\n    video: false,\n    audio: true\n  },function(error,success){\n     if (error){\n       console.log(error);\n     }\n     else{\n       console.log(success);\n    }\n  });"
            ],
            "trigger": "mediaAccessSuccess, mediaAccessError",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1696,
            "description": "Replaces the currently attached Stream object in Skylink and refreshes all\n  connection with Peer connections to send the updated Stream object.\nThe application may provide their own MediaStream object to send to\n  all PeerConnections connection.\nReference {{#crossLink \"Skylink/refreshConnection:method\"}}refreshConnection(){{/crossLink}}\n   on the events triggered and restart mechanism.",
            "itemtype": "method",
            "name": "sendStream",
            "params": [
                {
                    "name": "options",
                    "description": "The self Stream streaming settings for the new Stream\n  object to replace the current Stream object attached to Skylink.\n  If this parameter is provided as a MediaStream object, the\n  MediaStream object settings for <code>mediaStatus</code> would be\n  detected as unmuted by default.",
                    "type": "Object|JSON",
                    "props": [
                        {
                            "name": "audio",
                            "description": "The self Stream streaming audio settings.\n  If <code>false</code>, it means that audio streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream audio\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "optional",
                                    "description": "The optional constraints for audio streaming\n  in self user media Stream object. This follows the <code>optional</code>\n  setting in the <code>MediaStreamConstraints</code> when <code>getUserMedia()</code> is invoked.\n  Tampering this may cause errors in retrieval of self user media Stream object.\n  Refer to this [site for more reference](http://www.sitepoint.com/introduction-getusermedia-api/).",
                                    "type": "Array",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The self Stream streaming video settings.\n  If <code>false</code>, it means that video streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream video\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "resolution",
                                    "description": "The self Stream streaming video\n  resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The self\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                },
                                {
                                    "name": "optional",
                                    "description": "The optional constraints for video streaming\n  in self user media Stream object. This follows the <code>optional</code>\n  setting in the <code>MediaStreamConstraints</code> when <code>getUserMedia()</code> is invoked.\n  Tampering this may cause errors in retrieval of self user media Stream object.\n  Refer to this [site for more reference](http://www.sitepoint.com/introduction-getusermedia-api/).",
                                    "type": "Array",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback fired after Skylink has replaced\n  the current Stream object successfully with the provided\n  media settings / MediaStream object or have met with an exception.\n  The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  This is the exception thrown that caused the failure for replacing the current\n  Stream object. If received as <code>null</code>, it means that there is no errors.",
                            "type": "Object"
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  The self user media [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n  object. To display the MediaStream object to a <code>video</code> or <code>audio</code>, simply invoke:<br>\n  <code>attachMediaStream(domElement, stream);</code>.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: Send a stream object instead\n  SkylinkDemo.on('mediaAccessSuccess', function (stream) {\n    SkylinkDemo.sendStream(stream);\n  });\n\n  // Example 2: Send stream with getUserMedia automatically called for you\n  SkylinkDemo.sendStream({\n    audio: true,\n    video: false\n  });\n\n  // Example 3: Send stream with getUserMedia automatically called for you\n  // and audio is muted\n  SkylinkDemo.sendStream({\n    audio: { mute: true },\n    video: false\n  });\n\n  // Example 4: Send stream with callback\n  SkylinkDemo.sendStream({\n   audio: true,\n   video: true\n  },function(error,success){\n   if (error){\n     console.log('Error occurred. Stream was not sent: '+error)\n   }\n   else{\n     console.log('Stream successfully sent: '+success);\n   }\n  });"
            ],
            "trigger": "peerRestart, serverPeerRestart, incomingStream",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1929,
            "description": "Mutes the currently attached Stream object in Skylink.",
            "itemtype": "method",
            "name": "muteStream",
            "params": [
                {
                    "name": "options",
                    "description": "The self Stream streaming muted settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "audioMuted",
                            "description": "The flag that\n  indicates if self connection Stream object audio streaming is muted. If\n  there is no audio streaming enabled for self connection, by default,\n  it is set to <code>true</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "videoMuted",
                            "description": "The flag that\n  indicates if self connection Stream object video streaming is muted. If\n  there is no video streaming enabled for self connection, by default,\n  it is set to <code>true</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "example": [
                "\n  SkylinkDemo.muteStream({\n    audioMuted: true,\n    videoMuted: false\n  });"
            ],
            "trigger": "streamMuted, peerUpdated",
            "component": "Stream",
            "since": "0.5.7",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 2031,
            "description": "Unmutes the currently attached Stream object audio stream.",
            "itemtype": "method",
            "name": "enableAudio",
            "trigger": "streamMuted, peerUpdated",
            "deprecated": true,
            "deprecationMessage": "Use .muteStream()",
            "example": [
                "\n  SkylinkDemo.enableAudio();"
            ],
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 2049,
            "description": "Mutes the currently attached Stream object audio stream.",
            "itemtype": "method",
            "name": "disableAudio",
            "deprecated": true,
            "deprecationMessage": "Use .muteStream()",
            "example": [
                "\n  SkylinkDemo.disableAudio();"
            ],
            "trigger": "streamMuted, peerUpdated",
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 2067,
            "description": "Unmutes the currently attached Stream object video stream.",
            "itemtype": "method",
            "name": "enableVideo",
            "deprecated": true,
            "deprecationMessage": "Use .muteStream()",
            "example": [
                "\n  SkylinkDemo.enableVideo();"
            ],
            "trigger": "streamMuted, peerUpdated",
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 2085,
            "description": "Mutes the currently attached Stream object video stream.",
            "itemtype": "method",
            "name": "disableVideo",
            "depcreated": "Use .muteStream()",
            "example": [
                "\n  SkylinkDemo.disableVideo();"
            ],
            "trigger": "streamMuted, peerUpdated",
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 2102,
            "description": "Shares the current screen with Peer connections and will refresh all\n   Peer connections to send the screensharing Stream object with\n   <code>HTTPS</code> protocol accessing application.\nReference {{#crossLink \"Skylink/refreshConnection:method\"}}refreshConnection(){{/crossLink}}\n   on the events triggered and restart mechanism.\nThis will require our own Temasys Skylink extension to do screensharing.\nFor screensharing feature in IE / Safari with our Temasys Plugin, please\n  [contact us](https://www.temasys.com.sg/contact-us).\nCurrently, Opera does not support screensharing feature.\nThis does not replace the currently attached user media Stream object in Skylink.",
            "itemtype": "method",
            "name": "shareScreen",
            "params": [
                {
                    "name": "enableAudio",
                    "description": "The flag that indicates if self screensharing\n  Stream streaming should have audio. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of self connection.",
                    "type": "JSON",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "The callback fired after Skylink has shared\n  the screen successfully or have met with an exception.\n  The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  This is the exception thrown that caused the failure for sharing the screen.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "Object"
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  The self screensharing [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n  object. To display the MediaStream object to a <code>video</code> or <code>audio</code>, simply invoke:<br>\n  <code>attachMediaStream(domElement, stream);</code>.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: Share the screen\n  SkylinkDemo.shareScreen();\n\n  // Example 2: Share screen with callback when screen is ready and shared\n  SkylinkDemo.shareScreen(function(error,success){\n     if (error){\n       console.log(error);\n     }\n     else{\n       console.log(success);\n    }\n  });"
            ],
            "trigger": "mediaAccessSuccess, mediaAccessError, incomingStream, peerRestart, serverPeerRestart, peerUpdated",
            "component": "Stream",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 2314,
            "description": "Stops self screensharing Stream object attached to Skylink.\nIf user media Stream object is available, Skylink will refresh all\n   Peer connections to send the user media Stream object.\nReference {{#crossLink \"Skylink/refreshConnection:method\"}}refreshConnection(){{/crossLink}}\n   on the events triggered and restart mechanism.",
            "itemtype": "method",
            "name": "stopScreen",
            "example": [
                "\n  SkylinkDemo.stopScreen();"
            ],
            "trigger": "mediaAccessStopped, streamEnded, incomingStream, peerRestart, serverPeerRestart",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 1,
            "description": "Modifies the array of session description received to enable\n  stereo in the audio streaming connection.",
            "itemtype": "method",
            "name": "_addSDPStereo",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "The array of lines in the session description.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The updated array of lines in the session description\n   with the stereo feature.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "SDP",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 62,
            "description": "<b>BROKEN (not in use)</b>. Modifies the array of session description received to set\n  a custom video resolution in the video streaming connection.",
            "itemtype": "method",
            "name": "_setSDPVideoResolution",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "The array of lines in the session description.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The updated array of lines in the session description\n   with the custom video resolution.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "SDP",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 151,
            "description": "Modifies the array of session description received to set\n  a custom bandwidth bitrate (in kbps) in the streaming connection.\nSetting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate.",
            "itemtype": "method",
            "name": "_setSDPBitrate",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "The array of lines in the session description.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The updated array of lines in the session description\n   with custom bandwidth bitrate (in kbps) settings.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "SDP",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 242,
            "description": "Modifies the array of session description received to configure\n  the selected video codec to use in the video streaming connection.",
            "itemtype": "method",
            "name": "_setSDPVideoCodec",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "The array of lines in the session description.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The updated array of lines in the session description\n   with the selected video codec.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "SDP",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 300,
            "description": "Modifies the array of session description received to configure\n  the selected audio codec to use in the audio streaming connection.",
            "itemtype": "method",
            "name": "_setSDPAudioCodec",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "The array of lines in the session description.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The updated array of lines in the session description\n   with the selected audio codec.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "SDP",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 357,
            "description": "Modifies the array of session description received to remove the\n  Firefox 32 H262 preference to prevent breaking connection with nsupported browsers.",
            "itemtype": "method",
            "name": "_removeSDPFirefoxH264Pref",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "The array of lines in the session description.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The updated array of lines in the session description\n   removed of the Firefox 32 H262 preference.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "SDP",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 379,
            "description": "Modifies the session description received to append the correct ssrc lines for Firefox.",
            "itemtype": "method",
            "name": "_addSDPSsrcFirefoxAnswer",
            "params": [
                {
                    "name": "targetMid",
                    "description": "The peer connection ID.",
                    "type": "String"
                },
                {
                    "name": "answerSdp",
                    "description": "The answer session description.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The update answer session description with correct SSRC lines.",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "component": "SDP",
            "since": "0.6.6",
            "class": "Skylink"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:180"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:465"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:499"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:601"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:655"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:779"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:885"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-connection.js:99"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-connection.js:275"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-data.js:42"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-data.js:82"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-data.js:109"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-handshake.js:1"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-privileged.js:85"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-privileged.js:146"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-connection.js:140"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-connection.js:420"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-connection.js:534"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-connection.js:554"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:33"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:115"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:148"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:167"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:180"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:193"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:204"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:220"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:232"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:250"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:268"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:285"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:314"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:327"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:338"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:349"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:390"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-init.js:555"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:555"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-init.js:684"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:684"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-init.js:779"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:779"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-init.js:830"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:830"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:1"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:30"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:30"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:45"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:45"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:58"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:58"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:73"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:73"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:90"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:90"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:105"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:105"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:122"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:122"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:135"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:135"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:163"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:163"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:181"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:181"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:208"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:221"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:243"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:260"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:275"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:275"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:357"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:357"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:374"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:374"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:400"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:400"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:426"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:426"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:452"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:477"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:477"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:504"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:531"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:13"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:23"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:33"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:46"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:59"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:76"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:95"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:124"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:146"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:163"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:180"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:196"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:213"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:249"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:264"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:281"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:292"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:367"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:444"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:526"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:601"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:675"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:756"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:847"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:882"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:918"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:996"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1058"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1074"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1087"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1100"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1114"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1191"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1269"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1286"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1307"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1436"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1457"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1473"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1532"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1559"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1608"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1655"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1706"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1756"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:38"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:50"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:64"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:81"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:101"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:151"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:164"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:175"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:186"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:197"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:210"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:227"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:244"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:368"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-channel.js:540"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:540"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:589"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:16"
        },
        {
            "message": "unknown tag: development",
            "line": " source/socket-message.js:117"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:117"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:129"
        },
        {
            "message": "unknown tag: development",
            "line": " source/socket-message.js:149"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:149"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:163"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:179"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:204"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:292"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:312"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:332"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:364"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:364"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:400"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:400"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:428"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:428"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:450"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:450"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:478"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:478"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:506"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:506"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:554"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:554"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:580"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:580"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:610"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:610"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:640"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:640"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:705"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:705"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:841"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:841"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:1035"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:1035"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:1203"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:1203"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:1296"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:1401"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:1401"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:1511"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:1511"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:28"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:55"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:67"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:80"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:162"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:173"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:184"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:200"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:250"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:307"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:338"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:352"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:384"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:403"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:418"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:418"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:528"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:528"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:584"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:584"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:627"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:686"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:787"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:831"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:899"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:933"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1014"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1095"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1326"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1326"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1461"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1461"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1696"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1696"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1929"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1929"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:2031"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:2031"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:2031"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:2049"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:2049"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:2049"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:2067"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:2067"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:2067"
        },
        {
            "message": "unknown tag: depcreated",
            "line": " source/stream-media.js:2085"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:2085"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:2085"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:2102"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:2102"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:2314"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-sdp.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-sdp.js:62"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-sdp.js:151"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-sdp.js:242"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-sdp.js:300"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-sdp.js:357"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-sdp.js:379"
        },
        {
            "message": "Missing item type\nPolyfill for Object.keys() from Mozilla\nFrom https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys",
            "line": " source/template/header.js:5"
        },
        {
            "message": "Missing item type\nPolyfill for Date.getISOString() from Mozilla\nFrom https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString",
            "line": " source/template/header.js:45"
        },
        {
            "message": "Missing item type\nPolyfill for addEventListener() from Eirik Backer @eirikbacker (github.com).\nFrom https://gist.github.com/eirikbacker/2864711\nMIT Licensed",
            "line": " source/template/header.js:69"
        },
        {
            "message": "Missing item type\nGlobal function that clones an object.",
            "line": " source/template/header.js:103"
        },
        {
            "message": "Missing item type\n// resend if failed\nif (iceConnectionState === self.ICE_CONNECTION_STATE.FAILED) {\n  log.debug([targetMid, 'RTCIceConnectionState', null,\n    'Ice connection state failed. Re-negotiating connection']);\n  self._removePeer(targetMid);\n  self._sendChannelMessage({\n    type: self._SIG_MESSAGE_TYPE.WELCOME,\n    mid: self._user.sid,\n    rid: self._room.id,\n    agent: window.webrtcDetectedBrowser,\n    version: window.webrtcDetectedVersion,\n    userInfo: self.getPeerInfo(),\n    target: targetMid,\n    restartNego: true,\n    hsPriority: -1\n  });",
            "line": " source/peer-connection.js:991"
        }
    ]
}