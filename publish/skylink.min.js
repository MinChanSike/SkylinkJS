/*! skylinkjs - v0.6.15 - 2016-11-04 */
(function(){"use strict";function Skylink(){if(!(this instanceof Skylink))return new Skylink}Object.keys||(Object.keys=function(){var hasOwnProperty=Object.prototype.hasOwnProperty,hasDontEnumBug=!{toString:null}.propertyIsEnumerable("toString"),dontEnums=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],dontEnumsLength=dontEnums.length;return function(obj){if("object"!=typeof obj&&"function"!=typeof obj||null===obj)throw new TypeError("Object.keys called on non-object");var result=[];for(var prop in obj)hasOwnProperty.call(obj,prop)&&result.push(prop);if(hasDontEnumBug)for(var i=0;i<dontEnumsLength;i++)hasOwnProperty.call(obj,dontEnums[i])&&result.push(dontEnums[i]);return result}}()),function(){function pad(number){return number<10?"0"+number:number}Date.prototype.toISOString=function(){return this.getUTCFullYear()+"-"+pad(this.getUTCMonth()+1)+"-"+pad(this.getUTCDate())+"T"+pad(this.getUTCHours())+":"+pad(this.getUTCMinutes())+":"+pad(this.getUTCSeconds())+"."+(this.getUTCMilliseconds()/1e3).toFixed(3).slice(2,5)+"Z"}}(),function(win,doc){function docHijack(p){var old=doc[p];doc[p]=function(v){return addListen(old(v))}}function addEvent(on,fn,self){return(self=this).attachEvent("on"+on,function(e){var e=e||win.event;e.preventDefault=e.preventDefault||function(){e.returnValue=!1},e.stopPropagation=e.stopPropagation||function(){e.cancelBubble=!0},fn.call(self,e)})}function addListen(obj,i){if(i=obj.length)for(;i--;)obj[i].addEventListener=addEvent;else obj.addEventListener=addEvent;return obj}win.addEventListener||(addListen([doc,win]),"Element"in win?win.Element.prototype.addEventListener=addEvent:(doc.attachEvent("onreadystatechange",function(){addListen(doc.all)}),docHijack("getElementsByTagName"),docHijack("getElementById"),docHijack("createElement"),addListen(doc.all)))}(window,document);var clone=function(obj){if(null===obj||"object"!=typeof obj)return obj;var copy=function(data){var copy=data.constructor();for(var attr in data)data.hasOwnProperty(attr)&&(copy[attr]=data[attr]);return copy};if("object"==typeof obj&&!Array.isArray(obj))try{return JSON.parse(JSON.stringify(obj))}catch(err){return copy(obj)}return copy(obj)};Skylink.prototype.VERSION="0.6.15",Skylink.prototype.generateUUID=function(){var d=(new Date).getTime(),uuid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=(d+16*Math.random())%16|0;return d=Math.floor(d/16),("x"==c?r:7&r|8).toString(16)});return uuid},Skylink.prototype.DATA_CHANNEL_STATE={CONNECTING:"connecting",OPEN:"open",CLOSING:"closing",CLOSED:"closed",ERROR:"error",CREATE_ERROR:"createError",BUFFERED_AMOUNT_LOW:"bufferedAmountLow",SEND_MESSAGE_ERROR:"sendMessageError"},Skylink.prototype.DATA_CHANNEL_TYPE={MESSAGING:"messaging",DATA:"data"},Skylink.prototype.DATA_CHANNEL_MESSAGE_ERROR={MESSAGE:"message",TRANSFER:"transfer"},Skylink.prototype._enableDataChannel=!0,Skylink.prototype._dataChannels={},Skylink.prototype._createDataChannel=function(peerId,dataChannel,createAsMessagingChannel){var self=this;if(!self._user)return void log.error([peerId,"RTCDataChannel",null,"Aborting of creating or initializing Datachannel as User does not have Room session"]);if(!self._peerConnections[peerId]||self._peerConnections[peerId].signalingState===self.PEER_CONNECTION_STATE.CLOSED)return void log.error([peerId,"RTCDataChannel",null,"Aborting of creating or initializing Datachannel as Peer connection does not exists"]);var channelName=self._user.sid+"_"+peerId,channelType=createAsMessagingChannel?self.DATA_CHANNEL_TYPE.MESSAGING:self.DATA_CHANNEL_TYPE.DATA;if(dataChannel&&"object"==typeof dataChannel?channelName=dataChannel.label:"string"==typeof dataChannel&&(channelName=dataChannel,dataChannel=null),!dataChannel)try{dataChannel=self._peerConnections[peerId].createDataChannel(channelName)}catch(error){return log.error([peerId,"RTCDataChannel",channelName,"Failed creating Datachannel ->"],error),void self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.CREATE_ERROR,peerId,error,channelName,channelType,null)}self._dataChannels[peerId]?self._dataChannels[peerId].main&&self._dataChannels[peerId].main.channel.label===channelName&&(channelType=self.DATA_CHANNEL_TYPE.MESSAGING):(log.debug([peerId,"RTCDataChannel",channelName,"initializing main DataChannel"]),channelType=self.DATA_CHANNEL_TYPE.MESSAGING,self._dataChannels[peerId]={}),dataChannel.onerror=function(evt){var channelError=evt.error||evt;log.error([peerId,"RTCDataChannel",channelName,"Datachannel has an exception ->"],channelError),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.ERROR,peerId,channelError,channelName,channelType,null)},dataChannel.onbufferedamountlow=function(){log.debug([peerId,"RTCDataChannel",channelName,"Datachannel buffering data transfer low"]),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.BUFFERED_AMOUNT_LOW,peerId,null,channelName,channelType,null)},dataChannel.onmessage=function(event){self._processDataChannelData(event.data,peerId,channelName,channelType)};var onOpenHandlerFn=function(){log.debug([peerId,"RTCDataChannel",channelName,"Datachannel has opened"]),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.OPEN,peerId,null,channelName,channelType,null)};dataChannel.readyState===self.DATA_CHANNEL_STATE.OPEN?setTimeout(onOpenHandlerFn,500):(self._trigger("dataChannelState",dataChannel.readyState,peerId,null,channelName,channelType,null),dataChannel.onopen=onOpenHandlerFn);var onCloseHandlerFn=function(){log.debug([peerId,"RTCDataChannel",channelName,"Datachannel has closed"]),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.CLOSED,peerId,null,channelName,channelType,null),channelType===self.DATA_CHANNEL_TYPE.MESSAGING&&setTimeout(function(){self._peerConnections[peerId]&&self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.CLOSED&&self._peerConnections[peerId].localDescription&&self._peerConnections[peerId].localDescription.type===self.HANDSHAKE_PROGRESS.OFFER&&(log.debug([peerId,"RTCDataChannel",channelName,"Reviving Datachannel connection"]),self._createDataChannel(peerId,channelName,!0))},100)};if("firefox"===window.webrtcDetectedBrowser){var hasTriggeredClose=!1,timeBlockAfterClosing=0;dataChannel.onclose=function(){hasTriggeredClose||(hasTriggeredClose=!0,onCloseHandlerFn())};var onFFClosed=setInterval(function(){dataChannel.readyState===self.DATA_CHANNEL_STATE.CLOSED||hasTriggeredClose||5===timeBlockAfterClosing?(clearInterval(onFFClosed),hasTriggeredClose||(hasTriggeredClose=!0,onCloseHandlerFn())):dataChannel.readyState===self.DATA_CHANNEL_STATE.CLOSING&&timeBlockAfterClosing++},1e3)}else dataChannel.onclose=onCloseHandlerFn;channelType===self.DATA_CHANNEL_TYPE.MESSAGING?self._dataChannels[peerId].main={channelName:channelName,channelType:channelType,transferId:null,channel:dataChannel}:self._dataChannels[peerId][channelName]={channelName:channelName,channelType:channelType,transferId:channelName,channel:dataChannel}},Skylink.prototype._sendMessageToDataChannel=function(peerId,data,channelProp,doNotConvert){var self=this;if(channelProp&&channelProp!==peerId||(channelProp="main"),!("object"==typeof data&&data||data&&"string"==typeof data))return void log.warn([peerId,"RTCDataChannel","prop:"+channelProp,"Dropping invalid data ->"],data);if(!self._peerConnections[peerId]||self._peerConnections[peerId].signalingState===self.PEER_CONNECTION_STATE.CLOSED)return void log.warn([peerId,"RTCDataChannel","prop:"+channelProp,"Dropping for sending message as Peer connection does not exists or is closed ->"],data);if(!self._dataChannels[peerId]||!self._dataChannels[peerId][channelProp])return void log.warn([peerId,"RTCDataChannel","prop:"+channelProp,"Dropping for sending message as Datachannel connection does not exists ->"],data);var channelName=self._dataChannels[peerId][channelProp].channelName,channelType=self._dataChannels[peerId][channelProp].channelType,readyState=self._dataChannels[peerId][channelProp].channel.readyState,messageType="object"==typeof data&&data.type===self._DC_PROTOCOL_TYPE.MESSAGE?self.DATA_CHANNEL_MESSAGE_ERROR.MESSAGE:self.DATA_CHANNEL_MESSAGE_ERROR.TRANSFER;if(readyState!==self.DATA_CHANNEL_STATE.OPEN){var notOpenError='Failed sending message as Datachannel connection state is not opened. Current readyState is "'+readyState+'"';throw log.error([peerId,"RTCDataChannel","prop:"+channelProp,notOpenError+" ->"],data),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.SEND_MESSAGE_ERROR,peerId,new Error(notOpenError),channelName,channelType,messageType),new Error(notOpenError)}try{doNotConvert||"object"!=typeof data?(log.debug([peerId,"RTCDataChannel","prop:"+channelProp,"Sending data with size ->"],data.size||data.length),self._dataChannels[peerId][channelProp].channel.send(data)):(log.debug([peerId,"RTCDataChannel","prop:"+channelProp,"Sending message ->"],data),self._dataChannels[peerId][channelProp].channel.send(JSON.stringify(data)))}catch(error){throw log.error([peerId,"RTCDataChannel","prop:"+channelProp,"Failed sending message ->"],error),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.SEND_MESSAGE_ERROR,peerId,error,channelName,channelType,messageType),error}},Skylink.prototype._closeDataChannel=function(peerId,channelName){var self=this;if(!self._dataChannels[peerId])return void log.warn([peerId,"RTCDataChannel",channelName||null,"Aborting closing Datachannels as Peer connection does not have Datachannel sessions"]);var closeFn=function(channelProp){var channelName=self._dataChannels[peerId][channelProp].channelName,channelType=self._dataChannels[peerId][channelProp].channelType;self._dataChannels[peerId][channelProp].readyState!==self.DATA_CHANNEL_STATE.CLOSED&&(log.debug([peerId,"RTCDataChannel",channelName,"Closing Datachannel"]),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.CLOSING,peerId,null,channelName,channelType,null),self._dataChannels[peerId][channelProp].channel.close(),delete self._dataChannels[peerId][channelProp])};if(channelName){if(!self._dataChannels[peerId][channelName])return void log.warn([peerId,"RTCDataChannel",channelName,"Aborting closing Datachannel as it does not exists"]);closeFn(channelName)}else for(var channelNameProp in self._dataChannels)self._dataChannels[peerId].hasOwnProperty(channelNameProp)&&self._dataChannels[peerId][channelNameProp]&&closeFn(channelNameProp)},Skylink.prototype.DATA_TRANSFER_DATA_TYPE={BINARY_STRING:"binaryString",ARRAY_BUFFER:"arrayBuffer",BLOB:"blob",STRING:"string"},Skylink.prototype._CHUNK_FILE_SIZE=49152,Skylink.prototype._MOZ_CHUNK_FILE_SIZE=12288,Skylink.prototype._BINARY_FILE_SIZE=65456,Skylink.prototype._MOZ_BINARY_FILE_SIZE=16384,Skylink.prototype._CHUNK_DATAURL_SIZE=1212,Skylink.prototype._base64ToBlob=function(dataURL){for(var byteString=atob(dataURL),ab=new ArrayBuffer(byteString.length),ia=new Uint8Array(ab),j=0;j<byteString.length;j++)ia[j]=byteString.charCodeAt(j);return new Blob([ab])},Skylink.prototype._blobToBase64=function(data,callback){var fileReader=new FileReader;fileReader.onload=function(){var base64BinaryString=fileReader.result.split(",")[1];callback(base64BinaryString)},fileReader.readAsDataURL(data)},Skylink.prototype._blobToArrayBuffer=function(data,callback){var fileReader=new FileReader;fileReader.onload=function(){callback(["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1?new Int8Array(fileReader.result):fileReader.result)},fileReader.readAsArrayBuffer(data)},Skylink.prototype._chunkBlobData=function(blob,chunkSize){var chunksArray=[],startCount=0,endCount=0,blobByteSize=blob.size;if(blobByteSize>chunkSize){for(;blobByteSize-1>endCount;)endCount=startCount+chunkSize,chunksArray.push(blob.slice(startCount,endCount)),startCount+=chunkSize;blobByteSize-(startCount+1)>0&&chunksArray.push(blob.slice(startCount,blobByteSize-1))}else chunksArray.push(blob);return chunksArray},Skylink.prototype._chunkDataURL=function(dataURL,chunkSize){var outputStr=dataURL,dataURLArray=[],startCount=0,endCount=0,dataByteSize=dataURL.size||dataURL.length;if(dataByteSize>chunkSize){for(;dataByteSize-1>endCount;)endCount=startCount+chunkSize,dataURLArray.push(outputStr.slice(startCount,endCount)),startCount+=chunkSize;dataByteSize-(startCount+1)>0&&chunksArray.push(outputStr.slice(startCount,dataByteSize-1))}else dataURLArray.push(outputStr);return dataURLArray},Skylink.prototype.DT_PROTOCOL_VERSION="0.1.0",Skylink.prototype.DATA_TRANSFER_TYPE={UPLOAD:"upload",DOWNLOAD:"download"},Skylink.prototype.DATA_TRANSFER_SESSION_TYPE={BLOB:"blob",DATA_URL:"dataURL"},Skylink.prototype.DATA_TRANSFER_STATE={UPLOAD_REQUEST:"request",UPLOAD_STARTED:"uploadStarted",DOWNLOAD_STARTED:"downloadStarted",REJECTED:"rejected",CANCEL:"cancel",ERROR:"error",UPLOADING:"uploading",DOWNLOADING:"downloading",UPLOAD_COMPLETED:"uploadCompleted",DOWNLOAD_COMPLETED:"downloadCompleted",USER_REJECTED:"userRejected",USER_UPLOAD_REQUEST:"userRequest"},Skylink.prototype._DC_PROTOCOL_TYPE={WRQ:"WRQ",ACK:"ACK",ERROR:"ERROR",CANCEL:"CANCEL",MESSAGE:"MESSAGE"},Skylink.prototype._SUPPORTED_WEB_AGENTS=["chrome","firefox","safari","IE","edge","opera","bowser","blink"],Skylink.prototype._dataTransfers={},Skylink.prototype.sendBlobData=function(data,timeout,targetPeerId,sendChunksAsBinary,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),transferInfo={name:null,size:null,chunkSize:self._CHUNK_FILE_SIZE,chunkType:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,dataType:self.DATA_TRANSFER_SESSION_TYPE.BLOB,mimeType:null,direction:self.DATA_TRANSFER_TYPE.UPLOAD,timeout:60,isPrivate:!1,percentage:0},emitErrorBeforeDataTransferFn=function(error){if(log.error(error),"function"==typeof callback){var transferErrors={};if(0===listOfPeers.length)transferErrors.self=new Error(error);else for(var i=0;i<listOfPeers.length;i++)transferErrors[listOfPeers[i]]=new Error(error);callback({transferId:null,transferInfo:transferInfo,listOfPeers:listOfPeers,transferErrors:transferErrors},null)}};if(listOfPeers.indexOf("MCU")>-1&&listOfPeers.splice(listOfPeers.indexOf("MCU"),1),"number"==typeof timeout?transferInfo.timeout=timeout:Array.isArray(timeout)?listOfPeers=timeout:timeout&&"string"==typeof timeout?listOfPeers=[timeout]:timeout&&"boolean"==typeof timeout?(transferInfo.chunkType=self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,transferInfo.chunkSize=self._BINARY_FILE_SIZE):"function"==typeof timeout&&(callback=timeout),Array.isArray(targetPeerId)?listOfPeers=targetPeerId:targetPeerId&&"string"==typeof targetPeerId?listOfPeers=[targetPeerId]:targetPeerId&&"boolean"==typeof targetPeerId?(transferInfo.chunkType=self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,transferInfo.chunkSize=self._BINARY_FILE_SIZE):"function"==typeof targetPeerId&&(callback=targetPeerId),sendChunksAsBinary&&"boolean"==typeof sendChunksAsBinary?(transferInfo.chunkType=self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,transferInfo.chunkSize=self._BINARY_FILE_SIZE):"function"==typeof sendChunksAsBinary&&(callback=sendChunksAsBinary),"firefox"===window.webrtcDetectedBrowser&&transferInfo.chunkType===self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING&&(transferInfo.chunkSize=self._MOZ_CHUNK_FILE_SIZE),self._hasMCU&&transferInfo.chunkType===self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER&&(log.warn("Binary data chunks transfer is not yet supported with MCU environment. Fallbacking to binary string data chunks transfer."),transferInfo.chunkType=self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,transferInfo.chunkSize=self._CHUNK_FILE_SIZE),transferInfo.chunkType===self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER&&"firefox"===window.webrtcDetectedBrowser&&(transferInfo.chunkType=self.DATA_TRANSFER_DATA_TYPE.BLOB,transferInfo.chunkSize=self._MOZ_BINARY_FILE_SIZE),!(data&&"object"==typeof data&&data instanceof Blob))return void emitErrorBeforeDataTransferFn("Provided data is not a Blob data");if(transferInfo.name=data.name||null,transferInfo.mimeType=data.type||null,data.size<1)return void emitErrorBeforeDataTransferFn("Provided data is not a valid Blob data.");if(transferInfo.size=data.size,!self._user)return void emitErrorBeforeDataTransferFn("Unable to send any blob data. User is not in Room.");if(0===listOfPeers.length)return void emitErrorBeforeDataTransferFn("Unable to send any blob data. There are no Peers to start data transfer with");if(!self._enableDataChannel)return void emitErrorBeforeDataTransferFn("Unable to send any blob data. Datachannel is disabled");var chunks=self._chunkBlobData(data,transferInfo.chunkSize);transferInfo.originalSize=transferInfo.size,transferInfo.chunkType===self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING&&(transferInfo.size=4*Math.ceil(transferInfo.size/3),transferInfo.chunkSize=4*Math.ceil(transferInfo.chunkSize/3)),self._startDataTransfer(chunks,transferInfo,listOfPeers,callback)},Skylink.prototype.sendURLData=function(data,timeout,targetPeerId,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),transferInfo={name:null,size:null,chunkSize:self._CHUNK_FILE_SIZE,chunkType:self.DATA_TRANSFER_DATA_TYPE.STRING,dataType:self.DATA_TRANSFER_SESSION_TYPE.DATA_URL,mimeType:null,direction:self.DATA_TRANSFER_TYPE.UPLOAD,timeout:60,isPrivate:!1,percentage:0},emitErrorBeforeDataTransferFn=function(error){if(log.error(error),"function"==typeof callback){var transferErrors={};if(0===listOfPeers.length)transferErrors.self=new Error(error);else for(var i=0;i<listOfPeers.length;i++)transferErrors[listOfPeers[i]]=new Error(error);callback({transferId:null,transferInfo:transferInfo,listOfPeers:listOfPeers,transferErrors:transferErrors},null)}};if(listOfPeers.indexOf("MCU")>-1&&listOfPeers.splice(listOfPeers.indexOf("MCU"),1),"number"==typeof timeout?transferInfo.timeout=timeout:Array.isArray(timeout)?listOfPeers=timeout:timeout&&"string"==typeof timeout?listOfPeers=[timeout]:"function"==typeof timeout&&(callback=timeout),Array.isArray(targetPeerId)?listOfPeers=targetPeerId:targetPeerId&&"string"==typeof targetPeerId?listOfPeers=[targetPeerId]:"function"==typeof targetPeerId&&(callback=targetPeerId),!data||"string"!=typeof data)return void emitErrorBeforeDataTransferFn("Provided data is not a dataURL");if(transferInfo.size=data.length||data.size,!self._user)return void emitErrorBeforeDataTransferFn("Unable to send any dataURL. User is not in Room.");if(0===listOfPeers.length)return void emitErrorBeforeDataTransferFn("Unable to send any dataURL. There are no Peers to start data transfer with");if(!self._enableDataChannel)return void emitErrorBeforeDataTransferFn("Unable to send any dataURL. Datachannel is disabled");var chunks=self._chunkDataURL(data,transferInfo.chunkSize);transferInfo.originalSize=transferInfo.size,self._startDataTransfer(chunks,transferInfo,listOfPeers,callback)},Skylink.prototype.respondBlobRequest=Skylink.prototype.acceptDataTransfer=function(peerId,transferId,accept){var self=this;if("string"!=typeof transferId&&"string"!=typeof peerId)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as data transfer ID or peer ID is not provided"]);if(!self._dataChannels[peerId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as Peer does not have any Datachannel connections"]);if(!self._dataTransfers[transferId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as invalid transfer ID is provided"]);var channelProp="main";if(self._dataChannels[peerId][transferId]&&(channelProp=transferId),accept){log.debug([peerId,"RTCDataChannel",transferId,"Accepted data transfer and starting ..."]);var dataChannelStateCbFn=function(state,evtPeerId,error){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD,message:new Error("Data transfer terminated as Peer Datachannel connection closed abruptly.")})};self.once("dataChannelState",dataChannelStateCbFn,function(state,evtPeerId,error,channelName,channelType){return self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]?evtPeerId===peerId&&("main"===channelProp?channelType===self.DATA_CHANNEL_STATE.MESSAGING:channelName===transferId)&&[self.DATA_CHANNEL_STATE.CLOSING,self.DATA_CHANNEL_STATE.CLOSED,self.DATA_CHANNEL_STATE.ERROR].indexOf(state)>-1:void self.off("dataChannelState",dataChannelStateCbFn)}),self.once("dataTransferState",function(){dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn),delete self._dataTransfers[transferId],self._dataChannels[peerId]&&("main"===channelProp&&self._dataChannels[peerId].main&&(self._dataChannels[peerId].main.transferId=null),channelProp===transferId&&self._closeDataChannel(peerId,transferId))},function(state,evtTransferId,evtPeerId){return evtTransferId===transferId&&evtPeerId===peerId&&[self.DATA_TRANSFER_STATE.ERROR,self.DATA_TRANSFER_STATE.CANCEL,self.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED].indexOf(state)>-1}),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:0},channelProp),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOAD_STARTED,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)}else log.warn([peerId,"RTCDataChannel",transferId,"Rejected data transfer and data transfer request has been aborted"]),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:-1},channelProp),"main"===channelProp&&self._dataChannels[peerId].main&&(self._dataChannels[peerId].main.transferId=null),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.USER_REJECTED,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error("Data transfer terminated as User has rejected data transfer request."),transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD}),delete self._dataTransfers[transferId]},Skylink.prototype.cancelBlobTransfer=Skylink.prototype.cancelDataTransfer=function(peerId,transferId){var self=this;if(!transferId||"string"!=typeof transferId)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as data transfer ID is not provided"]);if(!peerId||"string"!=typeof peerId)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as peer ID is not provided"]);if(!self._dataTransfers[transferId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as data transfer session does not exists."]);log.debug([peerId,"RTCDataChannel",transferId,"Canceling data transfer ..."]);var emitEventFn=function(peers,transferInfoPeerId){for(var i=0;i<peers.length;i++)self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.CANCEL,transferId,peers[i],self._getTransferInfo(transferId,transferInfoPeerId,!1,!1,!1),{transferType:self._dataTransfers[transferId].direction,message:new Error("User cancelled download transfer")})};if(self._hasMCU&&self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD){if(!self._dataChannels.MCU)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as Peer does not have any Datachannel connections"]);log.warn([peerId,"RTCDataChannel",transferId,"Aborting all data transfers to Peers"]),Object.keys(self._dataTransfers[transferId].peers.main).length>0&&self._sendMessageToDataChannel("MCU",{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.sid,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},"main"),Object.keys(self._dataTransfers[transferId].peers[transferId]).length>0&&self._sendMessageToDataChannel("MCU",{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.sid,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},transferId),emitEventFn(Object.keys(self._dataTransfers[transferId].peers.main).concat(Object.keys(self._dataTransfers[transferId].peers[transferId])))}else{var channelProp="main";if(!self._dataChannels[peerId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as Peer does not have any Datachannel connections"]);self._dataChannels[peerId][transferId]&&(channelProp=transferId),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.sid,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},channelProp),emitEventFn([peerId],peerId)}},Skylink.prototype.sendP2PMessage=function(message,targetPeerId){var listOfPeers=Object.keys(this._dataChannels),isPrivate=!1;if(Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),!this._inRoom||!this._user)return void log.error("Unable to send message as User is not in Room. ->",message);if(!this._enableDataChannel)return void log.error("Unable to send message as User does not have Datachannel enabled. ->",message);for(var i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];this._dataChannels[peerId]?"MCU"===peerId?(listOfPeers.splice(i,1),i--):this._hasMCU||(log.debug([peerId,"RTCDataChannel",null,"Sending "+(isPrivate?"private":"")+" P2P message to Peer"]),this._sendMessageToDataChannel(peerId,{type:this._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:isPrivate,sender:this._user.sid,target:peerId,data:message},"main")):(log.error([peerId,"RTCDataChannel",null,"Dropping of sending message to Peer as Datachannel connection does not exists"]),listOfPeers.splice(i,1),i--)}return 0===listOfPeers.length?void log.error("Unable to send message as there are no Peers to sent to.",message):(this._hasMCU&&(log.debug(["MCU","RTCDataChannel",null,"Broadcasting "+(isPrivate?"private":"")+" P2P message to Peers"]),this._sendMessageToDataChannel("MCU",{type:this._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:isPrivate,sender:this._user.sid,target:listOfPeers,data:message},"main")),void this._trigger("incomingMessage",{content:message,isPrivate:isPrivate,targetPeerId:targetPeerId||null,listOfPeers:listOfPeers,isDataChannel:!0,senderPeerId:this._user.sid},this._user.sid,this.getPeerInfo(),!0))},Skylink.prototype._startDataTransfer=function(chunks,transferInfo,listOfPeers,callback){var self=this,transferId=self._user.sid+"_"+(new Date).getTime(),transferErrors={},transferCompleted=[];if(transferInfo.name||(transferInfo.name=transferId),self._dataTransfers[transferId]=clone(transferInfo),self._dataTransfers[transferId].peers={},self._dataTransfers[transferId].peers.main={},self._dataTransfers[transferId].peers[transferId]={},self._dataTransfers[transferId].sessions={},self._dataTransfers[transferId].chunks=chunks,self._dataTransfers[transferId].enforceBSPeers=[],self._dataTransfers[transferId].enforcedBSInfo={},[self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,self.DATA_TRANSFER_DATA_TYPE.BLOB].indexOf(transferInfo.chunkType)>-1){for(var p=0;p<listOfPeers.length;p++){var agentName=((self._peerInformations[listOfPeers[p]]||{}).agent||{}).name||"";self._SUPPORTED_WEB_AGENTS.indexOf(agentName)===-1&&self._dataTransfers[transferId].enforceBSPeers.push(listOfPeers[p])}if(self._dataTransfers[transferId].enforceBSPeers.length>0){var bsChunkSize="firefox"===window.webrtcDetectedBrowser?self._MOZ_CHUNK_FILE_SIZE:self._CHUNK_FILE_SIZE,bsChunks=self._chunkBlobData(new Blob(chunks),bsChunkSize);self._dataTransfers[transferId].enforceBSInfo={chunkSize:4*Math.ceil(bsChunkSize/3),chunkType:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,size:4*Math.ceil(transferInfo.originalSize/3),chunks:bsChunks}}}for(var completeFn=function(peerId,error){transferCompleted.indexOf(peerId)>-1||(log.debug([peerId,"RTCDataChannel",transferId,"Data transfer result. Is errors present? ->"],error),transferCompleted.push(peerId),error&&(transferErrors[peerId]=new Error(error)),listOfPeers.length===transferCompleted.length&&(log.log([null,"RTCDataChannel",transferId,"Data transfer request completed"]),"function"==typeof callback&&(Object.keys(transferErrors).length>0?callback({transferId:transferId,transferInfo:self._getTransferInfo(transferId,peerId,!1,!0,!1),transferErrors:transferErrors,listOfPeers:listOfPeers},null):callback(null,{transferId:transferId,transferInfo:self._getTransferInfo(transferId,peerId,!1,!0,!1),listOfPeers:listOfPeers}))))},i=0;i<listOfPeers.length;i++){var MCUInteropStatus=self._startDataTransferToPeer(transferId,listOfPeers[i],completeFn,null,null);"boolean"==typeof MCUInteropStatus&&(MCUInteropStatus===!0?self._dataTransfers[transferId].peers.main[listOfPeers[i]]=!1:self._dataTransfers[transferId].peers[transferId][listOfPeers[i]]=!1)}self._hasMCU&&(Object.keys(self._dataTransfers[transferId].peers.main).length>0&&self._startDataTransferToPeer(transferId,"MCU",completeFn,"main",Object.keys(self._dataTransfers[transferId].peers.main)),Object.keys(self._dataTransfers[transferId].peers[transferId]).length>0&&self._startDataTransferToPeer(transferId,"MCU",completeFn,transferId,Object.keys(self._dataTransfers[transferId].peers[transferId])))},Skylink.prototype._startDataTransferToPeer=function(transferId,peerId,callback,channelProp,targetPeers){var self=this,peerConnectionStateCbFn=null,dataChannelStateCbFn=null,emitEventFn=function(cb){for(var peers=targetPeers||[peerId],i=0;i<peers.length;i++)cb(peers[i])},returnErrorBeforeTransferFn=function(error){var updatedError="MCU"===peerId?error.replace(/Peer/g,"MCU Peer"):error;emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!0,!1),{message:new Error(updatedError),transferType:self.DATA_TRANSFER_TYPE.UPLOAD})})},sendWRQFn=function(){var size=self._dataTransfers[transferId].size,chunkSize=self._dataTransfers[transferId].chunkSize,chunkType=self._dataTransfers[transferId].chunkType;self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1&&(log.warn([peerId,"RTCDataChannel",transferId,"Binary data chunks transfer is not yet supported with Peer connecting from Android, iOS and C++ SDK. Fallbacking to binary string data chunks transfer."]),size=self._dataTransfers[transferId].enforceBSInfo.size,chunkSize=self._dataTransfers[transferId].enforceBSInfo.chunkSize,chunkType=self._dataTransfers[transferId].enforceBSInfo.chunkType),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.WRQ,transferId:transferId,name:self._dataTransfers[transferId].name,size:size,originalSize:self._dataTransfers[transferId].originalSize,dataType:self._dataTransfers[transferId].dataType,mimeType:self._dataTransfers[transferId].mimeType,chunkType:chunkType,chunkSize:chunkSize,timeout:self._dataTransfers[transferId].timeout,isPrivate:self._dataTransfers[transferId].isPrivate,sender:self._user.sid,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,target:targetPeers?targetPeers:peerId},channelProp),emitEventFn(function(evtPeerId){self._trigger("incomingDataRequest",transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.USER_UPLOAD_REQUEST,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)})};if("MCU"!==peerId){var dataTransferStateCbFn=function(state,evtTransferId,evtPeerId,transferInfo,error){if(peerConnectionStateCbFn&&self.off("peerConnectionState",peerConnectionStateCbFn),dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn),channelProp&&(self._dataTransfers[transferId].peers[channelProp][peerId]=!0),state===self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED?callback(peerId,null):callback(peerId,error.message.message||error.message.toString()),self._hasMCU&&self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD){for(var broadcastedPeers=[self._dataTransfers[transferId].peers.main,self._dataTransfers[transferId].peers[transferId]],i=0;i<broadcastedPeers.length;i++){if(!broadcastedPeers[i])return;for(var bcPeerId in broadcastedPeers[i])if(broadcastedPeers[i].hasOwnProperty(bcPeerId)&&!broadcastedPeers[i][bcPeerId])return;
}delete self._dataTransfers[transferId],self._dataChannels.MCU&&(self._dataChannels.MCU.main&&(self._dataChannels.MCU.main.transferId=null),self._dataChannels.MCU[transferId]&&self._closeDataChannel("MCU",transferId))}else delete self._dataTransfers[transferId].sessions[peerId],0===Object.keys(self._dataTransfers[transferId]).length&&delete self._dataTransfers[transferId]};self.once("dataTransferState",dataTransferStateCbFn,function(state,evtTransferId,evtPeerId){return self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]?evtTransferId===transferId&&evtPeerId===peerId&&[self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,self.DATA_TRANSFER_STATE.ERROR,self.DATA_TRANSFER_STATE.CANCEL,self.DATA_TRANSFER_STATE.REJECTED].indexOf(state)>-1:void self.off("dataTransferState",dataTransferStateCbFn)})}if(!self._peerConnections[peerId])return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection does not exists.");if(!self._peerInformations[peerId])return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection does not exists.");if(self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.STABLE)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection is not stable.");if(!self._dataTransfers[transferId])return void returnErrorBeforeTransferFn("Unable to start data transfer as data transfer session is not in order.");if(!self._dataChannels[peerId]||!self._dataChannels[peerId].main)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel connection does not exists.");if(self._dataChannels[peerId].main.channel.readyState!==self.DATA_CHANNEL_STATE.OPEN)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel connection is not opened.");var agentName=(self._peerInformations[peerId].agent||{}).name||"",requireInterop=self._SUPPORTED_WEB_AGENTS.indexOf(agentName)===-1;return requireInterop&&self._dataTransfers[transferId].dataType===self.DATA_TRANSFER_SESSION_TYPE.DATA_URL?void returnErrorBeforeTransferFn("Unable to start data transfer as Peer do not support DATA_URL type of data transfers"):"MCU"!==peerId&&self._hasMCU?(channelProp=requireInterop?"main":transferId,peerConnectionStateCbFn=function(){returnErrorBeforeTransferFn("Data transfer terminated as Peer connection is not stable.")},self.once("peerConnectionState",peerConnectionStateCbFn,function(state,evtPeerId){return self._dataTransfers[transferId]?state!==self.PEER_CONNECTION_STATE.STABLE&&evtPeerId===peerId:void self.off("peerConnectionState",peerConnectionStateCbFn)}),requireInterop):(requireInterop||"main"===channelProp)&&self._dataChannels[peerId].main.transferId?void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel has a data transfer in-progress."):(self._dataTransfers[transferId].sessions[peerId]={timer:null,ackN:0},dataChannelStateCbFn=function(state,evtPeerId,error){self._dataTransfers[transferId].sessions[peerId].ackN>=self._dataTransfers[transferId].chunks.length-1||returnErrorBeforeTransferFn(error?error.message||error.toString():"Data transfer terminated as Peer Datachannel connection closed abruptly.")},self.once("dataChannelState",dataChannelStateCbFn,function(state,evtPeerId,error,channelName,channelType){return self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]?evtPeerId===peerId?state===self.DATA_CHANNEL_STATE.OPEN&&channelName===transferId&&channelType===self.DATA_CHANNEL_TYPE.DATA?(sendWRQFn(),!1):[self.DATA_CHANNEL_STATE.CREATE_ERROR,self.DATA_CHANNEL_STATE.ERROR,self.DATA_CHANNEL_STATE.CLOSING,self.DATA_CHANNEL_STATE.CLOSED].indexOf(state)>-1:void 0:void self.off("dataChannelState",dataChannelStateCbFn)}),void(requireInterop||"main"===channelProp?(self._dataChannels[peerId].main.transferId=transferId,sendWRQFn()):(channelProp=transferId,self._createDataChannel(peerId,transferId))))},Skylink.prototype._getTransferInfo=function(transferId,peerId,returnDataProp,hidePercentage,returnDataAtStart){if(!this._dataTransfers[transferId])return{};var transferInfo={name:this._dataTransfers[transferId].name,size:this._dataTransfers[transferId].size,dataType:this._dataTransfers[transferId].dataType||this.DATA_TRANSFER_SESSION_TYPE.BLOB,mimeType:this._dataTransfers[transferId].mimeType||null,chunkSize:this._dataTransfers[transferId].chunkSize,chunkType:this._dataTransfers[transferId].chunkType,timeout:this._dataTransfers[transferId].timeout,isPrivate:this._dataTransfers[transferId].isPrivate,direction:this._dataTransfers[transferId].direction};if(this._dataTransfers[transferId].originalSize?transferInfo.size=this._dataTransfers[transferId].originalSize:this._dataTransfers[transferId].chunkType===this.DATA_TRANSFER_DATA_TYPE.BINARY_STRING&&(transferInfo.size=Math.ceil(3*transferInfo.size/4)),!hidePercentage){if(transferInfo.percentage=0,!this._dataTransfers[transferId].sessions[peerId])return returnDataProp&&(transferInfo.data=null),transferInfo;if(this._dataTransfers[transferId].direction===this.DATA_TRANSFER_TYPE.DOWNLOAD)this._dataTransfers[transferId].sessions[peerId].receivedSize===this._dataTransfers[transferId].sessions[peerId].size?transferInfo.percentage=100:transferInfo.percentage=parseFloat((this._dataTransfers[transferId].sessions[peerId].receivedSize/this._dataTransfers[transferId].size*100).toFixed(2),10);else{var chunksLength=this._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?this._dataTransfers[transferId].enforceBSInfo.chunks.length:this._dataTransfers[transferId].chunks.length;this._dataTransfers[transferId].sessions[peerId].ackN===chunksLength?transferInfo.percentage=100:transferInfo.percentage=parseFloat((this._dataTransfers[transferId].sessions[peerId].ackN/chunksLength*100).toFixed(2),10)}returnDataProp&&("number"!=typeof returnDataAtStart?100===transferInfo.percentage?transferInfo.data=this._getTransferData(transferId):transferInfo.data=null:(transferInfo.percentage=returnDataAtStart,0===returnDataAtStart&&(transferInfo.data=this._getTransferData(transferId))))}return transferInfo},Skylink.prototype._getTransferData=function(transferId){if(!this._dataTransfers[transferId])return null;if(this._dataTransfers[transferId].dataType===this.DATA_TRANSFER_SESSION_TYPE.BLOB){var mimeType={name:this._dataTransfers[transferId].name};return this._dataTransfers[transferId].mimeType&&(mimeType.type=this._dataTransfers[transferId].mimeType),new Blob(this._dataTransfers[transferId].chunks,mimeType)}return this._dataTransfers[transferId].chunks.join("")},Skylink.prototype._handleDataTransferTimeoutForPeer=function(transferId,peerId,setPeerTO){var self=this;return self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]?(log.debug([peerId,"RTCDataChannel",transferId,"Clearing data transfer timer for Peer."]),self._dataTransfers[transferId].sessions[peerId].timer&&clearTimeout(self._dataTransfers[transferId].sessions[peerId].timer),self._dataTransfers[transferId].sessions[peerId].timer=null,void(setPeerTO&&(log.debug([peerId,"RTCDataChannel",transferId,"Setting data transfer timer for Peer."]),self._dataTransfers[transferId].sessions[peerId].timer=setTimeout(function(){if(!self._dataTransfers[transferId]||!self._dataTransfers[transferId].sessions[peerId])return void log.debug([peerId,"RTCDataChannel",transferId,"Data transfer already ended for Peer. Ignoring expired timeout."]);if(!self._user)return void log.debug([peerId,"RTCDataChannel",transferId,"User is not in Room. Ignoring expired timeout."]);if(!self._dataChannels[peerId])return void log.debug([peerId,"RTCDataChannel",transferId,"Datachannel connection does not exists. Ignoring expired timeout."]);log.error([peerId,"RTCDataChannel",transferId,"Data transfer response has timed out."]);var emitEventFn=function(cb){if("MCU"===peerId)for(var broadcastedPeers=[self._dataTransfers[transferId].peers.main,self._dataTransfers[transferId].peers[transferId]],i=0;i<broadcastedPeers.length;i++){if(!broadcastedPeers[i])return;for(var bcPeerId in broadcastedPeers[i])broadcastedPeers[i].hasOwnProperty(bcPeerId)&&!broadcastedPeers[i][bcPeerId]&&cb(bcPeerId)}else cb(peerId)},errorMsg="Connection Timeout. Longer than "+self._dataTransfers[transferId].timeout+" seconds. Connection is abolished.";self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ERROR,content:errorMsg,isUploadError:self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD,sender:self._user.sid,name:self._dataTransfers[transferId].name},self._dataChannels[peerId][transferId]?transferId:"main"),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD,message:new Error(errorMsg)})})},1e3*self._dataTransfers[transferId].timeout)))):void log.debug([peerId,"RTCDataChannel",transferId,"Data transfer does not exists for Peer. Ignoring timeout."])},Skylink.prototype._processDataChannelData=function(rawData,peerId,channelName,channelType){var self=this,channelProp=channelType===self.DATA_CHANNEL_TYPE.MESSAGING?"main":channelName,transferId="main"===channelProp?self._dataChannels[peerId].main.transferId:channelName;if(!self._peerConnections[peerId])return void log.warn([peerId,"RTCDataChannel",channelName,"Dropping data received from Peer as connection is not present ->"],rawData);if(!self._dataChannels[peerId]||!self._dataChannels[peerId][channelProp])return void log.warn([peerId,"RTCDataChannel",channelName,"Dropping data received from Peer as Datachannel connection is not present ->"],rawData);if("string"==typeof rawData)try{var protocolData=JSON.parse(rawData);if(log.debug([peerId,"RTCDataChannel",channelProp,"Received protocol message ->"],protocolData),[self._DC_PROTOCOL_TYPE.ACK,self._DC_PROTOCOL_TYPE.ERROR,self._DC_PROTOCOL_TYPE.CANCEL].indexOf(protocolData.type)>-1&&!(transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]))return void log.warn([peerId,"RTCDataChannel",channelProp,"Discarded protocol message as data transfer session is not present ->"],protocolData);switch(protocolData.type){case self._DC_PROTOCOL_TYPE.WRQ:if(transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId])return log.warn([peerId,"RTCDataChannel",channelProp,"Rejecting bidirectional data transfer request as it is currently not supported in the SDK"]),void self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,ackN:-1,sender:self._user.sid},channelProp);self._WRQProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.ACK:self._ACKProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.ERROR:self._ERRORProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.CANCEL:self._CANCELProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.MESSAGE:self._MESSAGEProtocolHandler(peerId,protocolData,channelProp);break;default:log.warn([peerId,"RTCDataChannel",channelProp,"Discarded unknown protocol message ->"],protocolData)}}catch(error){if(rawData.indexOf("{")>-1&&rawData.indexOf("}")>0)throw log.error([peerId,"RTCDataChannel",channelProp,"Received error ->"],error),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.ERROR,peerId,error,channelName,channelType,null),error;if(!(transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]))return void log.warn([peerId,"RTCDataChannel",channelProp,"Discarded data chunk as data transfer session is not present ->"],rawData);if(self._dataTransfers[transferId].chunks[self._dataTransfers[transferId].sessions[peerId].ackN])return void log.warn([peerId,"RTCDataChannel",transferId,"Dropping data chunk as it has already been added ->"],rawData);self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING;if(self._dataTransfers[transferId].dataType===self.DATA_TRANSFER_SESSION_TYPE.DATA_URL)log.debug([peerId,"RTCDataChannel",channelProp,"Received string data chunk @"+self._dataTransfers[transferId].sessions[peerId].ackN+" with size ->"],rawData.length||rawData.size),self._DATAProtocolHandler(peerId,rawData,self.DATA_TRANSFER_DATA_TYPE.STRING,rawData.length||rawData.size||0,channelProp);else{var removeSpaceData=rawData.replace(/\s|\r|\n/g,"");log.debug([peerId,"RTCDataChannel",channelProp,"Received binary string data chunk @"+self._dataTransfers[transferId].sessions[peerId].ackN+" with size ->"],removeSpaceData.length||removeSpaceData.size),self._DATAProtocolHandler(peerId,self._base64ToBlob(removeSpaceData),self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,removeSpaceData.length||removeSpaceData.size||0,channelProp)}}else if(rawData instanceof Blob)log.debug([peerId,"RTCDataChannel",channelProp,"Received blob data chunk @"+self._dataTransfers[transferId].sessions[peerId].ackN+" with size ->"],rawData.size),self._DATAProtocolHandler(peerId,rawData,self.DATA_TRANSFER_DATA_TYPE.BLOB,rawData.size,channelProp);else{var byteArray=rawData;rawData.constructor&&"Array"===rawData.constructor.name&&(byteArray=new Int8Array(rawData));var blob=new Blob([byteArray]);log.debug([peerId,"RTCDataChannel",channelProp,"Received arraybuffer data chunk @"+self._dataTransfers[transferId].sessions[peerId].ackN+" with size ->"],blob.size),self._DATAProtocolHandler(peerId,blob,self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,blob.size,channelProp)}},Skylink.prototype._WRQProtocolHandler=function(peerId,data,channelProp){var self=this,transferId="main"===channelProp?data.transferId||peerId+"_"+(new Date).getTime():channelProp,senderPeerId=data.sender||peerId;self._dataTransfers[transferId]={name:data.name||transferId,size:data.size||0,chunkSize:data.chunkSize,originalSize:data.originalSize||0,timeout:data.timeout||60,isPrivate:!!data.isPrivate,senderPeerId:data.sender||peerId,dataType:data.dataType||self.DATA_TRANSFER_SESSION_TYPE.BLOB,mimeType:data.mimeType||null,chunkType:data.chunkType||self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,direction:self.DATA_TRANSFER_TYPE.DOWNLOAD,chunks:[],sessions:{}},self._dataChannels[peerId][channelProp].transferId=transferId,self._dataTransfers[transferId].sessions[peerId]={timer:null,ackN:0,receivedSize:0},self._trigger("incomingDataRequest",transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!1),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_REQUEST,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)},Skylink.prototype._ACKProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp,senderPeerId=data.sender||peerId;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping triggering of ACK event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&!self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(senderPeerId)};if(data.ackN>-1){if(0===data.ackN)emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_STARTED,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,0),null)});else if(self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?data.ackN===self._dataTransfers[transferId].enforceBSInfo.chunks.length:data.ackN===self._dataTransfers[transferId].chunks.length)return self._dataTransfers[transferId].sessions[peerId].ackN=data.ackN,emitEventFn(function(evtPeerId){self._trigger("incomingData",self._getTransferData(transferId),transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,100),null)}),void(self._dataChannels[peerId][channelProp]&&(self._dataChannels[peerId][channelProp].transferId=null,"main"!==channelProp&&self._closeDataChannel(peerId,channelProp)));var uploadFn=function(chunk){self._sendMessageToDataChannel(peerId,chunk,channelProp,!0),data.ackN<self._dataTransfers[transferId].chunks.length&&emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOADING,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)}),self._handleDataTransferTimeoutForPeer(transferId,peerId,!0)};self._dataTransfers[transferId].sessions[peerId].ackN=data.ackN,self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?self._blobToBase64(self._dataTransfers[transferId].enforceBSInfo.chunks[data.ackN],uploadFn):self._dataTransfers[transferId].chunkType===self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING?self._blobToBase64(self._dataTransfers[transferId].chunks[data.ackN],uploadFn):self._dataTransfers[transferId].chunkType===self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER?self._blobToArrayBuffer(self._dataTransfers[transferId].chunks[data.ackN],uploadFn):uploadFn(self._dataTransfers[transferId].chunks[data.ackN])}else self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.REJECTED,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error("Data transfer terminated as Peer has rejected data transfer request"),transferType:self.DATA_TRANSFER_TYPE.UPLOAD})},Skylink.prototype._MESSAGEProtocolHandler=function(peerId,data,channelProp){var senderPeerId=data.sender||peerId;log.log([senderPeerId,"RTCDataChannel",channelProp,"Received P2P message from peer:"],data),this._trigger("incomingMessage",{content:data.data,isPrivate:data.isPrivate,isDataChannel:!0,targetPeerId:this._user.sid,senderPeerId:senderPeerId},senderPeerId,this.getPeerInfo(senderPeerId),!1)},Skylink.prototype._ERRORProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp,senderPeerId=data.sender||peerId;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping triggering of ERROR event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&!self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(senderPeerId)};log.error([peerId,"RTCDataChannel",channelProp,"Received an error from peer ->"],data),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,evtPeerId,self._getTransferInfo(transferId,peerID,!0,!1,!1),{message:new Error(data.content),transferType:self._dataTransfers[transferId].direction})})},Skylink.prototype._CANCELProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping triggering of CANCEL event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&!self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(peerId)};log.error([peerId,"RTCDataChannel",channelProp,"Received data transfer termination from peer ->"],data),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.CANCEL,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error(data.content||"Peer has terminated data transfer."),transferType:self._dataTransfers[transferId].direction})})},Skylink.prototype._DATAProtocolHandler=function(peerId,chunk,chunkType,chunkSize,channelProp){var self=this,transferId=channelProp,senderPeerId=peerId;return"main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._dataTransfers[transferId].senderPeerId&&(senderPeerId=self._dataTransfers[transferId].senderPeerId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1),self._dataTransfers[transferId].chunkType=chunkType,self._dataTransfers[transferId].sessions[peerId].receivedSize+=chunkSize,self._dataTransfers[transferId].chunks[self._dataTransfers[transferId].sessions[peerId].ackN]=chunk,self._dataTransfers[transferId].sessions[peerId].receivedSize===self._dataTransfers[transferId].size?(log.log([peerId,"RTCDataChannel",channelProp,"Data transfer has been completed"]),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:self._dataTransfers[transferId].sessions[peerId].ackN+1},channelProp),self._trigger("incomingData",self._getTransferData(transferId),transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),null),void self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)):(self._dataTransfers[transferId].sessions[peerId].ackN+=1,self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:self._dataTransfers[transferId].sessions[peerId].ackN},channelProp),self._handleDataTransferTimeoutForPeer(transferId,peerId,!0),void self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOADING,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null))},Skylink.prototype.CANDIDATE_GENERATION_STATE={NEW:"new",GATHERING:"gathering",COMPLETED:"completed"},Skylink.prototype.CANDIDATE_PROCESSING_STATE={RECEIVED:"received",DROPPED:"dropped",BUFFERED:"buffered",PROCESSING:"processing",PROCESS_SUCCESS:"processSuccess",PROCESS_ERROR:"processError"},Skylink.prototype._peerCandidatesQueue={},Skylink.prototype._gatheredCandidates={},Skylink.prototype._filterCandidatesType={host:!1,srflx:!1,relay:!1},Skylink.prototype._onIceCandidate=function(targetMid,candidate){var self=this,pc=self._peerConnections[targetMid];if(!pc)return void log.warn([targetMid,"RTCIceCandidate",null,"Ignoring of ICE candidate event as Peer connection does not exists ->"],candidate);if(candidate.candidate){pc.gathering||(log.log([targetMid,"RTCIceCandidate",null,"ICE gathering has started."]),pc.gathering=!0,self._trigger("candidateGenerationState",self.CANDIDATE_GENERATION_STATE.GATHERING,targetMid));var candidateType=candidate.candidate.split(" ")[7];if(log.debug([targetMid,"RTCIceCandidate",candidateType,"Generated ICE candidate ->"],candidate),self._filterCandidatesType[candidateType]){if(!self._hasMCU||!self._forceTURN)return void log.warn([targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate as it matches ICE candidate filtering flag ->"],candidate);log.warn([targetMid,"RTCIceCandidate",candidateType,"Not dropping of sending ICE candidate as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured ->"],candidate)}if(self._gatheredCandidates[targetMid]||(self._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),self._gatheredCandidates[targetMid].sending[candidateType].push({sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex,candidate:candidate.candidate}),!(self._enableIceTrickle&&self._peerInformations[targetMid]&&self._peerInformations[targetMid].config.enableIceTrickle))return void log.warn([targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate as trickle ICE is disabled ->"],candidate);log.debug([targetMid,"RTCIceCandidate",candidateType,"Sending ICE candidate ->"],candidate),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.CANDIDATE,label:candidate.sdpMLineIndex,id:candidate.sdpMid,candidate:candidate.candidate,mid:self._user.sid,target:targetMid,rid:self._room.id})}else if(log.log([targetMid,"RTCIceCandidate",null,"ICE gathering has completed."]),pc.gathering=!1,self._trigger("candidateGenerationState",self.CANDIDATE_GENERATION_STATE.COMPLETED,targetMid),!(self._enableIceTrickle&&self._peerInformations[targetMid]&&self._peerInformations[targetMid].config.enableIceTrickle)){var sessionDescription=self._peerConnections[targetMid].localDescription;if(!(sessionDescription&&sessionDescription.type&&sessionDescription.sdp))return void log.warn([targetMid,"RTCSessionDescription",null,"Not sending any session description after ICE gathering completed as it is not present."]);self._sendChannelMessage({type:sessionDescription.type,sdp:self._addSDPMediaStreamTrackIDs(targetMid,sessionDescription),mid:self._user.sid,userInfo:self._getUserInfo(),target:targetMid,rid:self._room.id})}},Skylink.prototype._addIceCandidateToQueue=function(targetMid,canId,candidate){var candidateType=candidate.candidate.split(" ")[7];log.debug([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Buffering ICE candidate."]),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.BUFFERED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[],this._peerCandidatesQueue[targetMid].push([canId,candidate])},Skylink.prototype._addIceCandidateFromQueue=function(targetMid){this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[];for(var i=0;i<this._peerCandidatesQueue[targetMid].length;i++){var canArray=this._peerCandidatesQueue[targetMid][i],candidateType=canArray[1].candidate.split(" ")[7];log.debug([targetMid,"RTCIceCandidate",canArray[0]+":"+candidateType,"Adding buffered ICE candidate."]),this._addIceCandidate(targetMid,canArray[0],canArray[1])}delete this._peerCandidatesQueue[targetMid]},Skylink.prototype._addIceCandidate=function(targetMid,canId,candidate){var self=this,candidateType=candidate.candidate.split(" ")[7],onSuccessCbFn=function(){log.log([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Added ICE candidate successfully."]),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESS_SUCCESS,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null)},onErrorCbFn=function(error){log.error([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Failed adding ICE candidate ->"],error),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESS_ERROR,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},error)};return log.debug([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Adding ICE candidate."]),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESSING,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),self._peerConnections[targetMid]&&self._peerConnections[targetMid].signalingState!==self.PEER_CONNECTION_STATE.CLOSED?void self._peerConnections[targetMid].addIceCandidate(candidate,onSuccessCbFn,onErrorCbFn):(log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping ICE candidate as Peer connection does not exists or is closed"]),void self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Failed processing ICE candidate as Peer connection does not exists or is closed.")))},Skylink.prototype.ICE_CONNECTION_STATE={STARTING:"starting",CHECKING:"checking",CONNECTED:"connected",COMPLETED:"completed",CLOSED:"closed",FAILED:"failed",TRICKLE_FAILED:"trickleFailed",DISCONNECTED:"disconnected"},Skylink.prototype.TURN_TRANSPORT={UDP:"udp",TCP:"tcp",ANY:"any",NONE:"none",ALL:"all"},Skylink.prototype._enableIceTrickle=!0,Skylink.prototype._enableSTUN=!0,Skylink.prototype._enableTURN=!0,Skylink.prototype._usePublicSTUN=!0,Skylink.prototype._TURNTransport="any",Skylink.prototype._ICEConnectionFailures={},Skylink.prototype._setIceServers=function(givenConfig){var givenIceServers=clone(givenConfig.iceServers),iceServersList={},newIceServers=[],useTURNSSLProtocol=!1,useTURNSSLPort=!1;this._forceTURNSSL&&("chrome"===window.webrtcDetectedBrowser||"safari"===window.webrtcDetectedBrowser||"IE"===window.webrtcDetectedBrowser?(useTURNSSLProtocol=!0,useTURNSSLPort=!1):useTURNSSLPort=!0),log.log("TURN server connections SSL configuration",{useTURNSSLProtocol:useTURNSSLProtocol,useTURNSSLPort:useTURNSSLPort});var i,pushIceServer=function(username,credential,url,index){iceServersList[username]||(iceServersList[username]={}),iceServersList[username][credential]||(iceServersList[username][credential]=[]),iceServersList[username][credential].indexOf(url)===-1&&("number"==typeof index?iceServersList[username][credential].splice(index,0,url):iceServersList[username][credential].push(url))};for(i=0;i<givenIceServers.length;i++){var server=givenIceServers[i];if("string"==typeof server.url){if(0===server.url.indexOf("stun")){if(!this._enableSTUN){log.warn("Ignoring STUN server provided at index "+i,clone(server));continue}if(!this._usePublicSTUN&&server.url.indexOf("temasys")===-1){log.warn("Ignoring public STUN server provided at index "+i,clone(server));continue}}else if(0===server.url.indexOf("turn")){if(!this._enableTURN){log.warn("Ignoring TURN server provided at index "+i,clone(server));continue}if(server.url.indexOf(":443")===-1&&useTURNSSLPort){log.log("Ignoring TURN Server (non-SSL port) provided at index "+i,clone(server));continue}if(useTURNSSLProtocol){var parts=server.url.split(":");parts[0]="turns",server.url=parts.join(":")}}if(server.url.indexOf("@")>0){var protocolParts=server.url.split(":"),urlParts=protocolParts[1].split("@");server.username=urlParts[0],server.url=protocolParts[0]+":"+urlParts[1],protocolParts[2]&&(server.url+=":"+protocolParts[2])}var username="string"==typeof server.username?server.username:"none",credential="string"==typeof server.credential?server.credential:"none";if(0===server.url.indexOf("turn"))if(this._TURNTransport===this.TURN_TRANSPORT.ANY)pushIceServer(username,credential,server.url);else{var rawUrl=server.url;if(rawUrl.indexOf("?transport=")>0&&(rawUrl=rawUrl.split("?transport=")[0]),this._TURNTransport===this.TURN_TRANSPORT.NONE)pushIceServer(username,credential,rawUrl);else if(this._TURNTransport===this.TURN_TRANSPORT.UDP)pushIceServer(username,credential,rawUrl+"?transport=udp");else if(this._TURNTransport===this.TURN_TRANSPORT.TCP)pushIceServer(username,credential,rawUrl+"?transport=tcp");else{if(this._TURNTransport!==this.TURN_TRANSPORT.ALL){log.warn('Invalid TURN transport option "'+this._TURNTransport+'". Ignoring TURN server at index'+i,clone(server));continue}pushIceServer(username,credential,rawUrl+"?transport=tcp"),pushIceServer(username,credential,rawUrl+"?transport=udp")}}else pushIceServer(username,credential,server.url)}else log.warn("Ignoring ICE server provided at index "+i,clone(server))}this._enableSTUN&&this._usePublicSTUN&&"firefox"===window.webrtcDetectedBrowser&&pushIceServer("none","none","stun:stun.services.mozilla.com",0);var hasUrlsSupport=!1;"chrome"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>34&&(hasUrlsSupport=!0),"firefox"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>38&&(hasUrlsSupport=!0),"opera"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>31&&(hasUrlsSupport=!0),
"safari"!==window.webrtcDetectedBrowser&&"IE"!==window.webrtcDetectedBrowser||(hasUrlsSupport=!0);for(var serverUsername in iceServersList)if(iceServersList.hasOwnProperty(serverUsername))for(var serverCred in iceServersList[serverUsername])if(iceServersList[serverUsername].hasOwnProperty(serverCred))if(hasUrlsSupport){var urlsItem={urls:iceServersList[serverUsername][serverCred]};"none"!==serverUsername&&(urlsItem.username=serverUsername),"none"!==serverCred&&(urlsItem.credential=serverCred),newIceServers.push(urlsItem)}else for(var j=0;j<iceServersList[serverUsername][serverCred].length;j++){var urlItem={url:iceServersList[serverUsername][serverCred][j]};"none"!==serverUsername&&(urlItem.username=serverUsername),"none"!==serverCred&&(urlItem.credential=serverCred),newIceServers.push(urlItem)}return log.log("Output iceServers configuration:",newIceServers),{iceServers:newIceServers}},Skylink.prototype.PEER_CONNECTION_STATE={STABLE:"stable",HAVE_LOCAL_OFFER:"have-local-offer",HAVE_REMOTE_OFFER:"have-remote-offer",CLOSED:"closed"},Skylink.prototype.GET_CONNECTION_STATUS_STATE={RETRIEVING:0,RETRIEVE_SUCCESS:1,RETRIEVE_ERROR:-1},Skylink.prototype.SERVER_PEER_TYPE={MCU:"mcu"},Skylink.prototype._retryCounters={},Skylink.prototype._peerConnections={},Skylink.prototype.refreshConnection=function(targetPeerId,iceRestart,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),doIceRestart=!1;Array.isArray(targetPeerId)?listOfPeers=targetPeerId:"string"==typeof targetPeerId?listOfPeers=[targetPeerId]:"boolean"==typeof targetPeerId?doIceRestart=targetPeerId:"function"==typeof targetPeerId&&(callback=targetPeerId),"boolean"==typeof iceRestart?doIceRestart=iceRestart:"function"==typeof iceRestart&&(callback=iceRestart);var emitErrorForPeersFn=function(error){if(log.error(error),"function"==typeof callback){var listOfPeerErrors={};if(0===listOfPeers.length)listOfPeerErrors.self=new Error(error);else for(var i=0;i<listOfPeers.length;i++)listOfPeerErrors[listOfPeers[i]]=new Error(error);callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null)}};return 0===listOfPeers.length?void emitErrorForPeersFn("There is currently no peer connections to restart"):void self._throttle(function(runFn){!runFn&&self._hasMCU?emitErrorForPeersFn("Unable to run as throttle interval has not reached (5s)."):self._refreshPeerConnection(listOfPeers,doIceRestart,callback)},"restartConnection",5e3)},Skylink.prototype._refreshPeerConnection=function(listOfPeers,doIceRestart,callback){var self=this,listOfPeerRestarts=[],error="",listOfPeerRestartErrors={},refreshSinglePeerCallback=function(peerId){return function(error){listOfPeerRestarts.indexOf(peerId)===-1&&(error&&(log.error([peerId,"RTCPeerConnection",null,"Failed restarting for peer"],error),listOfPeerRestartErrors[peerId]=error),listOfPeerRestarts.push(peerId)),listOfPeerRestarts.length===listOfPeers.length&&"function"==typeof callback&&(log.log([null,"PeerConnection",null,"Invoked all peers to restart. Firing callback"]),Object.keys(listOfPeerRestartErrors).length>0?callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null):callback(null,{listOfPeers:listOfPeers}))}},refreshSinglePeer=function(peerId,peerCallback){return self._peerConnections[peerId]?(log.log([peerId,"PeerConnection",null,"Restarting peer connection"]),void self._restartPeerConnection(peerId,doIceRestart,peerCallback)):(error="There is currently no existing peer connection made with the peer. Unable to restart connection",log.error([peerId,null,null,error]),void(listOfPeerRestartErrors[peerId]=new Error(error)))};if(self._hasMCU)self._restartMCUConnection(callback);else{var i;for(i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];Object.keys(self._peerConnections).indexOf(peerId)>-1?refreshSinglePeer(peerId,refreshSinglePeerCallback(peerId)):(error="Peer connection with peer does not exists. Unable to restart",log.error([peerId,"PeerConnection",null,error]),listOfPeerRestartErrors[peerId]=new Error(error)),i===listOfPeers.length-1&&Object.keys(listOfPeerRestartErrors).length>0&&"function"==typeof callback&&callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null)}}},Skylink.prototype.getConnectionStatus=function(targetPeerId,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),listOfPeerStats={},listOfPeerErrors={};if(Array.isArray(targetPeerId)?listOfPeers=targetPeerId:"string"==typeof targetPeerId&&targetPeerId?listOfPeers=[targetPeerId]:"function"==typeof targetPeerId&&(callback=targetPeerId,targetPeerId=void 0),0===listOfPeers.length)return listOfPeerErrors.self=new Error("There is currently no peer connections to retrieve connection status"),log.error([null,"RTCStatsReport",null,"Retrieving request failure ->"],listOfPeerErrors.self),void("function"==typeof callback&&callback({listOfPeers:listOfPeers,retrievalErrors:listOfPeerErrors,connectionStats:listOfPeerStats},null));for(var completedTaskCounter=[],checkCompletedFn=function(peerId){completedTaskCounter.indexOf(peerId)===-1&&completedTaskCounter.push(peerId),completedTaskCounter.length===listOfPeers.length&&"function"==typeof callback&&(Object.keys(listOfPeerErrors).length>0?callback({listOfPeers:listOfPeers,retrievalErrors:listOfPeerErrors,connectionStats:listOfPeerStats},null):callback(null,{listOfPeers:listOfPeers,connectionStats:listOfPeerStats}))},statsFn=function(peerId){log.debug([peerId,"RTCStatsReport",null,"Retrieivng connection status"]);var pc=self._peerConnections[peerId],result={raw:null,connection:{iceConnectionState:pc.iceConnectionState,iceGatheringState:pc.iceGatheringState,signalingState:pc.signalingState,remoteDescription:{type:pc.remoteDescription?pc.remoteDescription.type||null:null,sdp:pc.remoteDescription?pc.remoteDescription.sdp||null:null},localDescription:{type:pc.localDescription?pc.localDescription.type||null:null,sdp:pc.localDescription?pc.localDescription.sdp||null:null},candidates:clone(self._gatheredCandidates[peerId]||{sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),dataChannels:{}},audio:{sending:{ssrc:null,bytes:0,packets:0,packetsLost:0,rtt:0,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.localDescription,"audio"),inputLevel:null,echoReturnLoss:null,echoReturnLossEnhancement:null},receiving:{ssrc:null,bytes:0,packets:0,packetsLost:0,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"audio"),outputLevel:null}},video:{sending:{ssrc:null,bytes:0,packets:0,packetsLost:0,rtt:0,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.localDescription,"video"),frameWidth:null,frameHeight:null,framesInput:null,frames:null,frameRateMean:null,frameRateStdDev:null,framesDropped:null,nacks:null,plis:null,firs:null},receiving:{ssrc:null,bytes:0,packets:0,packetsLost:0,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"video"),frameWidth:null,frameHeight:null,framesDecoded:null,framesOutput:null,frames:null,frameRateMean:null,frameRateStdDev:null,nacks:null,plis:null,firs:null}},selectedCandidate:{local:{ipAddress:null,candidateType:null,portNumber:null,transport:null},remote:{ipAddress:null,candidateType:null,portNumber:null,transport:null}}};for(var channelProp in self._dataChannels[peerId])self._dataChannels[peerId].hasOwnProperty(channelProp)&&self._dataChannels[peerId][channelProp]&&(result.connection.dataChannels[self._dataChannels[peerId][channelProp].channel.label]={label:self._dataChannels[peerId][channelProp].channel.label,readyState:self._dataChannels[peerId][channelProp].channel.readyState,channelType:"main"===channelProp?self.DATA_CHANNEL_TYPE.MESSAGING:self.DATA_CHANNEL_TYPE.DATA,currentTransferId:self._dataChannels[peerId][channelProp].transferId||null});var loopFn=function(obj,fn){for(var prop in obj)obj.hasOwnProperty(prop)&&obj[prop]&&fn(obj[prop],prop)},formatCandidateFn=function(candidateDirType,candidate){result.selectedCandidate[candidateDirType].ipAddress=candidate.ipAddress,result.selectedCandidate[candidateDirType].candidateType=candidate.candidateType,result.selectedCandidate[candidateDirType].portNumber="number"!=typeof candidate.portNumber?parseInt(candidate.portNumber,10)||null:candidate.portNumber,result.selectedCandidate[candidateDirType].transport=candidate.transport};pc.getStats(null,function(stats){if(log.debug([peerId,"RTCStatsReport",null,"Retrieval success ->"],stats),result.raw=stats,"firefox"===window.webrtcDetectedBrowser)loopFn(stats,function(obj,prop){var dirType="";0===prop.indexOf("inbound_rtp")||0===prop.indexOf("outbound_rtp")?(dirType=0===prop.indexOf("inbound_rtp")?"receiving":"sending",result[obj.mediaType][dirType].bytes="sending"===dirType?obj.bytesSent:obj.bytesReceived,result[obj.mediaType][dirType].packets="sending"===dirType?obj.packetsSent:obj.packetsReceived,result[obj.mediaType][dirType].ssrc=obj.ssrc,"receiving"===dirType&&(result[obj.mediaType][dirType].packetsLost=obj.packetsLost||0,result[obj.mediaType][dirType].jitter=obj.jitter||0),"video"===obj.mediaType&&(result.video[dirType].frameRateMean=obj.framerateMean||0,result.video[dirType].frameRateStdDev=obj.framerateStdDev||0,"sending"===dirType&&(result.video.sending.framesDropped=obj.framesDropped||0))):0===prop.indexOf("inbound_rtcp")||0===prop.indexOf("outbound_rtcp")?(dirType=0===prop.indexOf("inbound_rtp")?"receiving":"sending","sending"===dirType&&(result[obj.mediaType].sending.rtt=obj.mozRtt||0,result[obj.mediaType].sending.packetsLost=obj.packetsLost||0,result[obj.mediaType].sending.jitter=obj.jitter||0)):obj.nominated&&obj.selected&&(formatCandidateFn("remote",stats[obj.remoteCandidateId]),formatCandidateFn("local",stats[obj.localCandidateId]))});else if("edge"===window.webrtcDetectedBrowser){if(pc.getRemoteStreams().length>0){var tracks=pc.getRemoteStreams()[0].getTracks();loopFn(tracks,function(track){loopFn(stats,function(obj,prop){"track"===obj.type&&obj.trackIdentifier===track.id&&loopFn(stats,function(streamObj){if(streamObj.associateStatsId===obj.id&&["outboundrtp","inboundrtp"].indexOf(streamObj.type)>-1){var dirType="outboundrtp"===streamObj.type?"sending":"receiving";result[track.kind][dirType].bytes="sending"===dirType?streamObj.bytesSent:streamObj.bytesReceived,result[track.kind][dirType].packets="sending"===dirType?streamObj.packetsSent:streamObj.packetsReceived,result[track.kind][dirType].packetsLost=streamObj.packetsLost||0,result[track.kind][dirType].ssrc=parseInt(streamObj.ssrc||"0",10),"sending"===dirType&&(result[track.kind].sending.rtt=obj.roundTripTime||0)}})})})}}else{var reportedCandidate=!1;loopFn(stats,function(obj,prop){if(0===prop.indexOf("ssrc_")){var dirType=prop.indexOf("_recv")>0?"receiving":"sending";obj.mediaType||(obj.mediaType=obj.hasOwnProperty("audioOutputLevel")||obj.hasOwnProperty("audioInputLevel")?"audio":"video"),result[obj.mediaType][dirType].bytes=parseInt(("receiving"===dirType?obj.bytesReceived:obj.bytesSent)||"0",10),result[obj.mediaType][dirType].packets=parseInt(("receiving"===dirType?obj.packetsReceived:obj.packetsSent)||"0",10),result[obj.mediaType][dirType].ssrc=parseInt(obj.ssrc||"0",10),result[obj.mediaType][dirType].packetsLost=parseInt(obj.packetsLost||"0",10),result[obj.mediaType][dirType].jitter=parseInt(obj.googJitterReceived||"0",10),result[obj.mediaType][dirType].jitterBufferMs=parseInt(obj.googJitterBufferMs||"0",10),result[obj.mediaType][dirType].codec&&(result[obj.mediaType][dirType].codec.implementation=obj.codecImplementationName||null,obj.googCodecName&&(result[obj.mediaType][dirType].codec.name=obj.googCodecName)),"sending"===dirType&&(result[obj.mediaType].sending.rtt=parseInt(obj.googRtt||"0",10)),"video"===obj.mediaType?(result.video[dirType].frameWidth=parseInt(("receiving"===dirType?obj.googFrameWidthReceived:obj.googFrameWidthSent)||"0",10),result.video[dirType].frameHeight=parseInt(("receiving"===dirType?obj.googFrameHeightReceived:obj.googFrameHeightSent)||"0",10),result.video[dirType].frames=parseInt(("receiving"===dirType?obj.googFrameRateReceived:obj.googFrameRateSent)||"0",10),result.video[dirType].nacks=parseInt(("receiving"===dirType?obj.googNacksReceived:obj.googNacksSent)||"0",10),result.video[dirType].plis=parseInt(("receiving"===dirType?obj.googPlisReceived:obj.googPlisSent)||"0",10),result.video[dirType].firs=parseInt(("receiving"===dirType?obj.googFirsReceived:obj.googFirsSent)||"0",10),"receiving"===dirType?(result.video[dirType].framesDecoded=parseInt(obj.googFrameRateDecoded||"0",10),result.video[dirType].framesOutput=parseInt(obj.googFrameRateOutput||"0",10)):result.video[dirType].framesInput=parseInt(obj.googFrameRateInput||"0",10)):"receiving"===dirType?result.audio[dirType].outputLevel=parseFloat(obj.audioOutputLevel||"0",10):(result.audio[dirType].inputLevel=parseFloat(obj.audioInputLevel||"0",10),result.audio[dirType].echoReturnLoss=parseFloat(obj.googEchoCancellationReturnLoss||"0",10),result.audio[dirType].echoReturnLossEnhancement=parseFloat(obj.googEchoCancellationReturnLossEnhancement||"0",10)),reportedCandidate||loopFn(stats,function(canObj,canProp){reportedCandidate||0!==canProp.indexOf("Conn-")||obj.transportId===canObj.googChannelId&&(formatCandidateFn("local",stats[canObj.localCandidateId]),formatCandidateFn("remote",stats[canObj.remoteCandidateId]),reportedCandidate=!0)})}})}listOfPeerStats[peerId]=result,self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_SUCCESS,peerId,listOfPeerStats[peerId],null),checkCompletedFn(peerId)},function(error){log.error([peerId,"RTCStatsReport",null,"Retrieval failure ->"],error),listOfPeerErrors[peerId]=error,self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_ERROR,peerId,null,error),checkCompletedFn(peerId)})},i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVING,peerId,null,null),self._peerConnections.hasOwnProperty(peerId)&&self._peerConnections[peerId]?statsFn(peerId):(listOfPeerErrors[peerId]=new Error("The peer connection object does not exists"),log.error([peerId,"RTCStatsReport",null,"Retrieval failure ->"],listOfPeerErrors[peerId]),self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_ERROR,peerId,null,listOfPeerErrors[peerId]),checkCompletedFn(peerId))}},Skylink.prototype._addPeer=function(targetMid,peerBrowser,toOffer,restartConn,receiveOnly,isSS){var self=this;return self._peerConnections[targetMid]&&!restartConn?void log.error([targetMid,null,null,"Connection to peer has already been made"]):(log.log([targetMid,null,null,"Starting the connection to peer. Options provided:"],{peerBrowser:peerBrowser,toOffer:toOffer,receiveOnly:receiveOnly,enableDataChannel:self._enableDataChannel}),log.info("Adding peer",isSS),restartConn||(self._peerConnections[targetMid]=self._createPeerConnection(targetMid,!!isSS)),self._peerConnections[targetMid]?(self._peerConnections[targetMid].receiveOnly=!!receiveOnly,self._peerConnections[targetMid].hasScreen=!!isSS,receiveOnly||self._addLocalMediaStreams(targetMid),self._hasMCU?void log.warn([targetMid,"PeerConnectionHealth",null,"Not setting health timer for MCU connection"]):void this._startPeerConnectionHealthCheck(targetMid,toOffer)):void log.error([targetMid,null,null,"Failed creating the connection to peer"]))},Skylink.prototype._restartPeerConnection=function(peerId,doIceRestart,callback){var self=this;if(!self._peerConnections[peerId])return void log.error([peerId,null,null,"Peer does not have an existing connection. Unable to restart"]);delete self._peerConnectionHealth[peerId],self._stopPeerConnectionHealthCheck(peerId);var pc=self._peerConnections[peerId],agent=(self.getPeerInfo(peerId)||{}).agent||{};if(self._SUPPORTED_WEB_AGENTS.indexOf(agent.name)===-1){var notSupportedError=new Error("Failed restarting with other agents connecting from other SDKs as re-negotiation is not supported by other SDKs");return log.warn([peerId,"RTCPeerConnection",null,"Ignoring restart request as agent's SDK does not support it"],notSupportedError),void("function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(notSupportedError)))}if(pc.signalingState===self.PEER_CONNECTION_STATE.STABLE)self._peerConnections[peerId]&&!self._peerConnections[peerId].receiveOnly&&self._addLocalMediaStreams(peerId),log.log([peerId,null,null,"Sending restart message to signaling server"]),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,userInfo:self._getUserInfo(),target:peerId,weight:self._peerPriorityWeight,receiveOnly:self._peerConnections[peerId]&&self._peerConnections[peerId].receiveOnly,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:doIceRestart===!0,sessionType:self._streams.screenshare?"screensharing":"stream",temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,lastRestart:(new Date).getTime(),explicit:!0,isConnectionRestart:!1}),self._trigger("peerRestart",peerId,self.getPeerInfo(peerId),!0,doIceRestart===!0),"function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart callback"]),callback(null)),self._startPeerConnectionHealthCheck(peerId,!1);else if(pc.signalingState===self.PEER_CONNECTION_STATE.HAVE_LOCAL_OFFER){var hasLocalDescription=pc.localDescription&&pc.localDescription.sdp;if(hasLocalDescription)self._sendChannelMessage({type:pc.localDescription.type,sdp:pc.localDescription.sdp,mid:self._user.sid,target:peerId,rid:self._room.id,restart:!0});else{var noLocalDescriptionError="Failed re-sending localDescription as there is no localDescription set to connection. There could be a handshaking step error";log.error([peerId,"RTCPeerConnection",null,noLocalDescriptionError],{localDescription:pc.localDescription,remoteDescription:pc.remoteDescription}),"function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(new Error(noLocalDescriptionError)))}}else{var unableToRestartError="Failed restarting as peer connection state is "+pc.signalingState;log.warn([peerId,"RTCPeerConnection",null,unableToRestartError]),"function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(new Error(unableToRestartError)))}},Skylink.prototype._removePeer=function(peerId){if(!this._peerConnections[peerId]&&!this._peerInformations[peerId])return void log.debug([peerId,"RTCPeerConnection",null,"Dropping the hangup from Peer as not connected to Peer at all."]);var peerInfo=clone(this.getPeerInfo(peerId))||{userData:"",settings:{},mediaStatus:{},agent:{},room:clone(this._selectedRoom)};"MCU"!==peerId?this._trigger("peerLeft",peerId,peerInfo,!1):(this._hasMCU=!1,log.log([peerId,null,null,"MCU has stopped listening and left"]),this._trigger("serverPeerLeft",peerId,this.SERVER_PEER_TYPE.MCU)),this._stopPeerConnectionHealthCheck(peerId),"undefined"!=typeof this._peerConnections[peerId]&&(this._peerConnections[peerId].dataChannelClosed=!0,"closed"!==this._peerConnections[peerId].signalingState&&this._peerConnections[peerId].close(),"MCU"!==peerId&&this._peerConnections[peerId].hasStream&&this._trigger("streamEnded",peerId,this.getPeerInfo(peerId),!1),delete this._peerConnections[peerId]),"undefined"!=typeof this._peerInformations[peerId]&&delete this._peerInformations[peerId],"undefined"!=typeof this._peerMessagesStamps[peerId]&&delete this._peerMessagesStamps[peerId],"undefined"!=typeof this._peerConnectionHealth[peerId]&&delete this._peerConnectionHealth[peerId],this._dataChannels[peerId]&&this._closeDataChannel(peerId),log.log([peerId,null,null,"Successfully removed peer"])},Skylink.prototype._createPeerConnection=function(targetMid,isScreenSharing){var pc,self=this;try{pc=new window.RTCPeerConnection(self._room.connection.peerConfig,self._room.connection.peerConstraints),log.info([targetMid,null,null,"Created peer connection"]),log.debug([targetMid,null,null,"Peer connection config:"],self._room.connection.peerConfig),log.debug([targetMid,null,null,"Peer connection constraints:"],self._room.connection.peerConstraints)}catch(error){return log.error([targetMid,null,null,"Failed creating peer connection:"],error),null}return pc.setOffer="",pc.setAnswer="",pc.hasStream=!1,pc.hasScreen=!!isScreenSharing,pc.hasMainChannel=!1,pc.firefoxStreamId="",pc.processingLocalSDP=!1,pc.processingRemoteSDP=!1,pc.gathered=!1,self._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}},pc.ondatachannel=function(event){var dc=event.channel||event;if(log.debug([targetMid,"RTCDataChannel",dc.label,"Received datachannel ->"],dc),self._enableDataChannel&&self._peerInformations[targetMid]&&self._peerInformations[targetMid].config.enableDataChannel){var channelType=self.DATA_CHANNEL_TYPE.DATA,channelKey=dc.label;pc.hasMainChannel||(channelType=self.DATA_CHANNEL_TYPE.MESSAGING,channelKey="main",pc.hasMainChannel=!0),self._createDataChannel(targetMid,dc)}else log.warn([targetMid,"RTCDataChannel",dc.label,"Not adding datachannel as enable datachannel is set to false"])},pc.onaddstream=function(event){var stream=event.stream||event;if("MCU"===targetMid)return void log.debug([targetMid,"MediaStream",stream.id,"Ignoring received remote stream from MCU ->"],stream);pc.hasStream=!0;var agent=(self.getPeerInfo(targetMid)||{}).agent||{},timeout=0;"firefox"===agent.name&&"firefox"!==window.webrtcDetectedBrowser&&(timeout=1500),setTimeout(function(){self._onRemoteStreamAdded(targetMid,stream,!!pc.hasScreen)},timeout)},pc.onicecandidate=function(event){self._onIceCandidate(targetMid,event.candidate||event)},pc.oniceconnectionstatechange=function(evt){checkIceConnectionState(targetMid,pc.iceConnectionState,function(iceConnectionState){log.debug([targetMid,"RTCIceConnectionState",null,"Ice connection state changed ->"],iceConnectionState),self._trigger("iceConnectionState",iceConnectionState,targetMid),iceConnectionState===self.ICE_CONNECTION_STATE.COMPLETED&&pc.signalingState===self.PEER_CONNECTION_STATE.STABLE&&(log.debug([targetMid,"PeerConnectionHealth",null,"Peer connection with user is stable"]),self._peerConnectionHealth[targetMid]=!0,self._stopPeerConnectionHealthCheck(targetMid)),"undefined"==typeof self._ICEConnectionFailures[targetMid]&&(self._ICEConnectionFailures[targetMid]=0),iceConnectionState===self.ICE_CONNECTION_STATE.FAILED&&(self._ICEConnectionFailures[targetMid]+=1,self._enableIceTrickle&&self._trigger("iceConnectionState",self.ICE_CONNECTION_STATE.TRICKLE_FAILED,targetMid),self._hasMCU||self._restartPeerConnection(targetMid,!0))})},pc.onsignalingstatechange=function(){log.debug([targetMid,"RTCSignalingState",null,"Peer connection state changed ->"],pc.signalingState),self._trigger("peerConnectionState",pc.signalingState,targetMid),pc.iceConnectionState!==self.ICE_CONNECTION_STATE.COMPLETED&&pc.iceConnectionState!==self.ICE_CONNECTION_STATE.CONNECTED||pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE||(log.debug([targetMid,"PeerConnectionHealth",null,"Peer connection with user is stable"]),self._peerConnectionHealth[targetMid]=!0,self._stopPeerConnectionHealthCheck(targetMid))},pc.onicegatheringstatechange=function(){log.log([targetMid,"RTCIceGatheringState",null,"Ice gathering state changed ->"],pc.iceGatheringState),self._trigger("candidateGenerationState",pc.iceGatheringState,targetMid)},"firefox"===window.webrtcDetectedBrowser&&(pc.removeStream=function(stream){for(var senders=pc.getSenders(),s=0;s<senders.length;s++)for(var tracks=stream.getTracks(),t=0;t<tracks.length;t++)tracks[t]===senders[s].track&&pc.removeTrack(senders[s])}),pc},Skylink.prototype._restartMCUConnection=function(callback){var self=this;log.info([self._user.sid,null,null,"Restarting with MCU enabled"]);var peerId,listOfPeers=Object.keys(self._peerConnections),listOfPeerRestartErrors={},receiveOnly=!1;(new Date).valueOf();self._trigger("serverPeerRestart","MCU",self.SERVER_PEER_TYPE.MCU);for(var i=0;i<listOfPeers.length;i++)if(peerId=listOfPeers[i],self._peerConnections[peerId])"MCU"===peerId&&(receiveOnly=!!self._peerConnections[peerId].receiveOnly),"MCU"!==peerId&&(self._trigger("peerRestart",peerId,self.getPeerInfo(peerId),!0,!1),log.log([peerId,null,null,"Sending restart message to signaling server"]),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,userInfo:self._getUserInfo(),target:peerId,weight:self._peerPriorityWeight,receiveOnly:receiveOnly,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:!1,sessionType:self._streams.screenshare?"screensharing":"stream",temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,lastRestart:(new Date).getTime(),explicit:!0,isConnectionRestart:!1}));else{var error="Peer connection with peer does not exists. Unable to restart";log.error([peerId,"PeerConnection",null,error]),listOfPeerRestartErrors[peerId]=new Error(error)}var peerJoinedFn=function(peerId,peerInfo,isSelf){log.log([null,"PeerConnection",null,"Invoked all peers to restart with MCU. Firing callback"]),"function"==typeof callback&&(Object.keys(listOfPeerRestartErrors).length>0?callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null):callback(null,{listOfPeers:listOfPeers}))};self.once("peerJoined",peerJoinedFn,function(peerId,peerInfo,isSelf){return isSelf}),self.leaveRoom(!1,function(error,success){if(error){if("function"==typeof callback){for(var i=0;i<listOfPeers.length;i++)listOfPeerRestartErrors[listOfPeers[i]]=error;callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null)}}else self.joinRoom(self._selectedRoom)})},Skylink.prototype._peerInformations={},Skylink.prototype._user=null,Skylink.prototype._userData="",Skylink.prototype.setUserData=function(userData){var self=this;this._userData=userData||"",self._inRoom?(log.log("Updated userData -> ",userData),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.UPDATE_USER,mid:self._user.sid,rid:self._room.id,userData:self._userData,stamp:(new Date).getTime()}),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)):log.warn("User is not in the room. Broadcast of updated information will be dropped")},Skylink.prototype.getUserData=function(peerId){if(peerId&&peerId!==this._user.sid){var peerInfo=this._peerInformations[peerId];return"object"==typeof peerInfo?peerInfo.userData:null}return this._userData},Skylink.prototype.getPeerInfo=function(peerId){var peerInfo=null;return"string"==typeof peerId&&"object"==typeof this._peerInformations[peerId]?(peerInfo=clone(this._peerInformations[peerId]),peerInfo.room=clone(this._selectedRoom),peerInfo.settings.googleXBandwidth={},peerInfo.settings.video&&"object"==typeof peerInfo.settings.video&&peerInfo.settings.video.frameRate===-1&&(peerInfo.settings.video.frameRate=null),peerInfo.settings.audio&&"object"==typeof peerInfo.settings.audio&&(peerInfo.settings.audio.usedtx=null,peerInfo.settings.audio.maxplaybackrate=null,peerInfo.settings.audio.useinbandfec=null),"MCU"===peerId&&(peerInfo.settings.audio=!1,peerInfo.settings.video=!1,peerInfo.settings.mediaStatus={audioMuted:!0,videoMuted:!0})):(peerInfo={userData:clone(this._userData)||"",settings:{audio:!1,video:!1},mediaStatus:clone(this._streamsMutedSettings),agent:{name:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,pluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null},room:clone(this._selectedRoom),config:{enableDataChannel:this._enableDataChannel,enableIceTrickle:this._enableIceTrickle,enableIceRestart:this._enableIceRestart,priorityWeight:this._peerPriorityWeight}},this._streams.screenshare?peerInfo.settings=clone(this._streams.screenshare.settings):this._streams.userMedia&&(peerInfo.settings=clone(this._streams.userMedia.settings)),peerInfo.settings.bandwidth=clone(this._streamsBandwidthSettings.bAS),peerInfo.settings.googleXBandwidth=clone(this._streamsBandwidthSettings.googleX)),peerInfo.settings.audio||(peerInfo.mediaStatus.audioMuted=!0),peerInfo.settings.video||(peerInfo.mediaStatus.videoMuted=!0),peerInfo},Skylink.prototype.getPeersInRoom=function(){for(var listOfPeersInfo={},listOfPeers=Object.keys(this._peerInformations),i=0;i<listOfPeers.length;i++)listOfPeersInfo[listOfPeers[i]]=this.getPeerInfo(listOfPeers[i]);return listOfPeersInfo},Skylink.prototype._getUserInfo=function(peerId){var userInfo=clone(this.getPeerInfo());return userInfo.settings.video&&"object"==typeof userInfo.settings.video&&"number"!=typeof userInfo.settings.video.frameRate&&(userInfo.settings.video.frameRate=-1),userInfo.settings.audio&&"object"==typeof userInfo.settings.audio&&(delete userInfo.settings.audio.usedtx,delete userInfo.settings.audio.maxplaybackrate,delete userInfo.settings.audio.useinbandfec),delete userInfo.agent,delete userInfo.room,delete userInfo.settings.googleXBandwidth,userInfo},Skylink.prototype._parseUserInfo=function(message){var userInfo={agent:{name:"string"==typeof message.agent&&message.agent?message.agent:"other",version:"number"==typeof message.version&&message.version?message.version:0,os:"string"==typeof message.os&&message.os?message.os:"",pluginVersion:"string"==typeof message.temasysPluginVersion&&message.temasysPluginVersion?message.temasysPluginVersion:null},settings:{audio:!1,video:!1,bandwidth:{}},mediaStatus:{audioMuted:!0,videoMuted:!0},config:{enableIceTrickle:"boolean"!=typeof message.enableIceTrickle||message.enableIceTrickle,enableIceRestart:"boolean"==typeof message.enableIceRestart&&message.enableIceRestart,enableDataChannel:"boolean"!=typeof message.enableDataChannel||message.enableDataChannel,priorityWeight:"number"==typeof message.weight?message.weight:0},userData:message.userData||""};return"object"==typeof message.userInfo&&message.userInfo&&("object"==typeof message.userInfo.settings&&message.userInfo.settings&&(userInfo.settings=message.userInfo.settings,"object"==typeof message.userInfo.settings.bandwidth&&userInfo.settings.bandwidth||(userInfo.settings.bandwidth={})),"object"==typeof message.userInfo.mediaStatus&&message.userInfo.mediaStatus&&(userInfo.mediaStatus=message.userInfo.mediaStatus,"boolean"==typeof userInfo.mediaStatus.audioMuted&&(userInfo.mediaStatus.audioMuted=!1),"boolean"==typeof userInfo.mediaStatus.videoMuted&&(userInfo.mediaStatus.videoMuted=!1))),userInfo},Skylink.prototype.HANDSHAKE_PROGRESS={ENTER:"enter",WELCOME:"welcome",OFFER:"offer",ANSWER:"answer",ERROR:"error"},Skylink.prototype._peerConnectionHealthTimers={},Skylink.prototype._peerConnectionHealth={},Skylink.prototype._peerPriorityWeight=0,Skylink.prototype._doOffer=function(targetMid,iceRestart,peerBrowser){var self=this,pc=self._peerConnections[targetMid]||self._addPeer(targetMid,peerBrowser);if(log.log([targetMid,null,null,"Checking caller status"],peerBrowser),!pc)return void log.warn([targetMid,"RTCSessionDescription","offer","Dropping of creating of offer as connection does not exists"]);if(pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE)return void log.warn([targetMid,"RTCSessionDescription","offer",'Dropping of creating of offer as signalingState is not "'+self.PEER_CONNECTION_STATE.STABLE+'" ->'],pc.signalingState);var peerIceRestartSupport=!!((self._peerInformations[targetMid]||{}).config||{}).enableIceRestart,offerConstraints={offerToReceiveAudio:!0,offerToReceiveVideo:!0,iceRestart:!(!self._enableIceRestart||!peerIceRestartSupport)&&iceRestart===!0};peerBrowser.os=peerBrowser.os||"",
["IE","safari"].indexOf(window.webrtcDetectedBrowser)>-1&&(offerConstraints={mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0,iceRestart:!(!self._enableIceRestart||!peerIceRestartSupport)&&iceRestart===!0}}),self._enableDataChannel&&self._peerInformations[targetMid]&&self._peerInformations[targetMid].config.enableDataChannel&&(self._dataChannels[targetMid]&&self._dataChannels[targetMid].main||"edge"===window.webrtcDetectedBrowser||(self._createDataChannel(targetMid),self._peerConnections[targetMid].hasMainChannel=!0)),log.debug([targetMid,null,null,"Creating offer with config:"],offerConstraints),pc.createOffer(function(offer){log.debug([targetMid,null,null,"Created offer"],offer),self._setLocalAndSendMessage(targetMid,offer)},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),log.error([targetMid,null,null,"Failed creating an offer:"],error)},offerConstraints)},Skylink.prototype._doAnswer=function(targetMid){var self=this;log.log([targetMid,null,null,"Creating answer with config:"],self._room.connection.sdpConstraints);var pc=self._peerConnections[targetMid];return pc?pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER?void log.warn([targetMid,"RTCSessionDescription","answer",'Dropping of creating of answer as signalingState is not "'+self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER+'" ->'],pc.signalingState):void pc.createAnswer(function(answer){log.debug([targetMid,null,null,"Created answer"],answer),self._setLocalAndSendMessage(targetMid,answer)},function(error){log.error([targetMid,null,null,"Failed creating an answer:"],error),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error)}):void log.warn([targetMid,"RTCSessionDescription","answer","Dropping of creating of answer as connection does not exists"])},Skylink.prototype._startPeerConnectionHealthCheck=function(peerId,toOffer){var self=this,originalBlock=self._hasMCU?105e3:self._enableIceTrickle?toOffer?12500:1e4:5e4;self._retryCounters[peerId]||(self._retryCounters[peerId]=0),log.log([peerId,"PeerConnectionHealth",null,"Initializing check for peer's connection health"]),self._peerConnectionHealthTimers[peerId]&&self._stopPeerConnectionHealthCheck(peerId),self._peerConnectionHealthTimers[peerId]=setTimeout(function(){var connectionStable=!1,pc=self._peerConnections[peerId];if(pc){var dc=(self._dataChannels[peerId]||{}).main,dcConnected=!pc.hasMainChannel||dc&&dc.readyState===self.DATA_CHANNEL_STATE.OPEN,iceConnected=pc.iceConnectionState===self.ICE_CONNECTION_STATE.CONNECTED||pc.iceConnectionState===self.ICE_CONNECTION_STATE.COMPLETED,signalingConnected=pc.signalingState===self.PEER_CONNECTION_STATE.STABLE;connectionStable=dcConnected&&iceConnected&&signalingConnected,log.debug([peerId,"PeerConnectionHealth",null,"Connection status"],{dcConnected:dcConnected,iceConnected:iceConnected,signalingConnected:signalingConnected})}log.debug([peerId,"PeerConnectionHealth",null,"Require reconnection?"],connectionStable),connectionStable?self._peerConnectionHealth[peerId]=!0:(log.warn([peerId,"PeerConnectionHealth",null,"Peer's health timer has expired"],1e4),self._stopPeerConnectionHealthCheck(peerId),log.debug([peerId,"PeerConnectionHealth",null,"Ice connection state time out. Re-negotiating connection"]),self._retryCounters[peerId]<30&&self._retryCounters[peerId]++,self._peerConnections[peerId]&&self._peerConnections[peerId].localDescription&&self._peerConnections[peerId].localDescription.sdp?self._hasMCU||self._restartPeerConnection(peerId,!1):(log.debug([peerId,"PeerConnectionHealth",null,"Resending welcome again to Peer"]),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,receiveOnly:!!self._peerConnections[peerId]&&!!self._peerConnections[peerId].receiveOnly,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,userInfo:self._getUserInfo(),target:peerId,weight:self._peerPriorityWeight,sessionType:self._streams.screenshare?"screensharing":"stream",temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null})))},originalBlock+1e3*(self._retryCounters[peerId]||0))},Skylink.prototype._stopPeerConnectionHealthCheck=function(peerId){var self=this;self._peerConnectionHealthTimers[peerId]?(log.debug([peerId,"PeerConnectionHealth",null,"Stopping peer connection health timer check"]),clearTimeout(self._peerConnectionHealthTimers[peerId]),delete self._peerConnectionHealthTimers[peerId]):log.debug([peerId,"PeerConnectionHealth",null,"Peer connection health does not have a timer check"])},Skylink.prototype._setLocalAndSendMessage=function(targetMid,sessionDescription){var self=this,pc=self._peerConnections[targetMid];return sessionDescription&&sessionDescription.sdp?pc?sessionDescription.type===self.HANDSHAKE_PROGRESS.OFFER&&pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE?void log.warn([targetMid,"RTCSessionDescription",sessionDescription.type,'Local session description will not be set as signaling state is "'+pc.signalingState+'" ->'],sessionDescription):sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER&&pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER?void log.warn([targetMid,"RTCSessionDescription",sessionDescription.type,'Local session description will not be set as signaling state is "'+pc.signalingState+'" ->'],sessionDescription):pc.processingLocalSDP?void log.warn([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description will not be set as another is being processed ->"],sessionDescription):(pc.processingLocalSDP=!0,sessionDescription.sdp=self._setSDPOpusConfig(targetMid,sessionDescription),sessionDescription.sdp=self._setSDPCodec(targetMid,sessionDescription),sessionDescription.sdp=self._removeSDPFirefoxH264Pref(targetMid,sessionDescription),sessionDescription.sdp=self._removeSDPH264VP9AptRtxForOlderPlugin(targetMid,sessionDescription),sessionDescription.sdp=self._removeSDPCodecs(targetMid,sessionDescription),sessionDescription.sdp=self._handleSDPMCUConnectionCase(targetMid,sessionDescription,!0),sessionDescription.sdp=self._setSDPBitrate(targetMid,sessionDescription),log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description updated ->"],sessionDescription.sdp),void pc.setLocalDescription(sessionDescription,function(){return log.debug([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description has been set ->"],sessionDescription),pc.processingLocalSDP=!1,self._trigger("handshakeProgress",sessionDescription.type,targetMid),sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER?pc.setAnswer="local":pc.setOffer="local",self._enableIceTrickle||pc.gathered?void self._sendChannelMessage({type:sessionDescription.type,sdp:self._addSDPMediaStreamTrackIDs(targetMid,sessionDescription),mid:self._user.sid,target:targetMid,rid:self._room.id,userInfo:self._getUserInfo()}):void log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description sending is halted to complete ICE gathering."])},function(error){log.error([targetMid,"RTCSessionDescription",sessionDescription.type,"Local description failed setting ->"],error),pc.processingLocalSDP=!1,self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error)})):void log.warn([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description will not be set as connection does not exists ->"],sessionDescription):void log.warn([targetMid,"RTCSessionDescription",null,"Local session description is undefined ->"],sessionDescription)},Skylink.prototype.GET_PEERS_STATE={ENQUIRED:"enquired",RECEIVED:"received"},Skylink.prototype.INTRODUCE_STATE={INTRODUCING:"introducing",ERROR:"error"},Skylink.prototype._autoIntroduce=!0,Skylink.prototype._isPrivileged=!1,Skylink.prototype._peerList=null,Skylink.prototype.getPeers=function(showAll,callback){var self=this;return self._isPrivileged?self._appKey?("function"==typeof showAll&&(callback=showAll,showAll=!1),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.GET_PEERS,showAll:showAll||!1}),self._trigger("getPeersStateChange",self.GET_PEERS_STATE.ENQUIRED,self._user.sid,null),log.log("Enquired server for peers within the realm"),void("function"==typeof callback&&self.once("getPeersStateChange",function(state,privilegedPeerId,peerList){callback(null,peerList)},function(state,privilegedPeerId,peerList){return state===self.GET_PEERS_STATE.RECEIVED}))):void log.warn("App key is not defined. Please authenticate again."):void log.warn("Please upgrade your key to privileged to use this function")},Skylink.prototype.introducePeer=function(sendingPeerId,receivingPeerId){var self=this;return self._isPrivileged?(self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.INTRODUCE,sendingPeerId:sendingPeerId,receivingPeerId:receivingPeerId}),self._trigger("introduceStateChange",self.INTRODUCE_STATE.INTRODUCING,self._user.sid,sendingPeerId,receivingPeerId,null),void log.log("Introducing",sendingPeerId,"to",receivingPeerId)):(log.warn("Please upgrade your key to privileged to use this function"),void self._trigger("introduceStateChange",self.INTRODUCE_STATE.ERROR,self._user.sid,sendingPeerId,receivingPeerId,"notPrivileged"))},Skylink.prototype.SYSTEM_ACTION={WARNING:"warning",REJECT:"reject"},Skylink.prototype.SYSTEM_ACTION_REASON={CREDENTIALS_EXPIRED:"oldTimeStamp",CREDENTIALS_ERROR:"credentialError",DUPLICATED_LOGIN:"duplicatedLogin",ROOM_NOT_STARTED:"notStart",EXPIRED:"expired",ROOM_LOCKED:"locked",FAST_MESSAGE:"fastmsg",ROOM_CLOSING:"toclose",ROOM_CLOSED:"roomclose",SERVER_ERROR:"serverError",KEY_ERROR:"keyFailed"},Skylink.prototype._selectedRoom=null,Skylink.prototype._roomLocked=!1,Skylink.prototype._inRoom=!1,Skylink.prototype.joinRoom=function(room,mediaOptions,callback){var error,self=this,stopStream=!1,previousRoom=self._selectedRoom;if(null===room)return error="Invalid room name is provided",log.error(error,room),"function"==typeof mediaOptions&&(callback=mediaOptions,mediaOptions=void 0),void("function"==typeof callback&&callback({room:room,errorCode:self._readyState,error:new Error(error)},null));if("string"==typeof room){if("function"==typeof mediaOptions)callback=mediaOptions,mediaOptions=void 0;else if("undefined"!=typeof mediaOptions&&(null===mediaOptions||"object"!=typeof mediaOptions))return error="Invalid mediaOptions is provided",log.error(error,mediaOptions),void("function"==typeof callback&&callback({room:room,errorCode:self._readyState,error:new Error(error)},null))}else if("object"==typeof room)"function"==typeof mediaOptions&&(callback=mediaOptions),mediaOptions=room,room=void 0;else if("function"==typeof room)callback=room,room=void 0,mediaOptions=void 0;else if("undefined"!=typeof room&&(error="Invalid mediaOptions is provided",log.error(error,mediaOptions),"function"==typeof mediaOptions&&(callback=mediaOptions,mediaOptions=void 0),"function"==typeof callback))return void callback({room:self._defaultRoom,errorCode:self._readyState,error:new Error(error)},null);room||(log.info('Connecting to the default room "'+self._defaultRoom+'" as room name is not provided'),room=self._defaultRoom);var channelCallback=function(error,success){error?"function"==typeof callback&&callback({error:error,errorCode:null,room:self._selectedRoom},null):("function"==typeof callback&&self.once("peerJoined",function(peerId,peerInfo,isSelf){self._wait(function(){log.log([null,"Socket",self._selectedRoom,"Peer joined. Firing callback. PeerId ->"],peerId),callback(null,{room:self._selectedRoom,peerId:peerId,peerInfo:peerInfo})},function(){return self._inRoom},!1)},function(peerId,peerInfo,isSelf){return isSelf},!1),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.JOIN_ROOM,uid:self._user.uid,cid:self._key,rid:self._room.id,userCred:self._user.token,timeStamp:self._user.timeStamp,apiOwner:self._appKeyOwner,roomCred:self._room.token,start:self._room.startDateTime,len:self._room.duration,isPrivileged:self._isPrivileged===!0,autoIntroduce:self._autoIntroduce!==!1,key:self._appKey}))};if(self._inRoom)"object"==typeof mediaOptions&&mediaOptions.audio===!1&&mediaOptions.video===!1&&(stopStream=!0,log.warn([null,"MediaStream",self._selectedRoom,"Stopping current MediaStream as provided settings for audio and video is false ("+stopStream+")"],mediaOptions)),log.log([null,"Socket",previousRoom,"Leaving room before joining new room"],self._selectedRoom),self.leaveRoom(stopStream,function(error,success){log.log([null,"Socket",previousRoom,"Leave room callback result"],{error:error,success:success}),log.log([null,"Socket",self._selectedRoom,"Joining room. Media options:"],mediaOptions),"string"==typeof room&&room!==self._selectedRoom?self._initSelectedRoom(room,function(errorObj){errorObj?"function"==typeof callback&&callback({room:self._selectedRoom,errorCode:self._readyState,error:new Error(errorObj)},null):self._waitForOpenChannel(mediaOptions,channelCallback)}):self._waitForOpenChannel(mediaOptions,channelCallback)});else{log.log([null,"Socket",self._selectedRoom,"Joining room. Media options:"],mediaOptions);var isNotSameRoom="string"==typeof room&&room!==self._selectedRoom;isNotSameRoom?self._initSelectedRoom(room,function(errorObj){errorObj?"function"==typeof callback&&callback({room:self._selectedRoom,errorCode:self._readyState,error:new Error(errorObj)},null):self._waitForOpenChannel(mediaOptions,channelCallback)}):self._waitForOpenChannel(mediaOptions,channelCallback)}},Skylink.prototype.leaveRoom=function(stopMediaOptions,callback){var error,self=this,stopUserMedia=!0,stopScreenshare=!0;if("function"==typeof stopMediaOptions?(callback=stopMediaOptions,stopMediaOptions=!0):"undefined"==typeof stopMediaOptions&&(stopMediaOptions=!0),"object"==typeof stopMediaOptions&&null!==stopMediaOptions)stopUserMedia=stopMediaOptions.userMedia!==!1,stopScreenshare=stopMediaOptions.screenshare!==!1;else{if("boolean"!=typeof stopMediaOptions)return error="stopMediaOptions parameter provided is not a boolean or valid object",log.error(error,stopMediaOptions),void("function"==typeof callback&&(log.log([null,"Socket",self._selectedRoom,"Error occurred. Firing callback with error -> "],error),callback(new Error(error),null)));stopMediaOptions===!1&&(stopUserMedia=!1,stopScreenshare=!1)}if(!self._inRoom)return error="Unable to leave room as user is not in any room",log.error(error),void("function"==typeof callback&&(log.log([null,"Socket",self._selectedRoom,"Error occurred. Firing callback with error -> "],error),callback(new Error(error),null)));var i,peers=Object.keys(self._peerInformations),conns=Object.keys(self._peerConnections);for(i=0;i<conns.length;i++)peers.indexOf(conns[i])===-1&&peers.push(conns[i]);for(i=0;i<peers.length;i++)self._removePeer(peers[i]);self._inRoom=!1,self._closeChannel(),self._stopStreams({userMedia:stopUserMedia,screenshare:stopScreenshare}),self._wait(function(){log.log([null,"Socket",self._selectedRoom,"User left the room. Callback fired."]),self._trigger("peerLeft",self._user.sid,self.getPeerInfo(),!0),"function"==typeof callback&&callback(null,{peerId:self._user.sid,previousRoom:self._selectedRoom})},function(){return 0===Object.keys(self._peerConnections).length&&self._channelOpen===!1},!1)},Skylink.prototype.lockRoom=function(){log.log("Update to isRoomLocked status ->",!0),this._sendChannelMessage({type:this._SIG_MESSAGE_TYPE.ROOM_LOCK,mid:this._user.sid,rid:this._room.id,lock:!0})},Skylink.prototype.unlockRoom=function(){log.log("Update to isRoomLocked status ->",!1),this._sendChannelMessage({type:this._SIG_MESSAGE_TYPE.ROOM_LOCK,mid:this._user.sid,rid:this._room.id,lock:!1})},Skylink.prototype._waitForOpenChannel=function(mediaOptions,callback){var self=this;self._socketCurrentReconnectionAttempt=0,self._wait(function(){self._condition("channelOpen",function(){if(mediaOptions=mediaOptions||{},self._userData=mediaOptions.userData||self._userData||"",self._streamsBandwidthSettings={googleX:{},bAS:{}},mediaOptions.bandwidth&&("number"==typeof mediaOptions.bandwidth.audio&&(self._streamsBandwidthSettings.bAS.audio=mediaOptions.bandwidth.audio),"number"==typeof mediaOptions.bandwidth.video&&(self._streamsBandwidthSettings.bAS.video=mediaOptions.bandwidth.video),"number"==typeof mediaOptions.bandwidth.data&&(self._streamsBandwidthSettings.bAS.data=mediaOptions.bandwidth.data)),mediaOptions.googleXBandwidth&&("number"==typeof mediaOptions.googleXBandwidth.min&&(self._streamsBandwidthSettings.googleX.min=mediaOptions.googleXBandwidth.min),"number"==typeof mediaOptions.googleXBandwidth.max&&(self._streamsBandwidthSettings.googleX.max=mediaOptions.googleXBandwidth.max)),mediaOptions.manualGetUserMedia===!0){self._trigger("mediaAccessRequired");var current50Block=0,mediaAccessRequiredFailure=!1;return void self._wait(function(){mediaAccessRequiredFailure===!0?self._onUserMediaError(new Error("Waiting for stream timeout"),!1,!1):callback(null,self._streams.userMedia.stream)},function(){return current50Block+=1,600===current50Block?(mediaAccessRequiredFailure=!0,!0):!(!self._streams.userMedia||!self._streams.userMedia.stream)||void 0},50)}return mediaOptions.audio||mediaOptions.video?void self.getUserMedia({useExactConstraints:!!mediaOptions.useExactConstraints,audio:mediaOptions.audio,video:mediaOptions.video},function(error,success){error?callback(error,null):callback(null,success)}):void callback(null,null)},function(){return self._channelOpen||self._openChannel(),self._channelOpen},function(state){return!0})},function(){return self._readyState===self.READY_STATE_CHANGE.COMPLETED})},Skylink.prototype.READY_STATE_CHANGE={INIT:0,LOADING:1,COMPLETED:2,ERROR:-1},Skylink.prototype.READY_STATE_CHANGE_ERROR={API_INVALID:4001,API_DOMAIN_NOT_MATCH:4002,API_CORS_DOMAIN_NOT_MATCH:4003,API_CREDENTIALS_INVALID:4004,API_CREDENTIALS_NOT_MATCH:4005,API_INVALID_PARENT_KEY:4006,API_NO_MEETING_RECORD_FOUND:4010,API_OVER_SEAT_LIMIT:4020,API_RETRIEVAL_FAILED:4021,API_WRONG_ACCESS_DOMAIN:5005,XML_HTTP_REQUEST_ERROR:-1,NO_SOCKET_IO:1,NO_XMLHTTPREQUEST_SUPPORT:2,NO_WEBRTC_SUPPORT:3,NO_PATH:4,ADAPTER_NO_LOADED:7},Skylink.prototype._forceSSL=!1,Skylink.prototype._forceTURNSSL=!1,Skylink.prototype._forceTURN=!1,Skylink.prototype._path=null,Skylink.prototype.REGIONAL_SERVER={APAC1:"",US1:""},Skylink.prototype._roomServer="//api.temasys.com.sg",Skylink.prototype._appKey=null,Skylink.prototype._defaultRoom=null,Skylink.prototype._roomStart=null,Skylink.prototype._roomDuration=null,Skylink.prototype._roomCredentials=null,Skylink.prototype._readyState=0,Skylink.prototype._key=null,Skylink.prototype._appKeyOwner=null,Skylink.prototype._room=null,Skylink.prototype.init=function(options,callback){var self=this;if("function"==typeof options&&(callback=options,options=void 0),!options){var error="No API key provided";return log.error(error),void("function"==typeof callback&&callback(error,null))}var appKey,room,defaultRoom,region,startDateTime,duration,credentials,roomServer=self._roomServer,enableIceTrickle=!0,enableDataChannel=!0,enableSTUNServer=!0,enableTURNServer=!0,TURNTransport=self.TURN_TRANSPORT.ANY,audioFallback=!1,forceSSL=!1,socketTimeout=0,forceTURNSSL=!1,audioCodec=self.AUDIO_CODEC.AUTO,videoCodec=self.VIDEO_CODEC.AUTO,forceTURN=!1,usePublicSTUN=!0,disableVideoFecCodecs=!1,disableComfortNoiseCodec=!1,filterCandidatesType={host:!1,srflx:!1,relay:!1};if(log.log("Provided init options:",options),"string"==typeof options)appKey=options,defaultRoom=appKey,room=appKey;else{if(appKey=options.appKey||options.apiKey,roomServer="string"==typeof options.roomServer?options.roomServer:roomServer,roomServer=roomServer.lastIndexOf("/")===roomServer.length-1?roomServer.substring(0,roomServer.length-1):roomServer,region="string"==typeof options.region?options.region:region,defaultRoom="string"==typeof options.defaultRoom&&options.defaultRoom?options.defaultRoom:appKey,room=defaultRoom,enableIceTrickle="boolean"==typeof options.enableIceTrickle?options.enableIceTrickle:enableIceTrickle,enableDataChannel="boolean"==typeof options.enableDataChannel?options.enableDataChannel:enableDataChannel,enableSTUNServer="boolean"==typeof options.enableSTUNServer?options.enableSTUNServer:enableSTUNServer,enableTURNServer="boolean"==typeof options.enableTURNServer?options.enableTURNServer:enableTURNServer,forceSSL="boolean"==typeof options.forceSSL?options.forceSSL:forceSSL,socketTimeout="number"==typeof options.socketTimeout?options.socketTimeout:socketTimeout,socketTimeout=socketTimeout<5e3?5e3:socketTimeout,forceTURNSSL="boolean"==typeof options.forceTURNSSL?options.forceTURNSSL:forceTURNSSL,audioCodec="string"==typeof options.audioCodec?options.audioCodec:audioCodec,videoCodec="string"==typeof options.videoCodec?options.videoCodec:videoCodec,forceTURN="boolean"==typeof options.forceTURN?options.forceTURN:forceTURN,usePublicSTUN="boolean"==typeof options.usePublicSTUN?options.usePublicSTUN:usePublicSTUN,disableVideoFecCodecs="boolean"==typeof options.disableVideoFecCodecs?options.disableVideoFecCodecs:disableVideoFecCodecs,disableComfortNoiseCodec="boolean"==typeof options.disableComfortNoiseCodec?options.disableComfortNoiseCodec:disableComfortNoiseCodec,"object"==typeof options.filterCandidatesType&&options.filterCandidatesType&&(filterCandidatesType.host="boolean"==typeof options.filterCandidatesType.host&&options.filterCandidatesType.host,filterCandidatesType.srflx="boolean"==typeof options.filterCandidatesType.srflx&&options.filterCandidatesType.srflx,filterCandidatesType.relay="boolean"==typeof options.filterCandidatesType.relay&&options.filterCandidatesType.relay),"string"==typeof options.TURNServerTransport)for(var type in self.TURN_TRANSPORT)if(self.TURN_TRANSPORT.hasOwnProperty(type)&&self.TURN_TRANSPORT[type]===options.TURNServerTransport){TURNTransport=options.TURNServerTransport;break}audioFallback=options.audioFallback||audioFallback,options.credentials&&"string"==typeof options.credentials.credentials&&"number"==typeof options.credentials.duration&&"string"==typeof options.credentials.startDateTime&&(startDateTime=options.credentials.startDateTime,duration=options.credentials.duration,credentials=options.credentials.credentials),forceTURN===!0&&(enableTURNServer=!0,enableSTUNServer=!1,filterCandidatesType.host=!0,filterCandidatesType.srflx=!0,filterCandidatesType.relay=!1)}if(self._appKey=appKey,self._roomServer=roomServer,self._defaultRoom=defaultRoom,self._selectedRoom=room,self._serverRegion=region||null,self._path=roomServer+"/api/"+appKey+"/"+room,credentials&&startDateTime&&duration&&(self._roomStart=startDateTime,self._roomDuration=duration,self._roomCredentials=credentials,self._path+=credentials?"/"+startDateTime+"/"+duration+"?&cred="+credentials:""),self._path+=(credentials?"&":"?")+"rand="+(new Date).toISOString(),region&&(self._path+="&rg="+region),self._enableIceTrickle=enableIceTrickle,self._enableDataChannel=enableDataChannel,self._enableSTUN=enableSTUNServer,self._enableTURN=enableTURNServer,self._TURNTransport=TURNTransport,self._audioFallback=audioFallback,self._forceSSL=forceSSL,self._socketTimeout=socketTimeout,self._forceTURNSSL=forceTURNSSL,self._selectedAudioCodec=audioCodec,self._selectedVideoCodec=videoCodec,self._forceTURN=forceTURN,self._usePublicSTUN=usePublicSTUN,self._disableVideoFecCodecs=disableVideoFecCodecs,self._disableComfortNoiseCodec=disableComfortNoiseCodec,self._filterCandidatesType=filterCandidatesType,log.log("Init configuration:",{serverUrl:self._path,readyState:self._readyState,appKey:self._appKey,roomServer:self._roomServer,defaultRoom:self._defaultRoom,selectedRoom:self._selectedRoom,serverRegion:self._serverRegion,enableDataChannel:self._enableDataChannel,enableIceTrickle:self._enableIceTrickle,enableTURNServer:self._enableTURN,enableSTUNServer:self._enableSTUN,TURNTransport:self._TURNTransport,audioFallback:self._audioFallback,forceSSL:self._forceSSL,socketTimeout:self._socketTimeout,forceTURNSSL:self._forceTURNSSL,audioCodec:self._selectedAudioCodec,videoCodec:self._selectedVideoCodec,forceTURN:self._forceTURN,usePublicSTUN:self._usePublicSTUN,disableVideoFecCodecs:self._disableVideoFecCodecs,disableComfortNoiseCodec:self._disableComfortNoiseCodec,filterCandidatesType:self._filterCandidatesType}),self._readyState=0,self._trigger("readyStateChange",self.READY_STATE_CHANGE.INIT,null,self._selectedRoom),"function"==typeof callback){var hasTriggered=!1,readyStateChangeFn=function(readyState,error){hasTriggered||(readyState===self.READY_STATE_CHANGE.COMPLETED?(log.log([null,"Socket",null,"Firing callback. Ready state change has met provided state ->"],readyState),hasTriggered=!0,self.off("readyStateChange",readyStateChangeFn),callback(null,{serverUrl:self._path,readyState:self._readyState,appKey:self._appKey,roomServer:self._roomServer,defaultRoom:self._defaultRoom,selectedRoom:self._selectedRoom,serverRegion:self._serverRegion,enableDataChannel:self._enableDataChannel,enableIceTrickle:self._enableIceTrickle,enableTURNServer:self._enableTURN,enableSTUNServer:self._enableSTUN,TURNTransport:self._TURNTransport,audioFallback:self._audioFallback,forceSSL:self._forceSSL,socketTimeout:self._socketTimeout,forceTURNSSL:self._forceTURNSSL,audioCodec:self._selectedAudioCodec,videoCodec:self._selectedVideoCodec,forceTURN:self._forceTURN,usePublicSTUN:self._usePublicSTUN,disableVideoFecCodecs:self._disableVideoFecCodecs,disableComfortNoiseCodec:self._disableComfortNoiseCodec,filterCandidatesType:self._filterCandidatesType})):readyState===self.READY_STATE_CHANGE.ERROR&&(log.log([null,"Socket",null,"Firing callback. Ready state change has met provided state ->"],readyState),log.debug([null,"Socket",null,"Ready state met failure"],error),hasTriggered=!0,self.off("readyStateChange",readyStateChangeFn),callback({error:new Error(error),errorCode:error.errorCode,status:error.status},null)))};self.on("readyStateChange",readyStateChangeFn)}self._loadInfo()},Skylink.prototype._requestServerInfo=function(method,url,callback,params){var self=this,useXDomainRequest="function"==typeof window.XDomainRequest||"object"==typeof window.XDomainRequest;self._socketUseXDR=useXDomainRequest;var xhr;url=self._forceSSL?"https:"+url:url,useXDomainRequest?(log.debug([null,"XMLHttpRequest",method,"Using XDomainRequest. XMLHttpRequest is now XDomainRequest"],{agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion}),xhr=new XDomainRequest,xhr.setContentType=function(contentType){xhr.contentType=contentType}):(log.debug([null,"XMLHttpRequest",method,"Using XMLHttpRequest"],{agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion}),xhr=new window.XMLHttpRequest,xhr.setContentType=function(contentType){xhr.setRequestHeader("Content-type",contentType)}),xhr.onload=function(){var response=xhr.responseText||xhr.response,status=xhr.status||200;log.debug([null,"XMLHttpRequest",method,"Received sessions parameters"],JSON.parse(response||"{}")),callback(status,JSON.parse(response||"{}"))},xhr.onerror=function(error){log.error([null,"XMLHttpRequest",method,"Failed retrieving information:"],{status:xhr.status}),self._readyState=-1,self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:xhr.status||null,content:"Network error occurred. (Status: "+xhr.status+")",errorCode:self.READY_STATE_CHANGE_ERROR.XML_HTTP_REQUEST_ERROR},self._selectedRoom)},xhr.onprogress=function(){log.debug([null,"XMLHttpRequest",method,"Retrieving information and config from webserver. Url:"],url),log.debug([null,"XMLHttpRequest",method,"Provided parameters:"],params)},xhr.open(method,url,!0),params?(xhr.setContentType("application/json;charset=UTF-8"),xhr.send(JSON.stringify(params))):xhr.send()},Skylink.prototype._parseInfo=function(info){return log.log("Parsing parameter from server",info),info.pc_constraints||info.offer_constraints?(log.debug("Peer connection constraints:",info.pc_constraints),log.debug("Offer constraints:",info.offer_constraints),this._key=info.cid,this._appKeyOwner=info.apiOwner,this._signalingServer=info.ipSigserver,this._signalingServerPort=null,this._isPrivileged=info.isPrivileged,this._autoIntroduce=info.autoIntroduce,this._user={uid:info.username,token:info.userCred,timeStamp:info.timeStamp,streams:[],info:{}},this._room={id:info.room_key,token:info.roomCred,startDateTime:info.start,duration:info.len,connection:{peerConstraints:JSON.parse(info.pc_constraints),peerConfig:null,offerConstraints:JSON.parse(info.offer_constraints),sdpConstraints:{mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}},mediaConstraints:JSON.parse(info.media_constraints)}},this._socketPorts={"http:":info.httpPortList,"https:":info.httpsPortList},this._readyState=2,this._trigger("readyStateChange",this.READY_STATE_CHANGE.COMPLETED,null,this._selectedRoom),void log.info("Parsed parameters from webserver. Ready for web-realtime communication")):void this._trigger("readyStateChange",this.READY_STATE_CHANGE.ERROR,{status:200,content:info.info,errorCode:info.error},self._selectedRoom)},Skylink.prototype._loadInfo=function(){var self=this,adapter=function(){try{return window.AdapterJS||AdapterJS}catch(error){return!1}}();if(!adapter||"function"!=typeof adapter.webRTCReady){var noAdapterErrorMsg="AdapterJS dependency is not loaded or incorrect AdapterJS dependency is used";return void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:noAdapterErrorMsg,errorCode:self.READY_STATE_CHANGE_ERROR.ADAPTER_NO_LOADED},self._selectedRoom)}return window.io?window.XMLHttpRequest?self._path?void adapter.webRTCReady(function(){return window.RTCPeerConnection?(self._readyState=1,self._trigger("readyStateChange",self.READY_STATE_CHANGE.LOADING,null,self._selectedRoom),void self._requestServerInfo("GET",self._path,function(status,response){if(200!==status){var errorMessage="XMLHttpRequest status not OK\nStatus was: "+status;return self._readyState=0,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:status,content:response?response.info||errorMessage:errorMessage,errorCode:response.error||self.READY_STATE_CHANGE_ERROR.INVALID_XMLHTTPREQUEST_STATUS},self._selectedRoom)}self._parseInfo(response)})):(log.error("WebRTC not supported. Please upgrade your browser"),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"WebRTC not available",errorCode:self.READY_STATE_CHANGE_ERROR.NO_WEBRTC_SUPPORT},self._selectedRoom))}):(log.error("Skylink is not initialised. Please call init() first"),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"No API Path is found",errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH},self._selectedRoom)):(log.error("XMLHttpRequest not supported. Please upgrade your browser"),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"XMLHttpRequest not available",errorCode:self.READY_STATE_CHANGE_ERROR.NO_XMLHTTPREQUEST_SUPPORT},self._selectedRoom)):(log.error("Socket.io not loaded. Please load socket.io"),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"Socket.io not found",errorCode:self.READY_STATE_CHANGE_ERROR.NO_SOCKET_IO},self._selectedRoom))},Skylink.prototype._initSelectedRoom=function(room,callback){var self=this;if("function"==typeof room||"undefined"==typeof room)return void log.error("Invalid room provided. Room:",room);var defaultRoom=self._defaultRoom,initOptions={roomServer:self._roomServer,defaultRoom:room||defaultRoom,appKey:self._appKey,region:self._serverRegion,enableDataChannel:self._enableDataChannel,enableIceTrickle:self._enableIceTrickle};self._roomCredentials&&(initOptions.credentials={credentials:self._roomCredentials,duration:self._roomDuration,startDateTime:self._roomStart}),self.init(initOptions,function(error,success){
self._defaultRoom=defaultRoom,callback(error?error:null)})},Skylink.prototype.LOG_LEVEL={DEBUG:4,LOG:3,INFO:2,WARN:1,ERROR:0};var _LOG_KEY="SkylinkJS",_LOG_LEVELS=["error","warn","info","log","debug"],_logLevel=0,_enableDebugMode=!1,_enableDebugStack=!1,_enableDebugTrace=!1,_storedLogs=[],_getStoredLogsFn=function(logLevel){if("undefined"==typeof logLevel)return _storedLogs;for(var returnLogs=[],i=0;i<_storedLogs.length;i++)_storedLogs[i][1]===_LOG_LEVELS[logLevel]&&returnLogs.push(_storedLogs[i]);return returnLogs},_clearAllStoredLogsFn=function(){_storedLogs=[]},_printAllStoredLogsFn=function(){for(var i=0;i<_storedLogs.length;i++){_storedLogs[i][0],"undefined"!==console[_storedLogs[i][1]]?_storedLogs[i][1]:"log",_storedLogs[i][2],_storedLogs[i][3]}};window.SkylinkLogs={getLogs:_getStoredLogsFn,clearAllLogs:_clearAllStoredLogsFn,printAllLogs:_printAllStoredLogsFn};var _logFn=function(logLevel,message,debugObject){var outputLog=_LOG_KEY;if("object"==typeof message){if(outputLog+=message[0]?" ["+message[0]+"] -":" -",outputLog+=message[1]?" <<"+message[1]+">>":"",message[2])if(outputLog+=" ","object"==typeof message[2])for(var i=0;i<message[2].length;i++)outputLog+="("+message[2][i]+")";else outputLog+="("+message[2]+")";outputLog+=" "+message[3]}else outputLog+=" - "+message;if(_enableDebugMode&&_enableDebugStack){var logItem=[new Date,_LOG_LEVELS[logLevel],outputLog];"undefined"!=typeof debugObject&&logItem.push(debugObject),_storedLogs.push(logItem)}if(_logLevel>=logLevel&&(logLevel="undefined"==typeof console[_LOG_LEVELS[logLevel]]?3:logLevel,_enableDebugMode&&_enableDebugTrace)){"undefined"==typeof console.trace?logLevel[3]:"trace";"undefined"!=typeof debugObject?"undefined"!=typeof console.trace:"undefined"!=typeof console.trace}},log={debug:function(message,object){_logFn(4,message,object)},log:function(message,object){_logFn(3,message,object)},info:function(message,object){_logFn(2,message,object)},warn:function(message,object){_logFn(1,message,object)},error:function(message,object){_logFn(0,message,object)}};Skylink.prototype.setLogLevel=function(logLevel){void 0===logLevel&&(logLevel=Skylink.LOG_LEVEL.WARN);for(var level in this.LOG_LEVEL)if(this.LOG_LEVEL[level]===logLevel)return _logLevel=logLevel,void log.log([null,"Log",level,"Log level exists. Level is set"]);log.error([null,"Log",level,"Log level does not exist. Level is not set"])},Skylink.prototype.setDebugMode=function(isDebugMode){return"object"==typeof isDebugMode&&(Object.keys(isDebugMode).length>0?(_enableDebugTrace=!!isDebugMode.trace,_enableDebugStack=!!isDebugMode.storeLogs):(_enableDebugMode=!1,_enableDebugTrace=!1,_enableDebugStack=!1)),isDebugMode===!1?(_enableDebugMode=!1,_enableDebugTrace=!1,void(_enableDebugStack=!1)):(_enableDebugMode=!0,_enableDebugTrace=!0,void(_enableDebugStack=!0))},Skylink.prototype._EVENTS={channelOpen:[],channelClose:[],channelMessage:[],channelError:[],channelRetry:[],socketError:[],readyStateChange:[],handshakeProgress:[],candidateGenerationState:[],peerConnectionState:[],iceConnectionState:[],mediaAccessError:[],mediaAccessFallback:[],mediaAccessSuccess:[],mediaAccessRequired:[],mediaAccessStopped:[],peerJoined:[],peerRestart:[],peerUpdated:[],peerLeft:[],sessionDisconnect:[],incomingStream:[],incomingMessage:[],incomingData:[],incomingDataRequest:[],roomLock:[],dataChannelState:[],dataTransferState:[],systemAction:[],serverPeerJoined:[],serverPeerLeft:[],serverPeerRestart:[],streamEnded:[],streamMuted:[],getPeersStateChange:[],introduceStateChange:[],getConnectionStatusStateChange:[],localMediaMuted:[],candidateProcessingState:[]},Skylink.prototype._onceEvents={},Skylink.prototype._timestamp={socketMessage:null,shareScreen:null,restartConnection:null,lastRestart:null},Skylink.prototype.on=function(eventName,callback){"function"==typeof callback?(this._EVENTS[eventName]=this._EVENTS[eventName]||[],this._EVENTS[eventName].push(callback),log.log([null,"Event",eventName,"Event is subscribed"])):log.error([null,"Event",eventName,"Provided parameter is not a function"])},Skylink.prototype.once=function(eventName,callback,condition,fireAlways){"boolean"==typeof condition&&(fireAlways=condition,condition=null),fireAlways="undefined"!=typeof fireAlways&&fireAlways,condition="function"!=typeof condition?function(){return!0}:condition,"function"==typeof callback?(this._EVENTS[eventName]=this._EVENTS[eventName]||[],this._onceEvents[eventName]=this._onceEvents[eventName]||[],this._onceEvents[eventName].push([callback,condition,fireAlways]),log.log([null,"Event",eventName,"Event is subscribed on condition"])):log.error([null,"Event",eventName,"Provided callback is not a function"])},Skylink.prototype.off=function(eventName,callback){if(void 0===callback)return this._EVENTS[eventName]=[],this._onceEvents[eventName]=[],void log.log([null,"Event",eventName,"All events are unsubscribed"]);for(var arr=this._EVENTS[eventName],once=this._onceEvents[eventName],i=0;i<arr.length;i++)if(arr[i]===callback){log.log([null,"Event",eventName,"Event is unsubscribed"]),arr.splice(i,1);break}if(void 0!==once)for(var j=0;j<once.length;j++)if(once[j][0]===callback){log.log([null,"Event",eventName,"One-time Event is unsubscribed"]),once.splice(j,1);break}},Skylink.prototype._trigger=function(eventName){var args=Array.prototype.slice.call(arguments),arr=this._EVENTS[eventName],once=this._onceEvents[eventName]||null;if(args.shift(),arr)for(var i=0;i<arr.length;i++)try{if(log.log([null,"Event",eventName,"Event is fired"]),arr[i].apply(this,args)===!1)break}catch(error){throw log.error([null,"Event",eventName,"Exception occurred in event:"],error),error}if(once)for(var j=0;j<once.length;j++)if(once[j][1].apply(this,args)===!0){if(log.log([null,"Event",eventName,"Condition is met. Firing event"]),once[j][0].apply(this,args)===!1)break;once[j]&&!once[j][2]&&(log.log([null,"Event",eventName,"Removing event after firing once"]),once.splice(j,1),j--)}else log.log([null,"Event",eventName,"Condition is still not met. Holding event from being fired"]);log.log([null,"Event",eventName,"Event is triggered"])},Skylink.prototype._condition=function(eventName,callback,checkFirst,condition,fireAlways){if("boolean"==typeof condition&&(fireAlways=condition,condition=null),"function"==typeof callback&&"function"==typeof checkFirst){if(checkFirst())return log.log([null,"Event",eventName,"First condition is met. Firing callback"]),void callback();log.log([null,"Event",eventName,"First condition is not met. Subscribing to event"]),this.once(eventName,callback,condition,fireAlways)}else log.error([null,"Event",eventName,"Provided callback or checkFirst is not a function"])},Skylink.prototype._wait=function(callback,condition,intervalTime,fireAlways){if(fireAlways="undefined"!=typeof fireAlways&&fireAlways,"function"==typeof callback&&"function"==typeof condition){if(condition())return log.log([null,"Event",null,"Condition is met. Firing callback"]),void callback();log.log([null,"Event",null,"Condition is not met. Doing a check."]),intervalTime="number"==typeof intervalTime?intervalTime:50;var doWait=setInterval(function(){condition()&&(log.log([null,"Event",null,"Condition is met after waiting. Firing callback"]),fireAlways||clearInterval(doWait),callback())},intervalTime)}else"function"!=typeof callback&&log.error([null,"Event",null,"Provided callback is not a function"]),"function"!=typeof condition&&log.error([null,"Event",null,"Provided condition is not a function"])},Skylink.prototype._throttle=function(func,prop,wait){var self=this,now=(new Date).getTime();self._timestamp[prop]&&now-self._timestamp[prop]<wait?func(!1):(func(!0),self._timestamp[prop]=now)},Skylink.prototype.SOCKET_ERROR={CONNECTION_FAILED:0,RECONNECTION_FAILED:-1,CONNECTION_ABORTED:-2,RECONNECTION_ABORTED:-3,RECONNECTION_ATTEMPT:-4},Skylink.prototype.SOCKET_FALLBACK={NON_FALLBACK:"nonfallback",FALLBACK_PORT:"fallbackPortNonSSL",FALLBACK_SSL_PORT:"fallbackPortSSL",LONG_POLLING:"fallbackLongPollingNonSSL",LONG_POLLING_SSL:"fallbackLongPollingSSL"},Skylink.prototype._socketSession={},Skylink.prototype._socketMessageQueue=[],Skylink.prototype._socketMessageTimeout=null,Skylink.prototype._socketPorts={"http:":[80,3e3],"https:":[443,3443]},Skylink.prototype._channelOpen=!1,Skylink.prototype._signalingServer=null,Skylink.prototype._signalingServerProtocol=window.location.protocol,Skylink.prototype._signalingServerPort=null,Skylink.prototype._socket=null,Skylink.prototype._socketTimeout=0,Skylink.prototype._socketUseXDR=!1,Skylink.prototype._sendChannelMessage=function(message){var self=this,interval=1e3,throughput=16;if(!self._channelOpen||!self._user||!self._socket)return void log.warn([null,"Socket",null,"Dropping of message as Socket connection is not opened or is at incorrect step ->"],message);self._user.sid&&!self._peerMessagesStamps[self._user.sid]&&(self._peerMessagesStamps[self._user.sid]={userData:0,audioMuted:0,videoMuted:0});var checkStampFn=function(statusMessage){return statusMessage.type===self._SIG_MESSAGE_TYPE.UPDATE_USER?!!self._user.sid&&statusMessage.stamp>self._peerMessagesStamps[self._user.sid].userData:statusMessage.type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO?!!self._user.sid&&statusMessage.stamp>self._peerMessagesStamps[self._user.sid].videoMuted:statusMessage.type!==self._SIG_MESSAGE_TYPE.MUTE_AUDIO||!!self._user.sid&&statusMessage.stamp>self._peerMessagesStamps[self._user.sid].audioMuted},setStampFn=function(statusMessage){statusMessage.type===self._SIG_MESSAGE_TYPE.UPDATE_USER?self._peerMessagesStamps[self._user.sid].userData=statusMessage.stamp:statusMessage.type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO?self._peerMessagesStamps[self._user.sid].videoMuted=statusMessage.stamp:statusMessage.type===self._SIG_MESSAGE_TYPE.MUTE_AUDIO&&(self._peerMessagesStamps[self._user.sid].audioMuted=statusMessage.stamp)},setQueueFn=function(){log.debug([null,"Socket",null,"Starting queue timeout"]),self._socketMessageTimeout=setTimeout(function(){return(new Date).getTime()-self._timestamp.socketMessage<=interval?(log.debug([null,"Socket",null,"Restarting queue timeout"]),void setQueueFn()):void startSendingQueuedMessageFn()},interval-((new Date).getTime()-self._timestamp.socketMessage))},triggerEventFn=function(eventMessage){eventMessage.type===self._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE?self._trigger("incomingMessage",{content:eventMessage.data,isPrivate:!1,targetPeerId:null,listOfPeers:Object.keys(self._peerInformations),isDataChannel:!1,senderPeerId:self._user.sid},self._user.sid,self.getPeerInfo(),!0):eventMessage.type===self._SIG_MESSAGE_TYPE.ROOM_LOCK&&(self._roomLocked=!!eventMessage.lock,self._trigger("roomLock",!!eventMessage.lock,self._user.sid,self.getPeerInfo(),!0))},sendGroupMessageFn=function(groupMessageList){if(self._socketMessageTimeout=null,!(self._channelOpen&&self._user&&self._user.sid&&self._socket))return void log.warn([null,"Socket",null,"Dropping of group messages as Socket connection is not opened or is at incorrect step ->"],groupMessageList);for(var strGroupMessageList=[],stamps={userData:0,audioMuted:0,videoMuted:0},k=0;k<groupMessageList.length;k++)checkStampFn(groupMessageList[k])&&(groupMessageList[k].type===self._SIG_MESSAGE_TYPE.UPDATE_USER&&groupMessageList[k].stamp>self._peerMessagesStamps[self._user.sid].userData&&groupMessageList[k].stamp>stamps.userData?stamps.userData=groupMessageList[k].stamp:groupMessageList[k].type===self._SIG_MESSAGE_TYPE.MUTE_AUDIO&&groupMessageList[k].stamp>self._peerMessagesStamps[self._user.sid].audioMuted&&groupMessageList[k].stamp>stamps.audioMuted?stamps.audioMuted=groupMessageList[k].stamp:groupMessageList[k].type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO&&groupMessageList[k].stamp>self._peerMessagesStamps[self._user.sid].videoMuted&&groupMessageList[k].stamp>stamps.videoMuted&&(stamps.videoMuted=groupMessageList[k].stamp));for(var i=0;i<groupMessageList.length;i++)groupMessageList[i].type===self._SIG_MESSAGE_TYPE.UPDATE_USER&&groupMessageList[i].stamp<stamps.userData||groupMessageList[i].type===self._SIG_MESSAGE_TYPE.MUTE_AUDIO&&groupMessageList[i].stamp<stamps.audioMuted||groupMessageList[i].type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO&&groupMessageList[i].stamp<stamps.videoMuted?(log.warn([null,"Socket",null,"Dropping of outdated status message ->"],clone(groupMessageList[i])),groupMessageList.splice(i,1),i--):strGroupMessageList.push(JSON.stringify(groupMessageList[i]));if(strGroupMessageList.length>0){var groupMessage={type:self._SIG_MESSAGE_TYPE.GROUP,lists:strGroupMessageList,mid:self._user.sid,rid:self._room.id};log.debug([null,"Socket",null,"Sending queued messages (max: 16 per group) ->"],groupMessage),self._socket.send(JSON.stringify(groupMessage)),self._timestamp.socketMessage=(new Date).getTime();for(var j=0;j<groupMessageList.length;j++)setStampFn(groupMessageList[j]),triggerEventFn(groupMessageList[j])}},startSendingQueuedMessageFn=function(){self._socketMessageQueue.length>0&&(self._socketMessageQueue.length<throughput?sendGroupMessageFn(self._socketMessageQueue.splice(0,self._socketMessageQueue.length)):(sendGroupMessageFn(self._socketMessageQueue.splice(0,throughput)),setQueueFn()))};if(self._groupMessageList.indexOf(message.type)>-1)if(self._timestamp.socketMessage&&(new Date).getTime()-self._timestamp.socketMessage<=interval)log.warn([null,"Socket",null,"Queueing socket message to prevent message drop ->"],message),self._socketMessageQueue.push(message),self._socketMessageTimeout||setQueueFn();else{if(!checkStampFn(message))return void log.warn([null,"Socket",null,"Dropping of outdated status message ->"],message);self._socketMessageTimeout&&clearTimeout(self._socketMessageTimeout),self._socket.send(JSON.stringify(message)),setStampFn(message),triggerEventFn(message),self._timestamp.socketMessage=(new Date).getTime()}else self._socket.send(JSON.stringify(message))},Skylink.prototype._createSocket=function(type){var self=this,options={forceNew:!0,reconnection:!1},ports=self._socketPorts[self._signalingServerProtocol],connectionType=null;null===self._signalingServerPort?(self._signalingServerPort=ports[0],connectionType=self.SOCKET_FALLBACK.NON_FALLBACK):ports.indexOf(self._signalingServerPort)===ports.length-1?"WebSocket"===type?(type="Polling",self._signalingServerPort=ports[0]):"Polling"===type&&(options.reconnection=!0,options.reconnectionAttempts=4,options.reconectionDelayMax=1e3):self._signalingServerPort=ports[ports.indexOf(self._signalingServerPort)+1];var url=self._signalingServerProtocol+"//"+self._signalingServer+":"+self._signalingServerPort;"WebSocket"===type?options.transports=["websocket"]:"Polling"===type&&(options.transports=["xhr-polling","jsonp-polling","polling"]),self._socket&&(self._socket.removeAllListeners("connect_error"),self._socket.removeAllListeners("reconnect_attempt"),self._socket.removeAllListeners("reconnect_error"),self._socket.removeAllListeners("reconnect_failed"),self._socket.removeAllListeners("connect"),self._socket.removeAllListeners("reconnect"),self._socket.removeAllListeners("error"),self._socket.removeAllListeners("disconnect"),self._socket.removeAllListeners("message"),self._socket.disconnect(),self._socket=null),self._channelOpen=!1,log.log("Opening channel with signaling server url:",{url:url,useXDR:self._socketUseXDR,options:options}),self._socketSession={type:type,options:options,url:url},self._socket=io.connect(url,options),null===connectionType&&(connectionType="http:"===self._signalingServerProtocol?"Polling"===type?self.SOCKET_FALLBACK.LONG_POLLING:self.SOCKET_FALLBACK.FALLBACK_PORT:"Polling"===type?self.SOCKET_FALLBACK.LONG_POLLING_SSL:self.SOCKET_FALLBACK.FALLBACK_SSL_PORT),self._socket.on("connect_error",function(error){self._channelOpen=!1,self._trigger("socketError",self.SOCKET_ERROR.CONNECTION_FAILED,error,connectionType),self._trigger("channelRetry",connectionType,1),options.reconnection===!1&&self._createSocket(type)}),self._socket.on("reconnect_attempt",function(attempt){self._channelOpen=!1,self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_ATTEMPT,attempt,connectionType),self._trigger("channelRetry",connectionType,attempt)}),self._socket.on("reconnect_error",function(error){self._channelOpen=!1,self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_FAILED,error,connectionType)}),self._socket.on("reconnect_failed",function(error){self._channelOpen=!1,self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_ABORTED,error,connectionType)}),self._socket.on("connect",function(){self._channelOpen||(self._channelOpen=!0,self._trigger("channelOpen"),log.log([null,"Socket",null,"Channel opened"]))}),self._socket.on("reconnect",function(){self._channelOpen||(self._channelOpen=!0,self._trigger("channelOpen"),log.log([null,"Socket",null,"Channel opened"]))}),self._socket.on("error",function(error){self._channelOpen=!1,self._trigger("channelError",error),log.error([null,"Socket",null,"Exception occurred:"],error)}),self._socket.on("disconnect",function(){self._channelOpen=!1,self._trigger("channelClose"),log.log([null,"Socket",null,"Channel closed"]),self._inRoom&&(self.leaveRoom(!1),self._trigger("sessionDisconnect",self._user.sid,self.getPeerInfo()))}),self._socket.on("message",function(message){log.log([null,"Socket",null,"Received message"]),self._processSigMessage(message)})},Skylink.prototype._openChannel=function(){var self=this;if(self._channelOpen)return void log.error([null,"Socket",null,"Unable to instantiate a new channel connection as there is already an ongoing channel connection"]);if(self._readyState!==self.READY_STATE_CHANGE.COMPLETED)return void log.error([null,"Socket",null,"Unable to instantiate a new channel connection as readyState is not ready"]);self._forceSSL?self._signalingServerProtocol="https:":self._signalingServerProtocol=window.location.protocol;var socketType="WebSocket";window.WebSocket||(socketType="Polling"),self._signalingServerPort=null,self._createSocket(socketType)},Skylink.prototype._closeChannel=function(){this._channelOpen&&(this._socket&&(this._socket.removeAllListeners("connect_error"),this._socket.removeAllListeners("reconnect_attempt"),this._socket.removeAllListeners("reconnect_error"),this._socket.removeAllListeners("reconnect_failed"),this._socket.removeAllListeners("connect"),this._socket.removeAllListeners("reconnect"),this._socket.removeAllListeners("error"),this._socket.removeAllListeners("disconnect"),this._socket.removeAllListeners("message"),this._socket.disconnect(),this._socket=null),this._channelOpen=!1,this._trigger("channelClose"))},Skylink.prototype.SM_PROTOCOL_VERSION="0.1.1",Skylink.prototype._enableIceRestart="firefox"!==window.webrtcDetectedBrowser||window.webrtcDetectedVersion>=48,Skylink.prototype._SIG_MESSAGE_TYPE={JOIN_ROOM:"joinRoom",IN_ROOM:"inRoom",ENTER:"enter",WELCOME:"welcome",RESTART:"restart",OFFER:"offer",ANSWER:"answer",CANDIDATE:"candidate",BYE:"bye",REDIRECT:"redirect",UPDATE_USER:"updateUserEvent",ROOM_LOCK:"roomLockEvent",MUTE_VIDEO:"muteVideoEvent",MUTE_AUDIO:"muteAudioEvent",PUBLIC_MESSAGE:"public",PRIVATE_MESSAGE:"private",STREAM:"stream",GROUP:"group",GET_PEERS:"getPeers",PEER_LIST:"peerList",INTRODUCE:"introduce",INTRODUCE_ERROR:"introduceError",APPROACH:"approach"},Skylink.prototype._hasMCU=!1,Skylink.prototype._groupMessageList=[Skylink.prototype._SIG_MESSAGE_TYPE.STREAM,Skylink.prototype._SIG_MESSAGE_TYPE.UPDATE_USER,Skylink.prototype._SIG_MESSAGE_TYPE.ROOM_LOCK,Skylink.prototype._SIG_MESSAGE_TYPE.MUTE_AUDIO,Skylink.prototype._SIG_MESSAGE_TYPE.MUTE_VIDEO,Skylink.prototype._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE],Skylink.prototype._hasMCU=!1,Skylink.prototype._receiveOnly=!1,Skylink.prototype._peerMessagesStamps={},Skylink.prototype.sendMessage=function(message,targetPeerId){var listOfPeers=Object.keys(this._peerInformations),isPrivate=!1;if(Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),!this._inRoom||!this._socket||!this._user)return void log.error("Unable to send message as User is not in Room. ->",message);for(var i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];this._peerInformations[peerId]?"MCU"===peerId?(listOfPeers.splice(i,1),i--):isPrivate&&(log.debug([peerId,"Socket",null,"Sending private message to Peer"]),this._sendChannelMessage({cid:this._key,data:message,mid:this._user.sid,rid:this._room.id,target:peerId,type:this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE})):(log.error([peerId,"Socket",null,"Dropping of sending message to Peer as Peer session does not exists"]),listOfPeers.splice(i,1),i--)}return 0===listOfPeers.length?void log.error("Unable to send message as there is no Peers to sent to.",message):void(isPrivate?this._trigger("incomingMessage",{content:message,isPrivate:isPrivate,targetPeerId:targetPeerId||null,listOfPeers:listOfPeers,isDataChannel:!1,senderPeerId:this._user.sid},this._user.sid,this.getPeerInfo(),!0):(log.debug([null,"Socket",null,"Broadcasting message to Peers"]),this._sendChannelMessage({cid:this._key,data:message,mid:this._user.sid,rid:this._room.id,type:this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE})))},Skylink.prototype._processSigMessage=function(messageString){var message=JSON.parse(messageString);if(message.type===this._SIG_MESSAGE_TYPE.GROUP){log.debug("Bundle of "+message.lists.length+" messages");for(var i=0;i<message.lists.length;i++)this._processSingleMessage(JSON.parse(message.lists[i]))}else this._processSingleMessage(message)},Skylink.prototype._processSingleMessage=function(message){this._trigger("channelMessage",message);var origin=message.mid;if(origin&&origin!==this._user.sid||(origin="Server"),log.debug([origin,null,null,"Received from peer ->"],message.type),message.mid===this._user.sid&&message.type!==this._SIG_MESSAGE_TYPE.REDIRECT&&message.type!==this._SIG_MESSAGE_TYPE.IN_ROOM)return void log.debug([origin,null,null,"Ignoring message ->"],message.type);switch(message.type){case this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE:this._publicMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE:this._privateMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.IN_ROOM:this._inRoomHandler(message);break;case this._SIG_MESSAGE_TYPE.ENTER:this._enterHandler(message);break;case this._SIG_MESSAGE_TYPE.WELCOME:this._welcomeHandler(message);break;case this._SIG_MESSAGE_TYPE.RESTART:this._restartHandler(message);break;case this._SIG_MESSAGE_TYPE.OFFER:this._offerHandler(message);break;case this._SIG_MESSAGE_TYPE.ANSWER:this._answerHandler(message);break;case this._SIG_MESSAGE_TYPE.CANDIDATE:this._candidateHandler(message);break;case this._SIG_MESSAGE_TYPE.BYE:this._byeHandler(message);break;case this._SIG_MESSAGE_TYPE.REDIRECT:this._redirectHandler(message);break;case this._SIG_MESSAGE_TYPE.UPDATE_USER:this._updateUserEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_VIDEO:this._muteVideoEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_AUDIO:this._muteAudioEventHandler(message);break;case this._SIG_MESSAGE_TYPE.STREAM:this._streamEventHandler(message);break;case this._SIG_MESSAGE_TYPE.ROOM_LOCK:this._roomLockEventHandler(message);break;case this._SIG_MESSAGE_TYPE.PEER_LIST:this._peerListEventHandler(message);break;case this._SIG_MESSAGE_TYPE.INTRODUCE_ERROR:this._introduceErrorEventHandler(message);break;case this._SIG_MESSAGE_TYPE.APPROACH:this._approachEventHandler(message);break;default:log.error([message.mid,null,null,"Unsupported message ->"],message.type)}},Skylink.prototype._peerListEventHandler=function(message){var self=this;self._peerList=message.result,log.log(["Server",null,message.type,"Received list of peers"],self._peerList),self._trigger("getPeersStateChange",self.GET_PEERS_STATE.RECEIVED,self._user.sid,self._peerList)},Skylink.prototype._introduceErrorEventHandler=function(message){var self=this;log.log(["Server",null,message.type,"Introduce failed. Reason: "+message.reason]),self._trigger("introduceStateChange",self.INTRODUCE_STATE.ERROR,self._user.sid,message.sendingPeerId,message.receivingPeerId,message.reason)},Skylink.prototype._approachEventHandler=function(message){var self=this;log.log(["Server",null,message.type,"Approaching peer"],message.target),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,self._user.sid),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.ENTER,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,userInfo:self._getUserInfo(),receiveOnly:self._receiveOnly,sessionType:self._streams.screenshare?"screensharing":"stream",target:message.target,weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart})},Skylink.prototype._redirectHandler=function(message){if(log.log(["Server",null,message.type,"System action warning:"],{message:message.info,reason:message.reason,action:message.action}),message.action===this.SYSTEM_ACTION.REJECT)for(var key in this._peerConnections)this._peerConnections.hasOwnProperty(key)&&this._removePeer(key);"toClose"===message.reason&&(message.reason="toclose"),this._trigger("systemAction",message.action,message.info,message.reason)},Skylink.prototype._updateUserEventHandler=function(message){var targetMid=message.mid;if(log.log([targetMid,null,message.type,"Peer updated userData:"],message.userData),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].userData)return void log.warn([targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].userData=message.stamp}this._peerInformations[targetMid].userData=message.userData||{},this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._roomLockEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,message.type,"Room lock status:"],message.lock),this._trigger("roomLock",message.lock,targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._muteAudioEventHandler=function(message){var targetMid=message.mid;if(log.log([targetMid,null,message.type,"Peer's audio muted:"],message.muted),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].audioMuted)return void log.warn([targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].audioMuted=message.stamp}this._peerInformations[targetMid].mediaStatus.audioMuted=message.muted,this._trigger("streamMuted",targetMid,this.getPeerInfo(targetMid),!1,this._peerInformations[targetMid].settings.video&&this._peerInformations[targetMid].settings.video.screenshare),this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else log.log([targetMid,message.type,"Peer does not have any user information"])},Skylink.prototype._muteVideoEventHandler=function(message){var targetMid=message.mid;if(log.log([targetMid,null,message.type,"Peer's video muted:"],message.muted),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].videoMuted)return void log.warn([targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].videoMuted=message.stamp}this._peerInformations[targetMid].mediaStatus.videoMuted=message.muted,this._trigger("streamMuted",targetMid,this.getPeerInfo(targetMid),!1,this._peerInformations[targetMid].settings.video&&this._peerInformations[targetMid].settings.video.screenshare),this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._streamEventHandler=function(message){var targetMid=message.mid;if(log.log([targetMid,null,message.type,"Peer's stream status:"],message.status),this._peerInformations[targetMid]){if("ended"===message.status)this._trigger("streamEnded",targetMid,this.getPeerInfo(targetMid),!1,"screensharing"===message.sessionType,message.streamId),this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1),this._peerConnections[targetMid]?(this._peerConnections[targetMid].hasStream=!1,"screensharing"===message.sessionType&&(this._peerConnections[targetMid].hasScreen=!1)):log.log([targetMid,null,message.type,"Peer connection not found"]);else if("check"===message.status&&(!message.streamId||this._hasMCU))return}else log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._byeHandler=function(message){var targetMid=message.mid,selfId=(this._user||{}).sid;selfId!==targetMid?(log.log([targetMid,null,message.type,"Peer has left the room"]),this._removePeer(targetMid)):log.log([targetMid,null,message.type,"Self has left the room"])},Skylink.prototype._privateMessageHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Received private message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!0,targetPeerId:message.target,isDataChannel:!1,senderPeerId:targetMid},targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._publicMessageHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Received public message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!1,targetPeerId:null,isDataChannel:!1,senderPeerId:targetMid},targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._inRoomHandler=function(message){var self=this;log.log(["Server",null,message.type,"User is now in the room and functionalities are now available. Config received:"],message.pc_config),self._room.connection.peerConfig=self._setIceServers(message.pc_config),self._inRoom=!0,self._user.sid=message.sid,self._peerPriorityWeight=(new Date).getTime(),self._trigger("peerJoined",self._user.sid,self.getPeerInfo(),!0),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,self._user.sid),"number"==typeof message.tieBreaker&&(self._peerPriorityWeight=message.tieBreaker),"firefox"===window.webrtcDetectedBrowser&&(log.warn("Decreasing weight for Firefox browser connection"),self._peerPriorityWeight-=1e11),self._streams.screenshare&&self._streams.screenshare.stream?self._trigger("incomingStream",self._user.sid,self._streams.screenshare.stream,!0,self.getPeerInfo()):self._streams.userMedia&&self._streams.userMedia.stream&&self._trigger("incomingStream",self._user.sid,self._streams.userMedia.stream,!0,self.getPeerInfo()),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.ENTER,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,userInfo:self._getUserInfo(),receiveOnly:self._receiveOnly,sessionType:self._streams.screenshare?"screensharing":"stream",weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart})},Skylink.prototype._enterHandler=function(message){var self=this,targetMid=message.mid,userInfo=self._parseUserInfo(message),isNewPeer=!1;log.log([targetMid,"RTCPeerConnection",null,'Peer "enter" received ->'],message),self._peerInformations[targetMid]||(isNewPeer=!0,self._peerInformations[targetMid]=userInfo,self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0},self._addPeer(targetMid,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!1,!1,message.receiveOnly,"screensharing"===message.sessionType),
"MCU"===targetMid?(log.info([targetMid,"RTCPeerConnection",null,"MCU feature has been enabled"]),self._hasMCU=!0,self._trigger("serverPeerJoined",targetMid,self.SERVER_PEER_TYPE.MCU)):self._trigger("peerJoined",targetMid,self.getPeerInfo(targetMid),!1),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,targetMid)),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,receiveOnly:!!self._peerConnections[targetMid]&&!!self._peerConnections[targetMid].receiveOnly,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,userInfo:self._getUserInfo(),target:targetMid,weight:self._peerPriorityWeight,sessionType:self._streams.screenshare?"screensharing":"stream",temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null}),isNewPeer&&self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.WELCOME,targetMid)},Skylink.prototype._restartHandler=function(message){var self=this,targetMid=message.mid,userInfo=self._parseUserInfo(message);return log.log([targetMid,"RTCPeerConnection",null,'Peer "restart" received ->'],message),self._peerInformations[targetMid]?self._hasMCU?(log.warn([targetMid,"RTCPeerConnection",null,"Dropping restart request as MCU does not support re-negotiation. Restart workaround is to re-join Room for Peer."]),void self._trigger("peerRestart",targetMid,self.getPeerInfo(targetMid),!1,!1)):(self._peerInformations[targetMid]=userInfo,self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0},self._peerPriorityWeight>message.weight?(log.debug([targetMid,"RTCPeerConnection",null,"Re-negotiating new offer/answer."]),self._doOffer(targetMid,message.doIceRestart===!0,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!0)):(log.debug([targetMid,"RTCPeerConnection",null,"Waiting for peer to start re-negotiation."]),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,userInfo:self._getUserInfo(),target:targetMid,weight:self._peerPriorityWeight,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:message.doIceRestart===!0,receiveOnly:self._peerConnections[targetMid]&&self._peerConnections[targetMid].receiveOnly,sessionType:self._streams.screenshare?"screensharing":"stream",temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,lastRestart:(new Date).getTime(),explicit:!0,isConnectionRestart:!1})),self._trigger("peerRestart",targetMid,self.getPeerInfo(targetMid),!1,message.doIceRestart===!0),void self._startPeerConnectionHealthCheck(targetMid,!1)):void log.error([targetMid,"RTCPeerConnection",null,"Peer does not have an existing session. Ignoring restart process."])},Skylink.prototype._welcomeHandler=function(message){var self=this,targetMid=message.mid,userInfo=self._parseUserInfo(message),isNewPeer=!1;log.log([targetMid,"RTCPeerConnection",null,'Peer "welcome" received ->'],message),self._peerInformations[targetMid]||(isNewPeer=!0,self._peerInformations[targetMid]=userInfo,self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0},self._addPeer(targetMid,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!1,!1,message.receiveOnly,"screensharing"===message.sessionType),"MCU"===targetMid?(log.info([targetMid,"RTCPeerConnection",null,"MCU feature has been enabled"]),self._hasMCU=!0,self._trigger("serverPeerJoined",targetMid,self.SERVER_PEER_TYPE.MCU)):self._trigger("peerJoined",targetMid,self.getPeerInfo(targetMid),!1),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,targetMid),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.WELCOME,targetMid)),self._hasMCU||self._peerPriorityWeight>message.weight?(log.debug([targetMid,"RTCPeerConnection",null,"Starting negotiation"]),self._doOffer(targetMid,!1,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!0)):(log.debug([targetMid,"RTCPeerConnection",null,"Waiting for peer to start negotiation."]),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,enableIceRestart:self._enableIceRestart,enableDataChannel:self._enableDataChannel,enableIceTrickle:self._enableIceTrickle,os:window.navigator.platform,userInfo:self._getUserInfo(),target:targetMid,weight:self._peerPriorityWeight,sessionType:self._streams.screenshare?"screensharing":"stream",temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null}))},Skylink.prototype._offerHandler=function(message){var self=this,targetMid=message.mid,pc=self._peerConnections[targetMid];if(!pc)return void log.error([targetMid,null,message.type,"Peer connection object not found. Unable to setRemoteDescription for offer"]);if(message.userInfo&&"object"==typeof message.userInfo){var userInfo=self._parseUserInfo(message);self._peerInformations[targetMid].settings=userInfo.settings,self._peerInformations[targetMid].mediaStatus=userInfo.mediaStatus,self._peerInformations[targetMid].userData=userInfo.userData}log.log([targetMid,null,message.type,"Received offer from peer. Session description:"],message.sdp);var offer=new window.RTCSessionDescription({type:message.type,sdp:message.sdp});return log.log([targetMid,"RTCSessionDescription",message.type,"Session description object created"],offer),offer.sdp=self._handleSDPMCUConnectionCase(targetMid,offer,!1),offer.sdp=self._removeSDPFilteredCandidates(targetMid,offer),pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE?void log.warn([targetMid,null,message.type,'Peer connection state is not in "stable" state for re-negotiation. Dropping message.'],{signalingState:pc.signalingState,isRestart:!!message.resend}):pc.processingRemoteSDP?void log.warn([targetMid,"RTCSessionDescription","offer","Dropping of setting local offer as there is another sessionDescription being processed ->"],offer):(pc.processingRemoteSDP=!0,void pc.setRemoteDescription(offer,function(){log.debug([targetMid,"RTCSessionDescription",message.type,"Remote description set"]),pc.setOffer="remote",pc.processingRemoteSDP=!1,self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.OFFER,targetMid),self._addIceCandidateFromQueue(targetMid),self._doAnswer(targetMid)},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),pc.processingRemoteSDP=!1,log.error([targetMid,null,message.type,"Failed setting remote description:"],error)}))},Skylink.prototype._candidateHandler=function(message){var targetMid=message.mid;if(!message.candidate&&!message.id)return void log.warn([targetMid,"RTCIceCandidate",null,"Received invalid ICE candidate message ->"],message);var canId="can-"+(new Date).getTime(),candidateType=message.candidate.split(" ")[7]||"",candidate=new RTCIceCandidate({sdpMLineIndex:message.label,candidate:message.candidate,sdpMid:message.id});if(log.debug([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Received ICE candidate ->"],candidate),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.RECEIVED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),!this._peerConnections[targetMid]||this._peerConnections[targetMid].signalingState===this.PEER_CONNECTION_STATE.CLOSED)return log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping ICE candidate as Peer connection does not exists or is closed"],this._peerConnections[targetMid].signalingState),void this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Failed processing ICE candidate as Peer connection does not exists or is closed."));if(this._filterCandidatesType[candidateType]){if(!this._hasMCU||!this._forceTURN)return log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping received ICE candidate as it matches ICE candidate filtering flag ->"],candidate),void this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Dropping of processing ICE candidate as it matches ICE candidate filtering flag."));log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Not dropping received ICE candidate as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured ->"],candidate)}this._peerConnections[targetMid].remoteDescription&&this._peerConnections[targetMid].remoteDescription.sdp&&this._peerConnections[targetMid].localDescription&&this._peerConnections[targetMid].localDescription.sdp?this._addIceCandidate(targetMid,canId,candidate):this._addIceCandidateToQueue(targetMid,canId,candidate),this._gatheredCandidates[targetMid]||(this._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),this._gatheredCandidates[targetMid].receiving[candidateType].push({sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex,candidate:candidate.candidate})},Skylink.prototype._answerHandler=function(message){var self=this,targetMid=message.mid;log.log([targetMid,null,message.type,"Received answer from peer. Session description:"],message.sdp);var pc=self._peerConnections[targetMid];if(!pc)return void log.error([targetMid,null,message.type,"Peer connection object not found. Unable to setRemoteDescription for answer"]);if(message.userInfo&&"object"==typeof message.userInfo){var userInfo=self._parseUserInfo(message);self._peerInformations[targetMid].settings=userInfo.settings,self._peerInformations[targetMid].mediaStatus=userInfo.mediaStatus,self._peerInformations[targetMid].userData=userInfo.userData}var answer=new window.RTCSessionDescription({type:message.type,sdp:message.sdp});return log.log([targetMid,"RTCSessionDescription",message.type,"Session description object created"],answer),answer.sdp=self._handleSDPMCUConnectionCase(targetMid,answer,!1),answer.sdp=self._removeSDPFilteredCandidates(targetMid,answer),pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_LOCAL_OFFER?void log.warn([targetMid,null,message.type,'Peer connection state is not in "have-local-offer" state for re-negotiation. Dropping message.'],{signalingState:pc.signalingState,isRestart:!!message.restart}):pc.processingRemoteSDP?void log.warn([targetMid,"RTCSessionDescription","answer","Dropping of setting local answer as there is another sessionDescription being processed ->"],answer):(pc.processingRemoteSDP=!0,void pc.setRemoteDescription(answer,function(){log.debug([targetMid,null,message.type,"Remote description set"]),pc.setAnswer="remote",pc.processingRemoteSDP=!1,self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ANSWER,targetMid),self._addIceCandidateFromQueue(targetMid)},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),pc.processingRemoteSDP=!1,log.error([targetMid,null,message.type,"Failed setting remote description:"],{error:error,state:pc.signalingState})}))},Skylink.prototype.VIDEO_CODEC={AUTO:"auto",VP8:"VP8",H264:"H264",VP9:"VP9"},Skylink.prototype.AUDIO_CODEC={AUTO:"auto",ISAC:"ISAC",OPUS:"opus",G722:"G722"},Skylink.prototype.VIDEO_RESOLUTION={QQVGA:{width:160,height:120},HQVGA:{width:240,height:160},QVGA:{width:320,height:240},WQVGA:{width:384,height:240},HVGA:{width:480,height:320},VGA:{width:640,height:480},WVGA:{width:768,height:480},FWVGA:{width:854,height:480},SVGA:{width:800,height:600},DVGA:{width:960,height:640},WSVGA:{width:1024,height:576},HD:{width:1280,height:720},HDPLUS:{width:1600,height:900},FHD:{width:1920,height:1080},QHD:{width:2560,height:1440},WQXGAPLUS:{width:3200,height:1800},UHD:{width:3840,height:2160},UHDPLUS:{width:5120,height:2880},FUHD:{width:7680,height:4320},QUHD:{width:15360,height:8640}},Skylink.prototype.MEDIA_ACCESS_FALLBACK_STATE={FALLBACKING:0,FALLBACKED:1,ERROR:-1},Skylink.prototype._audioFallback=!1,Skylink.prototype._streams={userMedia:null,screenshare:null},Skylink.prototype._streamsDefaultSettings={userMedia:{audio:{stereo:!1},video:{resolution:{width:640,height:480},frameRate:50}},screenshare:{video:!0}},Skylink.prototype._streamsMutedSettings={audioMuted:!1,videoMuted:!1},Skylink.prototype._streamsBandwidthSettings={googleX:{},bAS:{}},Skylink.prototype._streamsStoppedCbs={},Skylink.prototype.getUserMedia=function(options,callback){var self=this;if("function"==typeof options)callback=options,options={audio:!0,video:!0};else if("object"!=typeof options||null===options){if("undefined"!=typeof options){var invalidOptionsError="Please provide a valid options";return log.error(invalidOptionsError,options),void("function"==typeof callback&&callback(new Error(invalidOptionsError),null))}options={audio:!0,video:!0}}else if(!options.audio&&!options.video){var noConstraintOptionsSelectedError="Please select audio or video";return log.error(noConstraintOptionsSelectedError,options),void("function"==typeof callback&&callback(new Error(noConstraintOptionsSelectedError),null))}if("function"==typeof callback){var mediaAccessSuccessFn=function(stream){self.off("mediaAccessError",mediaAccessErrorFn),callback(null,stream)},mediaAccessErrorFn=function(error){self.off("mediaAccessSuccess",mediaAccessSuccessFn),callback(error,null)};self.once("mediaAccessSuccess",mediaAccessSuccessFn,function(stream,isScreensharing){return!isScreensharing}),self.once("mediaAccessError",mediaAccessErrorFn,function(error,isScreensharing){return!isScreensharing})}var settings=self._parseStreamSettings(options);navigator.getUserMedia(settings.getUserMediaSettings,function(stream){settings.mutedSettings.shouldAudioMuted&&(self._streamsMutedSettings.audioMuted=!0),settings.mutedSettings.shouldVideoMuted&&(self._streamsMutedSettings.videoMuted=!0),self._onStreamAccessSuccess(stream,settings,!1,!1)},function(error){self._onStreamAccessError(error,settings,!1,!1)})},Skylink.prototype.sendStream=function(options,callback){var self=this,restartFn=function(stream){if(self._inRoom)self._streams.screenshare||(self._trigger("incomingStream",self._user.sid,stream,!0,self.getPeerInfo()),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)),Object.keys(self._peerConnections).length>0||self._hasMCU?self._refreshPeerConnection(Object.keys(self._peerConnections),!1,function(err,success){return err?(log.error("Failed refreshing connections for sendStream() ->",err),void("function"==typeof callback&&callback(new Error("Failed refreshing connections."),null))):void("function"==typeof callback&&callback(null,stream))}):"function"==typeof callback&&callback(null,stream);else{var notInRoomAgainError="Unable to send stream as user is not in the Room.";log.error(notInRoomAgainError,stream),"function"==typeof callback&&callback(new Error(notInRoomAgainError),null)}};if("object"!=typeof options||null===options){var invalidOptionsError="Provided stream settings is invalid";return log.error(invalidOptionsError,options),void("function"==typeof callback&&callback(new Error(invalidOptionsError),null))}if(!self._inRoom){var notInRoomError="Unable to send stream as user is not in the Room.";return log.error(notInRoomError,options),void("function"==typeof callback&&callback(new Error(notInRoomError),null))}if("function"==typeof options.getAudioTracks||"function"==typeof options.getVideoTracks){var checkActiveTracksFn=function(tracks){for(var t=0;t<tracks.length;t++)if(!(tracks[t].ended||"string"==typeof tracks[t].readyState&&"live"!==tracks[t].readyState))return!0;return!1};if(!checkActiveTracksFn(options.getAudioTracks())&&!checkActiveTracksFn(options.getVideoTracks())){var invalidStreamError="Provided stream object does not have audio or video tracks.";return log.error(invalidStreamError,options),void("function"==typeof callback&&callback(new Error(invalidStreamError),null))}self._onStreamAccessSuccess(options,{settings:{audio:!0,video:!0},getUserMediaSettings:{audio:!0,video:!0}},!1,!1),restartFn(options)}else self.getUserMedia(options,function(err,stream){return err?void("function"==typeof callback&&callback(err,null)):void restartFn(stream)})},Skylink.prototype.stopStream=function(){this._streams.userMedia&&this._stopStreams({userMedia:!0})},Skylink.prototype.muteStream=function(options){var self=this;if("object"!=typeof options)return void log.error("Provided settings is not an object");if(!(self._streams.userMedia&&self._streams.userMedia.stream||self._streams.screenshare&&self._streams.screenshare.stream))return void log.warn("No streams are available to mute / unmute!");var audioMuted="boolean"!=typeof options.audioMuted||options.audioMuted,videoMuted="boolean"!=typeof options.videoMuted||options.videoMuted,hasToggledAudio=!1,hasToggledVideo=!1;if(self._streamsMutedSettings.audioMuted!==audioMuted&&(self._streamsMutedSettings.audioMuted=audioMuted,hasToggledAudio=!0),self._streamsMutedSettings.videoMuted!==videoMuted&&(self._streamsMutedSettings.videoMuted=videoMuted,hasToggledVideo=!0),hasToggledVideo||hasToggledAudio){var streamTracksAvailability=self._muteStreams();hasToggledVideo&&self._inRoom&&self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.MUTE_VIDEO,mid:self._user.sid,rid:self._room.id,muted:self._streamsMutedSettings.videoMuted,stamp:(new Date).getTime()}),hasToggledAudio&&self._inRoom&&setTimeout(function(){self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.MUTE_AUDIO,mid:self._user.sid,rid:self._room.id,muted:self._streamsMutedSettings.audioMuted,stamp:(new Date).getTime()})},hasToggledVideo?1050:0),(streamTracksAvailability.hasVideo&&hasToggledVideo||streamTracksAvailability.hasAudio&&hasToggledAudio)&&(self._trigger("localMediaMuted",{audioMuted:!streamTracksAvailability.hasAudio||self._streamsMutedSettings.audioMuted,videoMuted:!streamTracksAvailability.hasVideo||self._streamsMutedSettings.videoMuted}),self._inRoom&&(self._trigger("streamMuted",self._user.sid,self.getPeerInfo(),!0,self._streams.screenshare&&self._streams.screenshare.stream),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)))}},Skylink.prototype.enableAudio=function(){this.muteStream({audioMuted:!1,videoMuted:this._streamsMutedSettings.videoMuted})},Skylink.prototype.disableAudio=function(){this.muteStream({audioMuted:!0,videoMuted:this._streamsMutedSettings.videoMuted})},Skylink.prototype.enableVideo=function(){this.muteStream({videoMuted:!1,audioMuted:this._streamsMutedSettings.audioMuted})},Skylink.prototype.disableVideo=function(){this.muteStream({videoMuted:!0,audioMuted:this._streamsMutedSettings.audioMuted})},Skylink.prototype.shareScreen=function(enableAudio,callback){var self=this,enableAudioSettings={useinbandfec:null,usedtx:null,stereo:!0};"function"==typeof enableAudio?(callback=enableAudio,enableAudio=!0):enableAudio&&"object"==typeof enableAudio&&(enableAudioSettings.usedtx="boolean"==typeof enableAudio.usedtx?enableAudio.usedtx:null,enableAudioSettings.useinbandfec="boolean"==typeof enableAudio.useinbandfec?enableAudio.useinbandfec:null,enableAudioSettings.stereo=enableAudio.stereo===!0),self._throttle(function(runFn){if(!runFn){var throttleLimitError="Unable to run as throttle interval has not reached (10s).";return log.error(throttleLimitError),void("function"==typeof callback&&callback(new Error(throttleLimitError),null))}var settings={settings:{audio:!!(enableAudio===!0||enableAudio&&"object"==typeof enableAudio)&&enableAudioSettings,video:{screenshare:!0,exactConstraints:!1}},getUserMediaSettings:{video:{mediaSource:"window"}}},mediaAccessSuccessFn=function(stream){self.off("mediaAccessError",mediaAccessErrorFn),self._inRoom?(self._trigger("incomingStream",self._user.sid,stream,!0,self.getPeerInfo()),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0),Object.keys(self._peerConnections).length>0||self._hasMCU?self._refreshPeerConnection(Object.keys(self._peerConnections),!1,function(err,success){return err?(log.error("Failed refreshing connections for shareScreen() ->",err),void("function"==typeof callback&&callback(new Error("Failed refreshing connections."),null))):void("function"==typeof callback&&callback(null,stream))}):"function"==typeof callback&&callback(null,stream)):"function"==typeof callback&&callback(null,stream)},mediaAccessErrorFn=function(error){self.off("mediaAccessSuccess",mediaAccessSuccessFn),"function"==typeof callback&&callback(error,null)};self.once("mediaAccessSuccess",mediaAccessSuccessFn,function(stream,isScreensharing){return isScreensharing}),self.once("mediaAccessError",mediaAccessErrorFn,function(error,isScreensharing){return isScreensharing});try{enableAudio&&"firefox"===window.webrtcDetectedBrowser&&(settings.getUserMediaSettings.audio=!0),navigator.getUserMedia(settings.getUserMediaSettings,function(stream){return"firefox"!==window.webrtcDetectedBrowser&&enableAudio?void navigator.getUserMedia({audio:!0},function(audioStream){try{audioStream.addTrack(stream.getVideoTracks()[0]),self.once("mediaAccessSuccess",function(){self._streams.screenshare.streamClone=stream},function(stream,isScreensharing){return isScreensharing}),self._onStreamAccessSuccess(audioStream,settings,!0,!1)}catch(error){log.error("Failed retrieving audio stream for screensharing stream",error),self._onStreamAccessSuccess(stream,settings,!0,!1)}},function(error){log.error("Failed retrieving audio stream for screensharing stream",error),self._onStreamAccessSuccess(stream,settings,!0,!1)}):void self._onStreamAccessSuccess(stream,settings,!0,!1)},function(error){self._onStreamAccessError(error,settings,!0,!1)})}catch(error){self._onStreamAccessError(error,settings,!0,!1)}},"shareScreen",1e4)},Skylink.prototype.stopScreen=function(){this._streams.screenshare&&(this._stopStreams({screenshare:!0}),this._inRoom&&(this._streams.userMedia&&this._streams.userMedia.stream&&(this._trigger("incomingStream",this._user.sid,this._streams.userMedia.stream,!0,this.getPeerInfo()),this._trigger("peerUpdated",this._user.sid,this.getPeerInfo(),!0)),this._refreshPeerConnection(Object.keys(this._peerConnections),!1)))},Skylink.prototype._muteStreams=function(){var self=this,hasVideo=!1,hasAudio=!1,muteFn=function(stream){for(var audioTracks=stream.getAudioTracks(),videoTracks=stream.getVideoTracks(),a=0;a<audioTracks.length;a++)audioTracks[a].enabled=!self._streamsMutedSettings.audioMuted,hasAudio=!0;for(var v=0;v<videoTracks.length;v++)videoTracks[v].enabled=!self._streamsMutedSettings.videoMuted,hasVideo=!0};return self._streams.userMedia&&self._streams.userMedia.stream&&muteFn(self._streams.userMedia.stream),self._streams.screenshare&&self._streams.screenshare.stream&&muteFn(self._streams.screenshare.stream),self._streams.screenshare&&self._streams.screenshare.streamClone&&muteFn(self._streams.screenshare.streamClone),log.debug("Updated Streams muted status ->",self._streamsMutedSettings),{hasVideo:hasVideo,hasAudio:hasAudio}},Skylink.prototype._stopStreams=function(options){var self=this,stopFn=function(stream){var streamId=stream.id||stream.label;log.debug([null,"MediaStream",streamId,"Stopping Stream ->"],stream);try{for(var audioTracks=stream.getAudioTracks(),videoTracks=stream.getVideoTracks(),a=0;a<audioTracks.length;a++)audioTracks[a].stop();for(var v=0;v<videoTracks.length;v++)videoTracks[v].stop()}catch(error){stream.stop()}self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])},stopUserMedia=!1,stopScreenshare=!1,hasStoppedMedia=!1;"object"==typeof options&&(stopUserMedia=options.userMedia===!0,stopScreenshare=options.screenshare===!0),stopUserMedia&&self._streams.userMedia&&(self._streams.userMedia.stream&&stopFn(self._streams.userMedia.stream),self._streams.userMedia=null,hasStoppedMedia=!0),stopScreenshare&&self._streams.screenshare&&(self._streams.screenshare.streamClone&&stopFn(self._streams.screenshare.streamClone),self._streams.screenshare.stream&&stopFn(self._streams.screenshare.stream),self._streams.screenshare=null,hasStoppedMedia=!0),self._inRoom&&hasStoppedMedia&&self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0),log.log("Stopping Streams with settings ->",options)},Skylink.prototype._parseStreamSettings=function(options){var settings={settings:{audio:!1,video:!1},mutedSettings:{shouldAudioMuted:!1,shouldVideoMuted:!1},getUserMediaSettings:{audio:!1,video:!1}};return options.audio&&(settings.settings.audio={stereo:!1,useinbandfec:null,usedtx:null,maxplaybackrate:null,deviceId:null,optional:null,exactConstraints:!!options.useExactConstraints},settings.getUserMediaSettings.audio={},"boolean"==typeof options.audio.stereo&&(settings.settings.audio.stereo=options.audio.stereo),"boolean"==typeof options.audio.useinbandfec&&(settings.settings.audio.useinbandfec=options.audio.useinbandfec),"boolean"==typeof options.audio.usedtx&&(settings.settings.audio.usedtx=options.audio.usedtx),"number"==typeof options.audio.maxplaybackrate&&options.audio.maxplaybackrate>=8e3&&options.audio.maxplaybackrate<=48e3&&(settings.settings.audio.maxplaybackrate=options.audio.maxplaybackrate),"boolean"==typeof options.audio.mute&&(settings.mutedSettings.shouldAudioMuted=options.audio.mute),Array.isArray(options.audio.optional)&&(settings.settings.audio.optional=clone(options.audio.optional),settings.getUserMediaSettings.audio.optional=clone(options.audio.optional)),options.audio.deviceId&&"string"==typeof options.audio.deviceId&&"firefox"!==window.webrtcDetectedBrowser&&(settings.settings.audio.deviceId=options.audio.deviceId,options.useExactConstraints?settings.getUserMediaSettings.audio.deviceId={exact:options.audio.deviceId}:(Array.isArray(settings.getUserMediaSettings.audio.optional)||(settings.getUserMediaSettings.audio.optional=[]),settings.getUserMediaSettings.audio.optional.push({sourceId:options.audio.deviceId}))),"edge"===window.webrtcDetectedBrowser&&(settings.getUserMediaSettings.audio=!0)),options.video&&(settings.settings.video={resolution:clone(this.VIDEO_RESOLUTION.VGA),screenshare:!1,deviceId:null,optional:null,frameRate:null,exactConstraints:!!options.useExactConstraints},settings.getUserMediaSettings.video={},"boolean"==typeof options.video.mute&&(settings.mutedSettings.shouldVideoMuted=options.video.mute),Array.isArray(options.video.optional)&&(settings.settings.video.optional=clone(options.video.optional),settings.getUserMediaSettings.video.optional=clone(options.video.optional)),options.video.deviceId&&"string"==typeof options.video.deviceId&&"firefox"!==window.webrtcDetectedBrowser&&(settings.settings.video.deviceId=options.video.deviceId,options.useExactConstraints?settings.getUserMediaSettings.video.deviceId={exact:options.video.deviceId}:(Array.isArray(settings.getUserMediaSettings.video.optional)||(settings.getUserMediaSettings.video.optional=[]),settings.getUserMediaSettings.video.optional.push({sourceId:options.video.deviceId}))),options.video.resolution&&"object"==typeof options.video.resolution&&("number"==typeof options.video.resolution.width&&(settings.settings.video.resolution.width=options.video.resolution.width),"number"==typeof options.video.resolution.height&&(settings.settings.video.resolution.height=options.video.resolution.height)),options.useExactConstraints?(settings.getUserMediaSettings.video.width={exact:settings.settings.video.resolution.width},settings.getUserMediaSettings.video.height={exact:settings.settings.video.resolution.height},"number"==typeof options.video.frameRate&&(settings.settings.video.frameRate=options.video.frameRate,settings.getUserMediaSettings.video.frameRate={exact:options.video.frameRate})):(settings.getUserMediaSettings.video.mandatory={maxWidth:settings.settings.video.resolution.width,maxHeight:settings.settings.video.resolution.height},"number"==typeof options.video.frameRate&&["IE","safari"].indexOf(window.webrtcDetectedBrowser)===-1&&(settings.settings.video.frameRate=options.video.frameRate,settings.getUserMediaSettings.video.mandatory.maxFrameRate=options.video.frameRate)),"edge"===window.webrtcDetectedBrowser&&(settings.getUserMediaSettings.video=!0)),settings},Skylink.prototype._onStreamAccessSuccess=function(stream,settings,isScreenSharing,isAudioFallback){var self=this,streamId=stream.id||stream.label;if(log.log([null,"MediaStream",streamId,"Has access to stream ->"],stream),!isScreenSharing&&self._streams.userMedia?self._stopStreams({userMedia:!0,screenshare:!1}):isScreenSharing&&self._streams.screenshare&&self._stopStreams({userMedia:!1,screenshare:!0}),self._streamsStoppedCbs[streamId]=function(){log.log([null,"MediaStream",streamId,"Stream has ended"]),self._trigger("mediaAccessStopped",!!isScreenSharing,!!isAudioFallback,streamId),self._inRoom&&(log.debug([null,"MediaStream",streamId,"Sending Stream ended status to Peers"]),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.STREAM,mid:self._user.sid,rid:self._room.id,cid:self._key,sessionType:isScreenSharing?"screensharing":"stream",streamId:streamId,status:"ended"}),self._trigger("streamEnded",self._user.sid,self.getPeerInfo(),!0,!!isScreenSharing,streamId),isScreenSharing&&self._streams.screenshare&&self._streams.screenshare.stream&&(self._streams.screenshare.stream.id||self._streams.screenshare.stream.label)===streamId?self._streams.screenshare=null:!isScreenSharing&&self._streams.userMedia&&self._streams.userMedia.stream&&(self._streams.userMedia.stream.id||self._streams.userMedia.stream.label)===streamId&&(self._streams.userMedia=null))},["chrome","opera"].indexOf(window.webrtcDetectedBrowser)>-1?stream.oninactive=function(){self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])}:"firefox"===window.webrtcDetectedBrowser?stream.endedInterval=setInterval(function(){"undefined"==typeof stream.recordedTime&&(stream.recordedTime=0),stream.recordedTime===stream.currentTime?(clearInterval(stream.endedInterval),self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])):stream.recordedTime=stream.currentTime},1e3):stream.onended=function(){self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])},settings.settings.audio&&0===stream.getAudioTracks().length||settings.settings.video&&0===stream.getVideoTracks().length){var tracksNotSameError="Expected audio tracks length with "+(settings.settings.audio?"1":"0")+" and video tracks length with "+(settings.settings.video?"1":"0")+" but received audio tracks length with "+stream.getAudioTracks().length+" and video tracks length with "+stream.getVideoTracks().length;log.warn([null,"MediaStream",streamId,tracksNotSameError]);var requireAudio=!!settings.settings.audio,requireVideo=!!settings.settings.video;settings.settings.audio&&0===stream.getAudioTracks().length&&(settings.settings.audio=!1),settings.settings.video&&0===stream.getVideoTracks().length&&(settings.settings.video=!1),self._trigger("mediaAccessFallback",{error:new Error(tracksNotSameError),diff:{video:{expected:requireVideo?1:0,received:stream.getVideoTracks().length},audio:{expected:requireAudio?1:0,received:stream.getAudioTracks().length}}},self.MEDIA_ACCESS_FALLBACK_STATE.FALLBACKED,!!isScreenSharing,!!isAudioFallback,streamId)}self._streams[isScreenSharing?"screenshare":"userMedia"]={stream:stream,settings:settings.settings,constraints:settings.getUserMediaSettings},self._muteStreams(),
self._trigger("mediaAccessSuccess",stream,!!isScreenSharing,!!isAudioFallback,streamId)},Skylink.prototype._onStreamAccessError=function(error,settings,isScreenSharing){var self=this;return!isScreenSharing&&settings.settings.audio&&settings.settings.video&&self._audioFallback?(log.debug("Fallbacking to retrieve audio only Stream"),self._trigger("mediaAccessFallback",{error:error,diff:null},self.MEDIA_ACCESS_FALLBACK_STATE.FALLBACKING,!1,!0),void navigator.getUserMedia({audio:!0},function(stream){self._onStreamAccessSuccess(stream,settings,!1,!0)},function(error){log.error("Failed fallbacking to retrieve audio only Stream ->",error),self._trigger("mediaAccessError",error,!1,!0),self._trigger("mediaAccessFallback",{error:error,diff:null},self.MEDIA_ACCESS_FALLBACK_STATE.ERROR,!1,!0)})):(log.error("Failed retrieving "+(isScreenSharing?"screensharing":"camera")+" Stream ->",error),void self._trigger("mediaAccessError",error,!!isScreenSharing,!1))},Skylink.prototype._onRemoteStreamAdded=function(targetMid,stream,isScreenSharing){var self=this;return self._peerInformations[targetMid]?(log.log([targetMid,"MediaStream",stream.id,"Received remote stream ->"],stream),isScreenSharing&&log.log([targetMid,"MediaStream",stream.id,"Peer is having a screensharing session with user"]),self._trigger("incomingStream",targetMid,stream,!1,self.getPeerInfo(targetMid)),void self._trigger("peerUpdated",targetMid,self.getPeerInfo(targetMid),!1)):void log.warn([targetMid,"MediaStream",stream.id,"Received remote stream when peer is not connected. Ignoring stream ->"],stream)},Skylink.prototype._addLocalMediaStreams=function(peerId){var self=this;try{log.log([peerId,null,null,"Adding local stream"]);var pc=self._peerConnections[peerId];if(pc)if(pc.signalingState!==self.PEER_CONNECTION_STATE.CLOSED){var updateStreamFn=function(updatedStream){for(var hasStream=!1,streams=pc.getLocalStreams(),i=0;i<streams.length;i++)null===updatedStream||streams[i].id!==updatedStream.id?pc.removeStream(streams[i]):hasStream=!0;null===updatedStream||hasStream||pc.addStream(updatedStream)};self._streams.screenshare&&self._streams.screenshare.stream?(log.debug([peerId,"MediaStream",null,"Sending screen"],self._streams.screenshare.stream),updateStreamFn(self._streams.screenshare.stream)):self._streams.userMedia&&self._streams.userMedia.stream?(log.debug([peerId,"MediaStream",null,"Sending stream"],self._streams.userMedia.stream),updateStreamFn(self._streams.userMedia.stream)):(log.warn([peerId,"MediaStream",null,"No media to send. Will be only receiving"]),updateStreamFn(null))}else log.warn([peerId,"MediaStream",null,"Not adding any stream as signalingState is closed"]);else log.warn([peerId,"MediaStream",self._mediaStream,"Not adding stream as peerconnection object does not exists"])}catch(error){(error.message||"").indexOf("already added")>-1?log.warn([peerId,null,null,"Not re-adding stream as LocalMediaStream is already added"],error):log.error([peerId,null,null,"Failed adding local stream"],error)}},Skylink.prototype._selectedAudioCodec="auto",Skylink.prototype._selectedVideoCodec="auto",Skylink.prototype._disableVideoFecCodecs=!1,Skylink.prototype._disableComfortNoiseCodec=!1,Skylink.prototype._setSDPOpusConfig=function(targetMid,sessionDescription){var sdpLines=sessionDescription.sdp.split("\r\n"),payload=null,appendFmtpLineAtIndex=-1,userAudioSettings=this.getPeerInfo().settings.audio,opusSettings={useinbandfec:null,usedtx:null,maxplaybackrate:null,stereo:!1};userAudioSettings&&"object"==typeof userAudioSettings&&(opusSettings.stereo=userAudioSettings.stereo===!0,opusSettings.useinbandfec="boolean"==typeof userAudioSettings.useinbandfec?userAudioSettings.useinbandfec:null,opusSettings.usedtx="boolean"==typeof userAudioSettings.usedtx?userAudioSettings.usedtx:null,opusSettings.maxplaybackrate="number"==typeof userAudioSettings.maxplaybackrate?userAudioSettings.maxplaybackrate:null);for(var i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("a=rtpmap:")&&sdpLines[i].toLowerCase().indexOf("opus/48000")>0){payload=(sdpLines[i].split(" ")[0]||"").split(":")[1]||null,appendFmtpLineAtIndex=i;break}if(!payload)return log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Failed to find OPUS payload. Not configuring options."]),sessionDescription.sdp;for(var j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("a=fmtp:"+payload)){for(var opusConfigs=(sdpLines[j].split("a=fmtp:"+payload)[1]||"").replace(/\s/g,"").split(";"),updatedOpusParams="",k=0;k<opusConfigs.length;k++)if(opusConfigs[k]&&opusConfigs[k].indexOf("=")>0){var params=opusConfigs[k].split("=");["useinbandfec","usedtx","sprop-stereo","stereo","maxplaybackrate"].indexOf(params[0])>-1?"useinbandfec"===params[0]&&"1"===params[1]&&null===opusSettings.useinbandfec?(log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Received OPUS useinbandfec as true by default."]),opusSettings.useinbandfec=!0):"usedtx"===params[0]&&"1"===params[1]&&null===opusSettings.usedtx?(log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Received OPUS usedtx as true by default."]),opusSettings.usedtx=!0):"maxplaybackrate"===params[0]&&parseInt(params[1]||"0",10)>0&&null===opusSettings.maxplaybackrate&&(log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Received OPUS maxplaybackrate as "+params[1]+" by default."]),opusSettings.maxplaybackrate=params[1]):updatedOpusParams+=opusConfigs[k]+";"}opusSettings.stereo===!0&&(updatedOpusParams+="stereo=1;"),opusSettings.useinbandfec===!0&&(updatedOpusParams+="useinbandfec=1;"),opusSettings.usedtx===!0&&(updatedOpusParams+="usedtx=1;"),opusSettings.maxplaybackrate&&(updatedOpusParams+="maxplaybackrate="+opusSettings.maxplaybackrate+";"),log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Updated OPUS parameters ->"],updatedOpusParams),sdpLines[j]="a=fmtp:"+payload+" "+updatedOpusParams,appendFmtpLineAtIndex=-1;break}if(appendFmtpLineAtIndex>0){var newFmtpLine="a=fmtp:"+payload+" ";opusSettings.stereo===!0&&(newFmtpLine+="stereo=1;"),opusSettings.useinbandfec===!0&&(newFmtpLine+="useinbandfec=1;"),opusSettings.usedtx===!0&&(newFmtpLine+="usedtx=1;"),opusSettings.maxplaybackrate&&(newFmtpLine+="maxplaybackrate="+opusSettings.maxplaybackrate+";"),log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Created OPUS parameters ->"],newFmtpLine),sdpLines.splice(appendFmtpLineAtIndex+1,0,newFmtpLine)}return sdpLines.join("\r\n")},Skylink.prototype._setSDPBitrate=function(targetMid,sessionDescription){var sdpLines=sessionDescription.sdp.split("\r\n"),parseFn=function(type,bw){if(!("number"==typeof bw&&bw>0))return void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not limiting "'+type+'" bandwidth']);var mLineType=type,mLineIndex=-1;"data"===type&&(mLineType="application");for(var i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="+mLineType))mLineIndex=i;else if(mLineIndex>0){if(0===sdpLines[i].indexOf("m="))return void log.error([targetMid,"RTCSessionDesription",sessionDescription.type,'Failed setting "'+type+'" bandwidth as c-line is missing.']);if(0===sdpLines[i].indexOf("c="))return log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Limiting maximum sending "'+type+'" bandwidth ->'],bw),void sdpLines.splice(i+1,0,"firefox"===window.webrtcDetectedBrowser?"b=TIAS:"+1024*bw:"b=AS:"+bw)}};if(parseFn("audio",this._streamsBandwidthSettings.bAS.audio),parseFn("video",this._streamsBandwidthSettings.bAS.video),parseFn("data",this._streamsBandwidthSettings.bAS.data),"number"==typeof this._streamsBandwidthSettings.googleX.min&&this._streamsBandwidthSettings.googleX.min>0||"number"==typeof this._streamsBandwidthSettings.googleX.max&&"number"===this._streamsBandwidthSettings.googleX.max){for(var codec=null,mVideoLineIndex=-1,j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("m=video"))codec=sdpLines[j].split(" ")[3],mVideoLineIndex=j;else if(codec){if(0===sdpLines[j].indexOf("m="))break;if(0===sdpLines[j].indexOf("a=fmtp:"+codec)&&sdpLines[j].indexOf("x-google-")>0){sdpLines.splice(j,1),j--;continue}}if(codec&&mVideoLineIndex>0){var xGoogleParams="";"number"==typeof this._streamsBandwidthSettings.googleX.min&&(xGoogleParams+="x-google-min-bitrate="+this._streamsBandwidthSettings.googleX.min+";"),"number"==typeof this._streamsBandwidthSettings.googleX.max&&(xGoogleParams+="x-google-max-bitrate="+this._streamsBandwidthSettings.googleX.max+";"),sdpLines.splice(mVideoLineIndex+(sdpLines[mVideoLineIndex+1]&&0===sdpLines[mVideoLineIndex+1].indexOf("b=AS:")?2:1),0,"a=fmtp:"+codec+" "+xGoogleParams)}}return sdpLines.join("\r\n")},Skylink.prototype._setSDPCodec=function(targetMid,sessionDescription){var sdpLines=sessionDescription.sdp.split("\r\n"),parseFn=function(type,codec){if("auto"===codec)return void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not preferring any codec for "'+type+'" streaming. Using browser selection.']);for(var i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("a=rtpmap:")&&sdpLines[i].toLowerCase().indexOf(codec.toLowerCase())>0){var payload=sdpLines[i].split(":")[1].split(" ")[0]||null;if(!payload)return void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not preferring "'+codec+'" for "'+type+'" streaming as payload is not found.']);for(var j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("m="+type)){log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Preferring "'+codec+'" for "'+type+'" streaming.']);var parts=sdpLines[j].split(" ");parts.indexOf(payload)>=3&&parts.splice(parts.indexOf(payload),1),parts.splice(3,0,payload),sdpLines[j]=parts.join(" ");break}}};return parseFn("audio",this._selectedAudioCodec),parseFn("video",this._selectedVideoCodec),sdpLines.join("\r\n")},Skylink.prototype._removeSDPFirefoxH264Pref=function(targetMid,sessionDescription){return log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing Firefox experimental H264 flag to ensure interopability reliability"]),sessionDescription.sdp.replace(/a=fmtp:0 profile-level-id=0x42e00c;packetization-mode=1\r\n/g,"")},Skylink.prototype._addSDPMediaStreamTrackIDs=function(targetMid,sessionDescription){if(!(this._peerConnections[targetMid]&&this._peerConnections[targetMid].getLocalStreams().length>0))return log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Not enforcing MediaStream IDs as no Streams is sent."]),sessionDescription.sdp;var sdpLines=sessionDescription.sdp.split("\r\n"),localStream=(((this._peerInformations[targetMid]||{}).agent||{}).name||"",this._peerConnections[targetMid].getLocalStreams()[0]),localStreamId=localStream.id||localStream.label,parseFn=function(type,tracks){if(0===tracks.length)return void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not enforcing "'+type+'" MediaStreamTrack IDs as no Stream "'+type+'" tracks is sent.']);for(var trackId=tracks[0].id||tracks[0].label,ssrcId=null,hasReachedType=!1,i=0;i<sdpLines.length;i++)if(0!==sdpLines[i].indexOf("m="+type)){if(hasReachedType&&0===sdpLines[i].indexOf("a=ssrc:")){ssrcId=(sdpLines[i].split(":")[1]||"").split(" ")[0]||null;var msidLine="a=ssrc:"+ssrcId+" msid:"+localStreamId+" "+trackId,mslabelLine="a=ssrc:"+ssrcId+" mslabel:default",labelLine="a=ssrc:"+ssrcId+" label:"+trackId;sdpLines.indexOf(msidLine)===-1&&(sdpLines.splice(i+1,0,msidLine),i++),sdpLines.indexOf(mslabelLine)===-1&&(sdpLines.splice(i+1,0,mslabelLine),i++),sdpLines.indexOf(labelLine)===-1&&(sdpLines.splice(i+1,0,labelLine),i++);break}}else{if(hasReachedType)break;hasReachedType=!0}};return parseFn("audio",localStream.getAudioTracks()),parseFn("video",localStream.getVideoTracks()),sdpLines.join("\r\n")},Skylink.prototype._removeSDPH264VP9AptRtxForOlderPlugin=function(targetMid,sessionDescription){var removeVP9AptRtxPayload=!1,agent=(this._peerInformations[targetMid]||{}).agent||{};if(agent.pluginVersion){var parts=agent.pluginVersion.split(".");removeVP9AptRtxPayload=parseInt(parts[0],10)>=0&&parseInt(parts[1],10)>=8&&parseInt(parts[2],10)>=870}return["chrome","opera"].indexOf(window.webrtcDetectedBrowser)>-1&&removeVP9AptRtxPayload&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing VP9/H264 apt= and rtx payload lines causing connectivity issues"]),sessionDescription.sdp=sessionDescription.sdp.replace(/a=rtpmap:\d+ rtx\/\d+\r\na=fmtp:\d+ apt=101\r\n/g,""),sessionDescription.sdp=sessionDescription.sdp.replace(/a=rtpmap:\d+ rtx\/\d+\r\na=fmtp:\d+ apt=107\r\n/g,"")),sessionDescription.sdp},Skylink.prototype._removeSDPCodecs=function(targetMid,sessionDescription){var audioSettings=this.getPeerInfo().settings.audio,parseFn=function(type,codec){var payloadList=sessionDescription.sdp.match(new RegExp("a=rtpmap:(\\d*)\\ "+codec+".*","gi"));if(!(Array.isArray(payloadList)&&payloadList.length>0))return void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not removing "'+codec+'" as it does not exists.']);for(var i=0;i<payloadList.length;i++){var payload=payloadList[i].split(" ")[0].split(":")[1];log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "'+codec+'" payload ->'],payload),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=rtpmap:"+payload+"\\ .*\\r\\n","g"),""),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=fmtp:"+payload+"\\ .*\\r\\n","g"),""),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=rtpmap:\\d+ rtx\\/\\d+\\r\\na=fmtp:\\d+ apt="+payload+"\\r\\n","g"),"");for(var sdpLines=sessionDescription.sdp.split("\r\n"),j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("m="+type)){var parts=sdpLines[j].split(" ");parts.indexOf(payload)>=3&&parts.splice(parts.indexOf(payload),1),sdpLines[j]=parts.join(" ");break}sessionDescription.sdp=sdpLines.join("\r\n")}};return this._disableVideoFecCodecs&&(this._hasMCU?log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not removing "ulpfec" or "red" codecs as connected to MCU to prevent connectivity issues.']):(parseFn("video","red"),parseFn("video","ulpfec"))),this._disableComfortNoiseCodec&&audioSettings&&"object"==typeof audioSettings&&audioSettings.stereo&&parseFn("audio","CN"),sessionDescription.sdp},Skylink.prototype._getSDPSelectedCodec=function(targetMid,sessionDescription,type){if(!sessionDescription||!sessionDescription.sdp)return null;for(var sdpLines=sessionDescription.sdp.split("\r\n"),selectedCodecInfo={name:null,implementation:null,payloadType:null},i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="+type)){var parts=sdpLines[i].split(" ");if(parts.length<4)break;selectedCodecInfo.payloadType=parseInt(parts[3],10)}else if(null!==selectedCodecInfo.payloadType&&0===sdpLines[i].indexOf("a=rtpmap:"+selectedCodecInfo.payloadType+" ")){selectedCodecInfo.name=(sdpLines[i].split(" ")[1]||"").split("/")[0]||"";break}return log.debug([targetMid,"RTCSessionDesription",sessionDescription.type,'Parsing session description "'+type+'" codecs ->'],selectedCodecInfo),selectedCodecInfo},Skylink.prototype._removeSDPFilteredCandidates=function(targetMid,sessionDescription){return this._forceTURN&&this._hasMCU?(log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Not filtering ICE candidates as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured"]),sessionDescription.sdp):(this._filterCandidatesType.host&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "host" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*host.*\r\n/g,"")),this._filterCandidatesType.srflx&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "srflx" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*srflx.*\r\n/g,"")),this._filterCandidatesType.relay&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "relay" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*relay.*\r\n/g,"")),sessionDescription.sdp)},Skylink.prototype._handleSDPMCUConnectionCase=function(targetMid,sessionDescription,isLocal){return this._hasMCU?(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Handling MCU connection case."]),isLocal?"MCU"===targetMid?sessionDescription.sdp=sessionDescription.sdp.replace(/a=sendrecv/gi,"a=sendonly"):sessionDescription.sdp=sessionDescription.sdp.replace(/a=sendrecv/gi,"a=recvonly"):"MCU"===targetMid&&sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER&&"firefox"===window.webrtcDetectedBrowser&&(sessionDescription.sdp=sessionDescription.sdp.replace(/ generation 0/g,""),sessionDescription.sdp=sessionDescription.sdp.replace(/ udp /g," UDP ")),sessionDescription.sdp):sessionDescription.sdp},this.Skylink=Skylink,window.Skylink=Skylink}).call(this);